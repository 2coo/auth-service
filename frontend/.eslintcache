[{"/Users/giva/projects/tomujin/microservices/auth-service/frontend/src/index.tsx":"1","/Users/giva/projects/tomujin/microservices/auth-service/frontend/src/reportWebVitals.ts":"2","/Users/giva/projects/tomujin/microservices/auth-service/frontend/src/theme/index.ts":"3","/Users/giva/projects/tomujin/microservices/auth-service/frontend/src/utils/route-composer/index.tsx":"4","/Users/giva/projects/tomujin/microservices/auth-service/frontend/src/layout/Layout.tsx":"5","/Users/giva/projects/tomujin/microservices/auth-service/frontend/src/view/landing/Landing.tsx":"6","/Users/giva/projects/tomujin/microservices/auth-service/frontend/src/view/login/LoginPage.tsx":"7","/Users/giva/projects/tomujin/microservices/auth-service/frontend/src/view/app/home/Home.tsx":"8","/Users/giva/projects/tomujin/microservices/auth-service/frontend/src/view/app/profile/Profile.tsx":"9","/Users/giva/projects/tomujin/microservices/auth-service/frontend/src/components/protected-router/ProtectedRouter.tsx":"10","/Users/giva/projects/tomujin/microservices/auth-service/frontend/src/store/auth/context.tsx":"11","/Users/giva/projects/tomujin/microservices/auth-service/frontend/src/store/auth/reducers.tsx":"12","/Users/giva/projects/tomujin/microservices/auth-service/frontend/src/routes/index.ts":"13","/Users/giva/projects/tomujin/microservices/auth-service/frontend/src/view/dialog/Dialog.tsx":"14","/Users/giva/projects/tomujin/microservices/auth-service/frontend/src/utils/api/index.ts":"15","/Users/giva/projects/tomujin/microservices/auth-service/frontend/src/components/full-redirect/FullRedirect.tsx":"16","/Users/giva/projects/tomujin/microservices/auth-service/frontend/src/view/register/Register.tsx":"17","/Users/giva/projects/tomujin/microservices/auth-service/frontend/src/view/reset-password/ResetPassword.tsx":"18","/Users/giva/projects/tomujin/microservices/auth-service/frontend/src/components/copyright/Copyright.tsx":"19","/Users/giva/projects/tomujin/microservices/auth-service/frontend/src/store/theme/context.tsx":"20","/Users/giva/projects/tomujin/microservices/auth-service/frontend/src/store/theme/reducers.tsx":"21","/Users/giva/projects/tomujin/microservices/auth-service/frontend/src/view/signout/Signout.tsx":"22"},{"size":1230,"mtime":1607610878332,"results":"23","hashOfConfig":"24"},{"size":425,"mtime":1607337073534,"results":"25","hashOfConfig":"24"},{"size":295,"mtime":1607409290675,"results":"26","hashOfConfig":"24"},{"size":867,"mtime":1607337073538,"results":"27","hashOfConfig":"24"},{"size":5545,"mtime":1607671272696,"results":"28","hashOfConfig":"24"},{"size":228,"mtime":1607337073539,"results":"29","hashOfConfig":"24"},{"size":3254,"mtime":1607602992388,"results":"30","hashOfConfig":"24"},{"size":346,"mtime":1607437193296,"results":"31","hashOfConfig":"24"},{"size":118,"mtime":1607337073539,"results":"32","hashOfConfig":"24"},{"size":1780,"mtime":1607672471629,"results":"33","hashOfConfig":"24"},{"size":972,"mtime":1607611101723,"results":"34","hashOfConfig":"24"},{"size":472,"mtime":1607610899616,"results":"35","hashOfConfig":"24"},{"size":1330,"mtime":1607668985890,"results":"36","hashOfConfig":"24"},{"size":7826,"mtime":1607526571686,"results":"37","hashOfConfig":"24"},{"size":499,"mtime":1607436928844,"results":"38","hashOfConfig":"24"},{"size":773,"mtime":1607672487343,"results":"39","hashOfConfig":"24"},{"size":5096,"mtime":1607611146351,"results":"40","hashOfConfig":"24"},{"size":4699,"mtime":1607598629504,"results":"41","hashOfConfig":"24"},{"size":441,"mtime":1607598331160,"results":"42","hashOfConfig":"24"},{"size":692,"mtime":1607337073536,"results":"43","hashOfConfig":"24"},{"size":382,"mtime":1607337073537,"results":"44","hashOfConfig":"24"},{"size":627,"mtime":1607673866525,"results":"45","hashOfConfig":"24"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},"itv2ha",{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57","usedDeprecatedRules":"48"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"68","usedDeprecatedRules":"48"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"79"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"84","usedDeprecatedRules":"48"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/giva/projects/tomujin/microservices/auth-service/frontend/src/index.tsx",[],["95","96"],"/Users/giva/projects/tomujin/microservices/auth-service/frontend/src/reportWebVitals.ts",[],"/Users/giva/projects/tomujin/microservices/auth-service/frontend/src/theme/index.ts",[],"/Users/giva/projects/tomujin/microservices/auth-service/frontend/src/utils/route-composer/index.tsx",[],"/Users/giva/projects/tomujin/microservices/auth-service/frontend/src/layout/Layout.tsx",["97","98"],"import {\n  AppBar,\n  Toolbar,\n  IconButton,\n  Typography,\n  Badge,\n  makeStyles,\n  Drawer,\n  Divider,\n  List,\n  Container,\n  MenuItem,\n  Menu\n} from \"@material-ui/core\"\nimport { Menu as MenuIcon, Notifications as NotificationsIcon, ChevronLeft as ChevronLeftIcon, AccountCircle } from \"@material-ui/icons\"\nimport clsx from \"clsx\"\nimport { useState } from \"react\";\nimport { useAuthContext } from \"../store/auth/context\";\nimport FullRedirect from \"../components/full-redirect/FullRedirect\"\n\nconst drawerWidth = 240;\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: 'flex',\n  },\n  toolbar: {\n    paddingRight: 24, // keep right padding when drawer closed\n  },\n  toolbarIcon: {\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'flex-end',\n    padding: '0 8px',\n    ...theme.mixins.toolbar,\n  },\n  appBar: {\n    zIndex: theme.zIndex.drawer + 1,\n    transition: theme.transitions.create(['width', 'margin'], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    }),\n  },\n  appBarShift: {\n    marginLeft: drawerWidth,\n    width: `calc(100% - ${drawerWidth}px)`,\n    transition: theme.transitions.create(['width', 'margin'], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.enteringScreen,\n    }),\n  },\n  menuButton: {\n    marginRight: 36,\n  },\n  menuButtonHidden: {\n    display: 'none',\n  },\n  title: {\n    flexGrow: 1,\n  },\n  drawerPaper: {\n    position: 'relative',\n    whiteSpace: 'nowrap',\n    width: drawerWidth,\n    transition: theme.transitions.create('width', {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.enteringScreen,\n    }),\n  },\n  drawerPaperClose: {\n    overflowX: 'hidden',\n    transition: theme.transitions.create('width', {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    }),\n    width: theme.spacing(7),\n    [theme.breakpoints.up('sm')]: {\n      width: theme.spacing(9),\n    },\n  },\n  appBarSpacer: theme.mixins.toolbar,\n  content: {\n    flexGrow: 1,\n    height: '100vh',\n    overflow: 'auto',\n  },\n  container: {\n    paddingTop: theme.spacing(4),\n    paddingBottom: theme.spacing(4),\n  },\n  paper: {\n    padding: theme.spacing(2),\n    display: 'flex',\n    overflow: 'auto',\n    flexDirection: 'column',\n  },\n  fixedHeight: {\n    height: 240,\n  },\n}));\n\nconst App = (props: any) => {\n  const classes = useStyles()\n  const { dispatch } = useAuthContext()\n  const [openDrawer, setOpenDrawer] = useState(true);\n\n  const handleDrawerOpen = () => {\n    setOpenDrawer(true);\n  };\n  const handleDrawerClose = () => {\n    setOpenDrawer(false);\n  };\n\n  const [anchorEl, setAnchorEl] = useState(null);\n  const openMenu = Boolean(anchorEl);\n\n  const handleMenu = (event: any) => {\n    setAnchorEl(event.currentTarget);\n  };\n  const handleClose = () => {\n    setAnchorEl(null);\n  };\n\n  const handleLogout = () => {\n    setAnchorEl(null);\n    setLogginOutEl(<FullRedirect url=\"/logout?logout_url=/logout\" />)\n  }\n  const [logginOutEl, setLogginOutEl] = useState<JSX.Element | null>(null)\n\n  return (<div className={classes.root}>\n    <AppBar position=\"absolute\" className={clsx(classes.appBar, openDrawer && classes.appBarShift)}>\n      <Toolbar className={classes.toolbar}>\n        <IconButton\n          edge=\"start\"\n          color=\"inherit\"\n          aria-label=\"open drawer\"\n          onClick={handleDrawerOpen}\n          className={clsx(classes.menuButton, openDrawer && classes.menuButtonHidden)}\n        >\n          <MenuIcon />\n        </IconButton>\n        <Typography component=\"h1\" variant=\"h6\" color=\"inherit\" noWrap className={classes.title}>\n          Dashboard\n        </Typography>\n        <IconButton color=\"inherit\">\n          <Badge badgeContent={0} color=\"secondary\">\n            <NotificationsIcon />\n          </Badge>\n        </IconButton>\n        <div>\n          <IconButton\n            aria-label=\"account of current user\"\n            aria-controls=\"menu-appbar\"\n            aria-haspopup=\"true\"\n            onClick={handleMenu}\n            color=\"inherit\"\n          >\n            <AccountCircle />\n          </IconButton>\n          <Menu\n            id=\"menu-appbar\"\n            anchorEl={anchorEl}\n            anchorOrigin={{\n              vertical: 'top',\n              horizontal: 'right',\n            }}\n            keepMounted\n            transformOrigin={{\n              vertical: 'top',\n              horizontal: 'right',\n            }}\n            open={openMenu}\n            onClose={handleClose}\n          >\n            <MenuItem onClick={handleClose}>My account</MenuItem>\n            <MenuItem onClick={handleLogout}>\n              {logginOutEl}\n              Logout\n            </MenuItem>\n          </Menu>\n        </div>\n      </Toolbar>\n    </AppBar>\n    <Drawer\n      variant=\"permanent\"\n      classes={{\n        paper: clsx(classes.drawerPaper, !openDrawer && classes.drawerPaperClose),\n      }}\n      open={openDrawer}\n    >\n      <div className={classes.toolbarIcon}>\n        <IconButton onClick={handleDrawerClose}>\n          <ChevronLeftIcon />\n        </IconButton>\n      </div>\n      <Divider />\n      {/* <List>{mainListItems}</List> */}\n      <Divider />\n      {/* <List>{secondaryListItems}</List> */}\n    </Drawer>\n    <main className={classes.content}>\n      <div className={classes.appBarSpacer} />\n      <Container maxWidth=\"lg\" className={classes.container}>\n        {props.children}\n      </Container>\n    </main>\n  </div>)\n};\n\nexport default App;\n","/Users/giva/projects/tomujin/microservices/auth-service/frontend/src/view/landing/Landing.tsx",[],"/Users/giva/projects/tomujin/microservices/auth-service/frontend/src/view/login/LoginPage.tsx",[],"/Users/giva/projects/tomujin/microservices/auth-service/frontend/src/view/app/home/Home.tsx",[],"/Users/giva/projects/tomujin/microservices/auth-service/frontend/src/view/app/profile/Profile.tsx",[],"/Users/giva/projects/tomujin/microservices/auth-service/frontend/src/components/protected-router/ProtectedRouter.tsx",["99"],"import { Fragment, useEffect } from \"react\";\nimport { AuthConsumer, useAuthContext } from \"../../store/auth/context\";\nimport { useAxios } from \"../../utils/api\";\nimport { Backdrop, CircularProgress } from \"@material-ui/core\"\nimport FullRedirect from \"../full-redirect/FullRedirect\"\nimport { useLocation } from \"@reach/router\"\n\nconst PrivateRoute = (props: any) => {\n    let { as: Comp, ...otherProps } = props;\n    const { state, dispatch } = useAuthContext()\n    const [{ data: userProfile, loading, error }, fetch] = useAxios({\n        url: \"/oauth2/userinfo\",\n        withCredentials: true\n    }, { manual: true })\n    const location = useLocation()\n\n    useEffect(() => {\n        if (!state.authenticated && !error && !userProfile) {\n            fetch()\n        }\n        return () => { }\n    }, [state.authenticated, fetch, error, userProfile])\n    useEffect(() => {\n        if (userProfile?.success === true) {\n            dispatch({\n                type: \"ADD_AUTH\",\n                payload: {\n                    authenticated: true,\n                    user: userProfile.data\n                }\n            })\n        }\n        return () => { }\n    }, [userProfile, error, dispatch])\n\n    let decisionComp = (<Backdrop open={loading}>\n        <CircularProgress color=\"inherit\" />\n    </Backdrop>)\n\n    if (error?.request.status === 401) decisionComp = <FullRedirect url={`/oauth2/authorize`} />\n\n    return <AuthConsumer>\n        {auth =>\n            <Fragment>\n                {\n                    userProfile?.success || auth.state.authenticated ?\n                        (<Comp {...otherProps} />)\n                        :\n                        (decisionComp)\n                }\n            </Fragment>\n        }\n    </AuthConsumer >\n};\n\nexport default PrivateRoute;","/Users/giva/projects/tomujin/microservices/auth-service/frontend/src/store/auth/context.tsx",[],"/Users/giva/projects/tomujin/microservices/auth-service/frontend/src/store/auth/reducers.tsx",[],"/Users/giva/projects/tomujin/microservices/auth-service/frontend/src/routes/index.ts",[],"/Users/giva/projects/tomujin/microservices/auth-service/frontend/src/view/dialog/Dialog.tsx",[],"/Users/giva/projects/tomujin/microservices/auth-service/frontend/src/utils/api/index.ts",[],["100","101"],"/Users/giva/projects/tomujin/microservices/auth-service/frontend/src/components/full-redirect/FullRedirect.tsx",[],"/Users/giva/projects/tomujin/microservices/auth-service/frontend/src/view/register/Register.tsx",["102"],"import { Fragment } from \"react\"\nimport Avatar from \"@material-ui/core/Avatar\";\nimport Button from \"@material-ui/core/Button\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport TextField from \"@material-ui/core/TextField\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport Checkbox from \"@material-ui/core/Checkbox\";\nimport Link from \"@material-ui/core/Link\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Box from \"@material-ui/core/Box\";\nimport LockOutlinedIcon from \"@material-ui/icons/LockOutlined\";\nimport Backdrop from \"@material-ui/core/Backdrop\"\nimport Typography from \"@material-ui/core/Typography\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\nimport Alert from \"@material-ui/lab/Alert\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Container from \"@material-ui/core/Container\";\nimport { useAxios } from \"../../utils/api\";\nimport Copyright from \"../../components/copyright/Copyright\"\n\nconst useStyles = makeStyles((theme) => ({\n  paper: {\n    marginTop: theme.spacing(8),\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignItems: \"center\",\n  },\n  avatar: {\n    margin: theme.spacing(1),\n    backgroundColor: theme.palette.secondary.main,\n  },\n  form: {\n    width: \"100%\", // Fix IE 11 issue.\n    marginTop: theme.spacing(3),\n  },\n  submit: {\n    margin: theme.spacing(3, 0, 2),\n  },\n}));\n\nconst SignUp = (props: any) => {\n  const classes = useStyles();\n  const [{ data, loading, error },] = useAxios({\n    url: '/oauth2/register/get/fields',\n    method: \"POST\"\n  })\n  return (\n    <Fragment>\n      <Backdrop open={loading}>\n        <CircularProgress color=\"inherit\" />\n      </Backdrop>\n      {!loading && (<Container component=\"main\" maxWidth=\"xs\">\n        <CssBaseline />\n        <div className={classes.paper}>\n          <Avatar className={classes.avatar}>\n            <LockOutlinedIcon />\n          </Avatar>\n          <Typography component=\"h1\" variant=\"h5\">\n            Sign up\n</Typography>\n          <form className={classes.form} noValidate>\n            {error ? <Fragment>\n              <Alert severity=\"error\">\n                {error.response?.data.error} <br />\n              </Alert>\n              <Box mt={3}>\n                <Grid container justify=\"center\">\n                  <Link href=\"/oauth2/authorize\" variant=\"body2\">\n                    Already have login and password? Sign in\n                  </Link>\n                </Grid>\n              </Box>\n            </Fragment> : (<Fragment>\n              <Grid container spacing={2}>\n                <Grid item xs={12} sm={6}>\n                  <TextField\n                    autoComplete=\"fname\"\n                    name=\"firstName\"\n                    variant=\"outlined\"\n                    required\n                    fullWidth\n                    id=\"firstName\"\n                    label=\"First Name\"\n                    autoFocus\n                  />\n                </Grid>\n                <Grid item xs={12} sm={6}>\n                  <TextField\n                    variant=\"outlined\"\n                    required\n                    fullWidth\n                    id=\"lastName\"\n                    label=\"Last Name\"\n                    name=\"lastName\"\n                    autoComplete=\"lname\"\n                  />\n                </Grid>\n                <Grid item xs={12}>\n                  <TextField\n                    variant=\"outlined\"\n                    required\n                    fullWidth\n                    id=\"email\"\n                    label=\"Email Address\"\n                    name=\"email\"\n                    autoComplete=\"email\"\n                  />\n                </Grid>\n                <Grid item xs={12}>\n                  <TextField\n                    variant=\"outlined\"\n                    required\n                    fullWidth\n                    name=\"password\"\n                    label=\"Password\"\n                    type=\"password\"\n                    id=\"password\"\n                    autoComplete=\"current-password\"\n                  />\n                </Grid>\n                <Grid item xs={12}>\n                  <FormControlLabel\n                    control={<Checkbox value=\"allowExtraEmails\" color=\"primary\" />}\n                    label=\"I want to receive inspiration, marketing promotions and updates via email.\"\n                  />\n                </Grid>\n              </Grid>\n              <Button\n                type=\"submit\"\n                fullWidth\n                variant=\"contained\"\n                color=\"primary\"\n                className={classes.submit}\n              >\n                Sign Up\n  </Button>\n              <Grid container justify=\"flex-end\">\n                <Grid item>\n                  <Link href=\"/oauth2/authorize\" variant=\"body2\">\n                    Already have an account? Sign in\n                  </Link>\n                </Grid>\n              </Grid>\n            </Fragment>)}\n\n          </form>\n        </div>\n        <Box mt={5}>\n          <Copyright />\n        </Box>\n      </Container>)}\n    </Fragment>\n  );\n};\n\nexport default SignUp;\n","/Users/giva/projects/tomujin/microservices/auth-service/frontend/src/view/reset-password/ResetPassword.tsx",[],"/Users/giva/projects/tomujin/microservices/auth-service/frontend/src/components/copyright/Copyright.tsx",[],"/Users/giva/projects/tomujin/microservices/auth-service/frontend/src/store/theme/context.tsx",[],"/Users/giva/projects/tomujin/microservices/auth-service/frontend/src/store/theme/reducers.tsx",[],"/Users/giva/projects/tomujin/microservices/auth-service/frontend/src/view/signout/Signout.tsx",[],{"ruleId":"103","replacedBy":"104"},{"ruleId":"105","replacedBy":"106"},{"ruleId":"107","severity":1,"message":"108","line":10,"column":3,"nodeType":"109","messageId":"110","endLine":10,"endColumn":7},{"ruleId":"107","severity":1,"message":"111","line":104,"column":11,"nodeType":"109","messageId":"110","endLine":104,"endColumn":19},{"ruleId":"107","severity":1,"message":"112","line":15,"column":11,"nodeType":"109","messageId":"110","endLine":15,"endColumn":19},{"ruleId":"103","replacedBy":"113"},{"ruleId":"105","replacedBy":"114"},{"ruleId":"107","severity":1,"message":"115","line":43,"column":12,"nodeType":"109","messageId":"110","endLine":43,"endColumn":16},"no-native-reassign",["116"],"no-negated-in-lhs",["117"],"@typescript-eslint/no-unused-vars","'List' is defined but never used.","Identifier","unusedVar","'dispatch' is assigned a value but never used.","'location' is assigned a value but never used.",["116"],["117"],"'data' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]