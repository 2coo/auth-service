[{"/Users/giva/projects/tomujin/microservices/auth-service/frontend/src/index.tsx":"1","/Users/giva/projects/tomujin/microservices/auth-service/frontend/src/reportWebVitals.ts":"2","/Users/giva/projects/tomujin/microservices/auth-service/frontend/src/theme/index.ts":"3","/Users/giva/projects/tomujin/microservices/auth-service/frontend/src/utils/route-composer/index.tsx":"4","/Users/giva/projects/tomujin/microservices/auth-service/frontend/src/view/landing/Landing.tsx":"5","/Users/giva/projects/tomujin/microservices/auth-service/frontend/src/view/login/LoginPage.tsx":"6","/Users/giva/projects/tomujin/microservices/auth-service/frontend/src/view/app/home/Home.tsx":"7","/Users/giva/projects/tomujin/microservices/auth-service/frontend/src/view/app/profile/Profile.tsx":"8","/Users/giva/projects/tomujin/microservices/auth-service/frontend/src/components/protected-router/ProtectedRouter.tsx":"9","/Users/giva/projects/tomujin/microservices/auth-service/frontend/src/store/auth/context.tsx":"10","/Users/giva/projects/tomujin/microservices/auth-service/frontend/src/store/auth/reducers.tsx":"11","/Users/giva/projects/tomujin/microservices/auth-service/frontend/src/view/dialog/Dialog.tsx":"12","/Users/giva/projects/tomujin/microservices/auth-service/frontend/src/utils/api/index.ts":"13","/Users/giva/projects/tomujin/microservices/auth-service/frontend/src/components/full-redirect/FullRedirect.tsx":"14","/Users/giva/projects/tomujin/microservices/auth-service/frontend/src/view/reset-password/ResetPassword.tsx":"15","/Users/giva/projects/tomujin/microservices/auth-service/frontend/src/components/copyright/Copyright.tsx":"16","/Users/giva/projects/tomujin/microservices/auth-service/frontend/src/store/theme/context.tsx":"17","/Users/giva/projects/tomujin/microservices/auth-service/frontend/src/store/theme/reducers.tsx":"18","/Users/giva/projects/tomujin/microservices/auth-service/frontend/src/view/signout/Signout.tsx":"19","/Users/giva/projects/tomujin/microservices/auth-service/frontend/src/store/ability/context.tsx":"20","/Users/giva/projects/tomujin/microservices/auth-service/frontend/src/store/ability/ability.ts":"21","/Users/giva/projects/tomujin/microservices/auth-service/frontend/src/components/provider-wrapper/ProviderWrapper.tsx":"22","/Users/giva/projects/tomujin/microservices/auth-service/frontend/src/i18n/index.tsx":"23","/Users/giva/projects/tomujin/microservices/auth-service/frontend/src/components/loader/Loader.tsx":"24","/Users/giva/projects/tomujin/microservices/auth-service/frontend/src/assets/jss/components/loaderStyles.tsx":"25","/Users/giva/projects/tomujin/microservices/auth-service/frontend/src/assets/jss/view/loginStyles.tsx":"26","/Users/giva/projects/tomujin/microservices/auth-service/frontend/src/layouts/Layout.tsx":"27","/Users/giva/projects/tomujin/microservices/auth-service/frontend/src/assets/jss/layout/layoutStyles.jsx":"28","/Users/giva/projects/tomujin/microservices/auth-service/frontend/src/components/layout/sider/Sider.tsx":"29","/Users/giva/projects/tomujin/microservices/auth-service/frontend/src/components/layout/menu/Menu.tsx":"30","/Users/giva/projects/tomujin/microservices/auth-service/frontend/src/utils/route/index.ts":"31","/Users/giva/projects/tomujin/microservices/auth-service/frontend/src/routes/index.tsx":"32","/Users/giva/projects/tomujin/microservices/auth-service/frontend/src/components/layout/header/Header.tsx":"33","/Users/giva/projects/tomujin/microservices/auth-service/frontend/src/view/app/user/User.tsx":"34","/Users/giva/projects/tomujin/microservices/auth-service/frontend/src/view/app/charts/insight/Insight.tsx":"35","/Users/giva/projects/tomujin/microservices/auth-service/frontend/src/view/app/charts/analytics/Analytics.tsx":"36","/Users/giva/projects/tomujin/microservices/auth-service/frontend/src/view/app/charts/index.tsx":"37","/Users/giva/projects/tomujin/microservices/auth-service/frontend/src/utils/format/index.ts":"38","/Users/giva/projects/tomujin/microservices/auth-service/frontend/src/components/forms/login/LoginForm.tsx":"39","/Users/giva/projects/tomujin/microservices/auth-service/frontend/src/components/identity-providers/index.tsx":"40","/Users/giva/projects/tomujin/microservices/auth-service/frontend/src/components/identity-providers/google-button/GoogleButton.tsx":"41","/Users/giva/projects/tomujin/microservices/auth-service/frontend/src/components/forms/register/RegisterForm.tsx":"42","/Users/giva/projects/tomujin/microservices/auth-service/frontend/src/assets/jss/view/registerStyles.tsx":"43","/Users/giva/projects/tomujin/microservices/auth-service/frontend/src/view/sign-up/SignUpPage.tsx":"44","/Users/giva/projects/tomujin/microservices/auth-service/frontend/src/components/layout/carousel-form/CarouselForm.tsx":"45","/Users/giva/projects/tomujin/microservices/auth-service/frontend/src/assets/jss/layout/carouselFormStyles.tsx":"46","/Users/giva/projects/tomujin/microservices/auth-service/frontend/src/components/layout/simple-layout/SimpleLayout.tsx":"47","/Users/giva/projects/tomujin/microservices/auth-service/frontend/src/view/validate-email/ValidateEmailPage.tsx":"48","/Users/giva/projects/tomujin/microservices/auth-service/frontend/src/assets/jss/layout/simpleLayoutStyles.tsx":"49","/Users/giva/projects/tomujin/microservices/auth-service/frontend/src/assets/jss/view/validateEmailStyles.tsx":"50"},{"size":894,"mtime":1609998283931,"results":"51","hashOfConfig":"52"},{"size":425,"mtime":1607337073534,"results":"53","hashOfConfig":"52"},{"size":295,"mtime":1609845357682,"results":"54","hashOfConfig":"52"},{"size":887,"mtime":1609998321659,"results":"55","hashOfConfig":"52"},{"size":284,"mtime":1609999874582,"results":"56","hashOfConfig":"52"},{"size":352,"mtime":1610000424503,"results":"57","hashOfConfig":"52"},{"size":1401,"mtime":1609133813530,"results":"58","hashOfConfig":"52"},{"size":118,"mtime":1607337073539,"results":"59","hashOfConfig":"52"},{"size":2460,"mtime":1609822064741,"results":"60","hashOfConfig":"52"},{"size":980,"mtime":1609822056192,"results":"61","hashOfConfig":"52"},{"size":468,"mtime":1609130506123,"results":"62","hashOfConfig":"52"},{"size":7899,"mtime":1609136776845,"results":"63","hashOfConfig":"52"},{"size":499,"mtime":1607436928844,"results":"64","hashOfConfig":"52"},{"size":841,"mtime":1608019318761,"results":"65","hashOfConfig":"52"},{"size":4699,"mtime":1607598629504,"results":"66","hashOfConfig":"52"},{"size":441,"mtime":1607598331160,"results":"67","hashOfConfig":"52"},{"size":692,"mtime":1607337073536,"results":"68","hashOfConfig":"52"},{"size":382,"mtime":1607337073537,"results":"69","hashOfConfig":"52"},{"size":643,"mtime":1607680508872,"results":"70","hashOfConfig":"52"},{"size":574,"mtime":1609132968339,"results":"71","hashOfConfig":"52"},{"size":484,"mtime":1609379530820,"results":"72","hashOfConfig":"52"},{"size":1106,"mtime":1609375725359,"results":"73","hashOfConfig":"52"},{"size":1168,"mtime":1609224721879,"results":"74","hashOfConfig":"52"},{"size":609,"mtime":1609504302015,"results":"75","hashOfConfig":"52"},{"size":1791,"mtime":1609852771206,"results":"76","hashOfConfig":"52"},{"size":560,"mtime":1609997068408,"results":"77","hashOfConfig":"52"},{"size":1555,"mtime":1609596116791,"results":"78","hashOfConfig":"52"},{"size":2345,"mtime":1609573398615,"results":"79","hashOfConfig":"52"},{"size":1014,"mtime":1609596019997,"results":"80","hashOfConfig":"52"},{"size":1948,"mtime":1609596009033,"results":"81","hashOfConfig":"52"},{"size":1275,"mtime":1609595774910,"results":"82","hashOfConfig":"52"},{"size":2915,"mtime":1610073462141,"results":"83","hashOfConfig":"52"},{"size":4337,"mtime":1609574021518,"results":"84","hashOfConfig":"52"},{"size":107,"mtime":1609576645368,"results":"85","hashOfConfig":"52"},{"size":118,"mtime":1609577749518,"results":"86","hashOfConfig":"52"},{"size":134,"mtime":1609577860142,"results":"87","hashOfConfig":"52"},{"size":156,"mtime":1609748339217,"results":"88","hashOfConfig":"52"},{"size":812,"mtime":1609909906509,"results":"89","hashOfConfig":"52"},{"size":6196,"mtime":1610031294467,"results":"90","hashOfConfig":"52"},{"size":125,"mtime":1609897661347,"results":"91","hashOfConfig":"52"},{"size":1439,"mtime":1609599550305,"results":"92","hashOfConfig":"52"},{"size":6192,"mtime":1610000507169,"results":"93","hashOfConfig":"52"},{"size":476,"mtime":1609921829198,"results":"94","hashOfConfig":"52"},{"size":366,"mtime":1610000440441,"results":"95","hashOfConfig":"52"},{"size":2646,"mtime":1610000478561,"results":"96","hashOfConfig":"52"},{"size":1047,"mtime":1609996177024,"results":"97","hashOfConfig":"52"},{"size":1869,"mtime":1610024916277,"results":"98","hashOfConfig":"52"},{"size":6501,"mtime":1610098356220,"results":"99","hashOfConfig":"52"},{"size":722,"mtime":1610069555968,"results":"100","hashOfConfig":"52"},{"size":1725,"mtime":1610070698100,"results":"101","hashOfConfig":"52"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},"itv2ha",{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"121","usedDeprecatedRules":"104"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"142","messages":"143","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"144","messages":"145","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"146","usedDeprecatedRules":"104"},{"filePath":"147","messages":"148","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"149","messages":"150","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"151","messages":"152","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"153","messages":"154","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"155","messages":"156","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"157","messages":"158","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"159","messages":"160","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"161"},{"filePath":"162","messages":"163","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"164","messages":"165","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"166","messages":"167","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"168","messages":"169","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"170","messages":"171","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"172","messages":"173","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"174","messages":"175","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"176","messages":"177","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"178","messages":"179","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"180","messages":"181","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"182","messages":"183","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"184","usedDeprecatedRules":"104"},{"filePath":"185","messages":"186","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"187","messages":"188","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"189"},{"filePath":"190","messages":"191","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"192","usedDeprecatedRules":"104"},{"filePath":"193","messages":"194","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"195","messages":"196","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"197","messages":"198","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"199","messages":"200","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"201","messages":"202","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"203","messages":"204","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"205","messages":"206","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"207","messages":"208","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},"/Users/giva/projects/tomujin/microservices/auth-service/frontend/src/index.tsx",[],["209","210"],"/Users/giva/projects/tomujin/microservices/auth-service/frontend/src/reportWebVitals.ts",[],"/Users/giva/projects/tomujin/microservices/auth-service/frontend/src/theme/index.ts",[],"/Users/giva/projects/tomujin/microservices/auth-service/frontend/src/utils/route-composer/index.tsx",[],"/Users/giva/projects/tomujin/microservices/auth-service/frontend/src/view/landing/Landing.tsx",[],"/Users/giva/projects/tomujin/microservices/auth-service/frontend/src/view/login/LoginPage.tsx",[],"/Users/giva/projects/tomujin/microservices/auth-service/frontend/src/view/app/home/Home.tsx",[],"/Users/giva/projects/tomujin/microservices/auth-service/frontend/src/view/app/profile/Profile.tsx",[],"/Users/giva/projects/tomujin/microservices/auth-service/frontend/src/components/protected-router/ProtectedRouter.tsx",["211","212","213"],"import { unpackRules } from '@casl/ability/extra';\nimport { makeStyles } from \"@material-ui/core\";\nimport { Fragment, useEffect } from \"react\";\nimport { useAbility } from \"../../store/ability/context\";\nimport { AuthConsumer, useAuthContext } from \"../../store/auth/context\";\nimport { useAxios } from \"../../utils/api\";\nimport FullRedirect from \"../full-redirect/FullRedirect\";\nimport Loader from '../loader/Loader';\n\nconst useStyles = makeStyles((theme) => ({\n    Backdrop: {\n        zIndex: 1202\n    }\n}))\n\nconst ProtectedRoute = (props: any) => {\n    let { as: Comp, ...otherProps } = props;\n    const { state, dispatch } = useAuthContext()\n    const ability = useAbility()\n    const [{ data: userProfile, loading, error }, fetch] = useAxios({\n        url: \"/oauth2/userinfo\",\n        withCredentials: true\n    }, { manual: true })\n\n    const [{ data: userAbilities, loading: abilityLoading, error: abilityError }, fetchAbility] = useAxios({\n        url: \"/myabilities\",\n        withCredentials: true\n    }, { manual: true })\n\n    useEffect(() => {\n        if (!state.authenticated && !error && !userProfile) {\n            fetch()\n        } else {\n            fetchAbility()\n        }\n        return () => { }\n    }, [state.authenticated, fetch, error, userProfile, fetchAbility])\n    useEffect(() => {\n        if (userProfile?.success === true) {\n            fetchAbility()\n            dispatch({\n                type: \"ADD_AUTH\",\n                payload: {\n                    authenticated: true,\n                    user: userProfile.data\n                }\n            })\n        }\n        return () => { }\n    }, [userProfile, error, dispatch, fetchAbility])\n\n    useEffect(() => {\n        if (userAbilities?.success === true) {\n            ability.update(unpackRules(userAbilities?.data?.rules))\n        }\n        return () => { }\n    }, [userAbilities, ability])\n\n    let decisionComp = <Fragment />\n\n    // if (error || abilityError) decisionComp = <FullRedirect url={`/oauth2/authorize`} />\n    return <AuthConsumer>\n        {auth =>\n            <Fragment>\n                <Loader spinning={loading || abilityLoading} fullScreen={true} />\n                {\n                    userProfile?.success || auth.state.authenticated ?\n                        (<Comp {...otherProps} />)\n                        :\n                        decisionComp\n                }\n            </Fragment>\n        }\n    </AuthConsumer >\n};\n\nexport default ProtectedRoute;","/Users/giva/projects/tomujin/microservices/auth-service/frontend/src/store/auth/context.tsx",[],"/Users/giva/projects/tomujin/microservices/auth-service/frontend/src/store/auth/reducers.tsx",[],"/Users/giva/projects/tomujin/microservices/auth-service/frontend/src/view/dialog/Dialog.tsx",[],"/Users/giva/projects/tomujin/microservices/auth-service/frontend/src/utils/api/index.ts",[],"/Users/giva/projects/tomujin/microservices/auth-service/frontend/src/components/full-redirect/FullRedirect.tsx",[],"/Users/giva/projects/tomujin/microservices/auth-service/frontend/src/view/reset-password/ResetPassword.tsx",[],"/Users/giva/projects/tomujin/microservices/auth-service/frontend/src/components/copyright/Copyright.tsx",[],"/Users/giva/projects/tomujin/microservices/auth-service/frontend/src/store/theme/context.tsx",[],"/Users/giva/projects/tomujin/microservices/auth-service/frontend/src/store/theme/reducers.tsx",[],"/Users/giva/projects/tomujin/microservices/auth-service/frontend/src/view/signout/Signout.tsx",[],"/Users/giva/projects/tomujin/microservices/auth-service/frontend/src/store/ability/context.tsx",[],"/Users/giva/projects/tomujin/microservices/auth-service/frontend/src/store/ability/ability.ts",["214"],"import { AbilityBuilder, Ability, AbilityClass } from \"@casl/ability\";\n\nexport const AppAbility = Ability as AbilityClass<Ability<[any, any]>>;\n\nexport default function defineRulesFor() {\n  const { can, rules } = new AbilityBuilder(AppAbility);\n  return rules;\n}\n\nexport function buildAbilityFor(): Ability<[any, any]> {\n  return new AppAbility(defineRulesFor(), {\n    // https://casl.js.org/v5/en/guide/subject-type-detection\n    detectSubjectType: (object) => object!.type,\n  });\n}\n","/Users/giva/projects/tomujin/microservices/auth-service/frontend/src/components/provider-wrapper/ProviderWrapper.tsx",[],"/Users/giva/projects/tomujin/microservices/auth-service/frontend/src/i18n/index.tsx",[],"/Users/giva/projects/tomujin/microservices/auth-service/frontend/src/components/loader/Loader.tsx",[],"/Users/giva/projects/tomujin/microservices/auth-service/frontend/src/assets/jss/components/loaderStyles.tsx",[],"/Users/giva/projects/tomujin/microservices/auth-service/frontend/src/assets/jss/view/loginStyles.tsx",[],"/Users/giva/projects/tomujin/microservices/auth-service/frontend/src/layouts/Layout.tsx",[],"/Users/giva/projects/tomujin/microservices/auth-service/frontend/src/assets/jss/layout/layoutStyles.jsx",[],["215","216"],"/Users/giva/projects/tomujin/microservices/auth-service/frontend/src/components/layout/sider/Sider.tsx",[],"/Users/giva/projects/tomujin/microservices/auth-service/frontend/src/components/layout/menu/Menu.tsx",[],"/Users/giva/projects/tomujin/microservices/auth-service/frontend/src/utils/route/index.ts",[],"/Users/giva/projects/tomujin/microservices/auth-service/frontend/src/routes/index.tsx",[],"/Users/giva/projects/tomujin/microservices/auth-service/frontend/src/components/layout/header/Header.tsx",[],"/Users/giva/projects/tomujin/microservices/auth-service/frontend/src/view/app/user/User.tsx",[],"/Users/giva/projects/tomujin/microservices/auth-service/frontend/src/view/app/charts/insight/Insight.tsx",[],"/Users/giva/projects/tomujin/microservices/auth-service/frontend/src/view/app/charts/analytics/Analytics.tsx",[],"/Users/giva/projects/tomujin/microservices/auth-service/frontend/src/view/app/charts/index.tsx",[],"/Users/giva/projects/tomujin/microservices/auth-service/frontend/src/utils/format/index.ts",[],"/Users/giva/projects/tomujin/microservices/auth-service/frontend/src/components/forms/login/LoginForm.tsx",["217","218","219"],"import { LoadingOutlined, LockOutlined, UserOutlined } from '@ant-design/icons';\nimport { Box } from \"@material-ui/core\";\nimport { Link, useLocation } from \"@reach/router\";\nimport { Alert, Avatar, Button, Checkbox, Col, Divider, Form, Input, Row, Space, Spin, Typography } from \"antd\";\nimport queryString from \"querystring\";\nimport { FormEvent, Fragment, PropsWithChildren, useRef, useState } from \"react\";\nimport { Helmet } from \"react-helmet-async\";\nimport { StringParam, useQueryParam } from \"use-query-params\";\nimport Logo from '../../../assets/img/Logo/Asset 10@300x.png';\nimport loginStyles from \"../../../assets/jss/view/loginStyles\";\nimport { useAxios } from \"../../../utils/api\";\nimport { formatQueryString } from \"../../../utils/format\";\nimport IDENTITY_PROVIDERS from \"../../identity-providers\";\n\nconst FormItem = Form.Item\nconst { Text } = Typography\n\ninterface Props extends PropsWithChildren<any> {\n}\n\nconst antIcon = <LoadingOutlined style={{ fontSize: 24 }} spin />;\n\nconst LoginForm = ({ }: Props) => {\n    const classes = loginStyles();\n    const location = useLocation()\n    const [clientId,] = useQueryParam('client_id', StringParam);\n    const [error,] = useQueryParam('error', StringParam)\n    const [submitting, setSubmitting] = useState(false)\n    const [fields, setFields] = useState<any[]>([]);\n    const [form] = Form.useForm();\n    const formHiddenEl = useRef<HTMLFormElement | undefined | null>()\n    const [{ data: providers,\n        loading: loadingProviders,\n        error: errorProviders\n    }, getProviders] = useAxios({\n        url: '/oauth2/providers',\n        method: \"GET\", params: { client_id: clientId }\n    })\n    const handleOk = (e: FormEvent<HTMLFormElement>) => {\n        formHiddenEl.current?.submit()\n    }\n    const queryParams = queryString.parse(location.search.substr(1))\n    return (\n        <Fragment>\n            <Helmet>\n                <title>Login</title>\n                <link rel=\"stylesheet\" type=\"text/css\" href=\"//fonts.googleapis.com/css?family=Open+Sans\" />\n            </Helmet>\n            <div className={classes.form}>\n                {error && <Row gutter={[0, 32]}>\n                    <Col span={24}>\n                        <Alert message={atob(error)} type=\"error\" showIcon closable />\n                    </Col>\n                </Row>}\n                <Box mb={4}>\n                    <Row justify=\"center\" gutter={[0, 32]} align=\"middle\">\n                        <Space>\n                            <Avatar size={40} shape=\"square\" src={Logo} />\n                            <span className={classes.company}>TOMUJIN DIGITAL</span>\n                        </Space>\n                    </Row>\n                </Box>\n                <Form initialValues={{ remember_me: true }} onFinish={handleOk} form={form} onFieldsChange={(changedFields, allFields) => {\n                    setFields(allFields)\n                }}>\n                    <FormItem name=\"username\"\n                        rules={[{ required: true, message: 'Please input email or username!' }]} hasFeedback>\n                        <Input\n                            size=\"large\"\n                            prefix={<UserOutlined className={classes.inputIcon} />}\n                            placeholder={`Username or Email`}\n                        />\n                    </FormItem>\n                    <FormItem name=\"password\"\n                        rules={[{ required: true, message: 'Please input email or username!' }]} hasFeedback>\n                        <Input\n                            prefix={<LockOutlined className={classes.inputIcon} />}\n                            size=\"large\"\n                            type=\"password\"\n                            placeholder={`Password`}\n                        />\n                    </FormItem>\n                    <Form.Item>\n                        <Form.Item name=\"remember_me\" valuePropName=\"checked\" noStyle>\n                            <Checkbox>Remember me</Checkbox>\n                        </Form.Item>\n                        <Link className={classes.loginFormForgot} to=\"/password/new\">\n                            Forgot password?\n                            </Link>\n                    </Form.Item>\n                    <Space size={15} direction=\"vertical\" style={{\n                        width: \"100%\"\n                    }}>\n                        <Row>\n                            <Button\n                                size=\"large\"\n                                className={classes.button}\n                                type=\"primary\"\n                                htmlType=\"submit\"\n                                loading={submitting}\n                            >\n                                Log in\n                            </Button>\n                        </Row>\n                        <Row justify=\"center\">\n                            <Text type=\"secondary\">Don't have an account yet? <Link to={`${location.pathname === '/login' ? '/signup' : '/oauth2/register'}${formatQueryString(queryParams)}`}>Register now</Link></Text>\n                        </Row>\n                    </Space>\n                    <Row justify=\"center\">\n                        {providers?.data.length > 0 && <Divider plain>OR</Divider>}\n                        {loadingProviders ? <Spin indicator={antIcon} /> : providers?.data.map((provider: 'GOOGLE') => {\n                            const ProviderButton = IDENTITY_PROVIDERS?.[provider];\n                            const _queryParams = { ...queryParams }\n                            _queryParams[\"identity_provider\"] = provider\n                            return <a key={provider} href={`/oauth2/authorize${formatQueryString(_queryParams)}`}><ProviderButton /></a>\n                        })}\n                    </Row>\n                </Form>\n                <form ref={(el) => formHiddenEl.current = el} method=\"post\" onSubmit={() => setSubmitting(true)}>\n                    {\n                        fields.map((field) => <input key={field.name[0]} name={field.name[0]} value={field.value} type=\"hidden\" />)\n                    }\n                </form>\n            </div>\n        </Fragment >\n    )\n}\n\nexport default LoginForm\n","/Users/giva/projects/tomujin/microservices/auth-service/frontend/src/components/identity-providers/index.tsx",[],"/Users/giva/projects/tomujin/microservices/auth-service/frontend/src/components/identity-providers/google-button/GoogleButton.tsx",[],["220","221"],"/Users/giva/projects/tomujin/microservices/auth-service/frontend/src/components/forms/register/RegisterForm.tsx",["222","223"],"import { EyeInvisibleOutlined, EyeTwoTone, LoadingOutlined } from '@ant-design/icons'\nimport { Box } from \"@material-ui/core\"\nimport { Link, useLocation } from \"@reach/router\"\nimport { Alert, Button, Col, Form, Input, Row, Spin, Typography } from \"antd\"\nimport queryString from \"querystring\"\nimport { Fragment } from \"react\"\nimport registerStyles from '../../../assets/jss/view/registerStyles'\nimport { useAxios } from \"../../../utils/api\"\nimport { formatQueryString } from \"../../../utils/format\"\nimport FullRedirect from \"../../full-redirect/FullRedirect\"\nimport { Helmet } from \"react-helmet-async\";\n\nconst antIcon = <LoadingOutlined style={{ fontSize: 24 }} spin />;\nconst { Title } = Typography\nconst FormItem = Form.Item\n\nconst RegisterForm = () => {\n    const classes = registerStyles()\n    const location = useLocation()\n    const [{ data, loading, error },] = useAxios({\n        url: '/oauth2/register/get/fields',\n        method: \"POST\"\n    })\n    const queryParams = queryString.parse(location.search)\n    const [form] = Form.useForm();\n    const [{\n        data: registerData,\n        loading: registerLoading,\n        error: registerError\n    }, register] = useAxios({\n        url: `/oauth2/register`,\n        method: 'POST',\n        params: queryParams\n    }, {\n        manual: true,\n    })\n    const handleOk = () => {\n        register({\n            data: form.getFieldsValue(),\n            headers: {\n                'X-Requested-With': 'XMLHttpRequest'\n            }\n        })\n    }\n    const EyeTwoToneIcon = <EyeTwoTone className={classes.inputIcon} />\n    const EyeInvisibleOutlinedIcon = <EyeInvisibleOutlined className={classes.inputIcon} />\n    return (\n        <Fragment>\n            <Helmet>\n                <title>Sign Up</title>\n                <link rel=\"stylesheet\" type=\"text/css\" href=\"//fonts.googleapis.com/css?family=Open+Sans\" />\n            </Helmet>\n            <div className={classes.form}>\n                <Row justify='center'>\n                    <Title className={classes.title} level={3}>Sign Up</Title>\n                </Row>\n                {error && <Row gutter={[0, 32]}>\n                    <Col span={24}>\n                        <Alert message={error.response?.data.message} type=\"error\" showIcon closable />\n                    </Col>\n                </Row>}\n                {loading ? <Row justify=\"center\"><Box p={3}><Spin indicator={antIcon} /></Box></Row> :\n                    !error && (registerData?.success ? <FullRedirect url={`/oauth2/authorize${formatQueryString(queryParams)}`} /> : <Fragment>\n                        <Form layout=\"vertical\" initialValues={{ remember_me: true }} onFinish={handleOk} form={form}>\n                            <FormItem label=\"Fullname\">\n                                <FormItem name=\"fullname\"\n                                    messageVariables={{\n                                        name: 'Fullname'\n                                    }}\n                                    noStyle\n                                    required\n                                    rules={[{ required: true, }]} hasFeedback>\n                                    <Input\n                                        name=\"Fullname\"\n                                        size=\"large\"\n                                        placeholder={`Brene Brown`}\n                                    />\n                                </FormItem>\n                            </FormItem>\n                            <FormItem label=\"Email\">\n                                <FormItem name=\"email\"\n                                    messageVariables={{\n                                        name: 'Email'\n                                    }}\n                                    noStyle\n                                    rules={[{ required: true, type: 'email', }]} hasFeedback>\n                                    <Input\n                                        name=\"email\"\n                                        size=\"large\"\n                                        placeholder={`example@site.com`}\n                                    />\n                                </FormItem>\n                            </FormItem>\n                            <FormItem label=\"Choosing password\">\n                                <FormItem name=\"password\"\n                                    messageVariables={{\n                                        name: 'Password'\n                                    }}\n                                    noStyle\n                                    rules={[{ required: true, message: 'Please input a password!' }]}>\n                                    <Input.Password\n                                        name='password'\n                                        iconRender={visible => (visible ? EyeTwoToneIcon : EyeInvisibleOutlinedIcon)}\n                                        size=\"large\"\n                                        type=\"password\"\n                                        placeholder={`•••••••••`}\n                                    />\n                                </FormItem>\n                            </FormItem>\n                            <Row>\n                                <Button\n                                    size=\"large\"\n                                    className={classes.button}\n                                    type=\"primary\"\n                                    htmlType=\"submit\"\n                                    loading={registerLoading}\n                                >\n                                    Sign Up\n                                    </Button>\n                            </Row>\n                        </Form>\n                    </Fragment>)\n                }\n                <Box mt={2} mb={12}>\n                    <Row justify=\"center\">\n                        <Link to={`${location.pathname === \"/signup\" ? '/login' : '/oauth2/authorize'}${formatQueryString(queryParams)}`}>\n                            Already have an account? Sign in\n                        </Link>\n                    </Row>\n                </Box>\n            </div>\n        </Fragment>\n    )\n}\n\nexport default RegisterForm\n","/Users/giva/projects/tomujin/microservices/auth-service/frontend/src/assets/jss/view/registerStyles.tsx",[],"/Users/giva/projects/tomujin/microservices/auth-service/frontend/src/view/sign-up/SignUpPage.tsx",[],"/Users/giva/projects/tomujin/microservices/auth-service/frontend/src/components/layout/carousel-form/CarouselForm.tsx",[],"/Users/giva/projects/tomujin/microservices/auth-service/frontend/src/assets/jss/layout/carouselFormStyles.tsx",[],"/Users/giva/projects/tomujin/microservices/auth-service/frontend/src/components/layout/simple-layout/SimpleLayout.tsx",[],"/Users/giva/projects/tomujin/microservices/auth-service/frontend/src/view/validate-email/ValidateEmailPage.tsx",["224","225","226"],"/Users/giva/projects/tomujin/microservices/auth-service/frontend/src/assets/jss/layout/simpleLayoutStyles.tsx",[],"/Users/giva/projects/tomujin/microservices/auth-service/frontend/src/assets/jss/view/validateEmailStyles.tsx",[],{"ruleId":"227","replacedBy":"228"},{"ruleId":"229","replacedBy":"230"},{"ruleId":"231","severity":1,"message":"232","line":7,"column":8,"nodeType":"233","messageId":"234","endLine":7,"endColumn":20},{"ruleId":"231","severity":1,"message":"235","line":10,"column":7,"nodeType":"233","messageId":"234","endLine":10,"endColumn":16},{"ruleId":"231","severity":1,"message":"236","line":25,"column":67,"nodeType":"233","messageId":"234","endLine":25,"endColumn":79},{"ruleId":"231","severity":1,"message":"237","line":6,"column":11,"nodeType":"233","messageId":"234","endLine":6,"endColumn":14},{"ruleId":"227","replacedBy":"228"},{"ruleId":"229","replacedBy":"230"},{"ruleId":"238","severity":1,"message":"239","line":23,"column":20,"nodeType":"240","messageId":"241","endLine":23,"endColumn":30},{"ruleId":"231","severity":1,"message":"242","line":34,"column":16,"nodeType":"233","messageId":"234","endLine":34,"endColumn":30},{"ruleId":"231","severity":1,"message":"243","line":35,"column":8,"nodeType":"233","messageId":"234","endLine":35,"endColumn":20},{"ruleId":"227","replacedBy":"244"},{"ruleId":"229","replacedBy":"245"},{"ruleId":"231","severity":1,"message":"246","line":20,"column":14,"nodeType":"233","messageId":"234","endLine":20,"endColumn":18},{"ruleId":"231","severity":1,"message":"247","line":29,"column":16,"nodeType":"233","messageId":"234","endLine":29,"endColumn":29},{"ruleId":"231","severity":1,"message":"248","line":11,"column":9,"nodeType":"233","messageId":"234","endLine":11,"endColumn":14},{"ruleId":"231","severity":1,"message":"249","line":51,"column":16,"nodeType":"233","messageId":"234","endLine":51,"endColumn":25},{"ruleId":"231","severity":1,"message":"250","line":51,"column":29,"nodeType":"233","messageId":"234","endLine":51,"endColumn":36},"no-native-reassign",["251"],"no-negated-in-lhs",["252"],"@typescript-eslint/no-unused-vars","'FullRedirect' is defined but never used.","Identifier","unusedVar","'useStyles' is assigned a value but never used.","'abilityError' is assigned a value but never used.","'can' is assigned a value but never used.","no-empty-pattern","Unexpected empty object pattern.","ObjectPattern","unexpected","'errorProviders' is assigned a value but never used.","'getProviders' is assigned a value but never used.",["251"],["252"],"'data' is assigned a value but never used.","'registerError' is assigned a value but never used.","'Title' is assigned a value but never used.","'infoError' is assigned a value but never used.","'getInfo' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]