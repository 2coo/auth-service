[{"/Users/giva/projects/tomujin/microservices/auth-service/frontend/src/index.tsx":"1","/Users/giva/projects/tomujin/microservices/auth-service/frontend/src/reportWebVitals.ts":"2","/Users/giva/projects/tomujin/microservices/auth-service/frontend/src/theme/index.ts":"3","/Users/giva/projects/tomujin/microservices/auth-service/frontend/src/utils/route-composer/index.tsx":"4","/Users/giva/projects/tomujin/microservices/auth-service/frontend/src/layout/Layout.tsx":"5","/Users/giva/projects/tomujin/microservices/auth-service/frontend/src/view/landing/Landing.tsx":"6","/Users/giva/projects/tomujin/microservices/auth-service/frontend/src/view/login/LoginPage.tsx":"7","/Users/giva/projects/tomujin/microservices/auth-service/frontend/src/view/app/home/Home.tsx":"8","/Users/giva/projects/tomujin/microservices/auth-service/frontend/src/view/app/profile/Profile.tsx":"9","/Users/giva/projects/tomujin/microservices/auth-service/frontend/src/components/protected-router/ProtectedRouter.tsx":"10","/Users/giva/projects/tomujin/microservices/auth-service/frontend/src/store/auth/context.tsx":"11","/Users/giva/projects/tomujin/microservices/auth-service/frontend/src/store/auth/reducers.tsx":"12","/Users/giva/projects/tomujin/microservices/auth-service/frontend/src/routes/index.ts":"13","/Users/giva/projects/tomujin/microservices/auth-service/frontend/src/view/dialog/Dialog.tsx":"14","/Users/giva/projects/tomujin/microservices/auth-service/frontend/src/utils/api/index.ts":"15","/Users/giva/projects/tomujin/microservices/auth-service/frontend/src/components/full-redirect/FullRedirect.tsx":"16","/Users/giva/projects/tomujin/microservices/auth-service/frontend/src/view/register/Register.tsx":"17","/Users/giva/projects/tomujin/microservices/auth-service/frontend/src/view/reset-password/ResetPassword.tsx":"18","/Users/giva/projects/tomujin/microservices/auth-service/frontend/src/components/copyright/Copyright.tsx":"19","/Users/giva/projects/tomujin/microservices/auth-service/frontend/src/store/theme/context.tsx":"20","/Users/giva/projects/tomujin/microservices/auth-service/frontend/src/store/theme/reducers.tsx":"21","/Users/giva/projects/tomujin/microservices/auth-service/frontend/src/view/signout/Signout.tsx":"22","/Users/giva/projects/tomujin/microservices/auth-service/frontend/src/store/ability/context.tsx":"23","/Users/giva/projects/tomujin/microservices/auth-service/frontend/src/store/ability/ability.ts":"24"},{"size":1355,"mtime":1609132252568,"results":"25","hashOfConfig":"26"},{"size":425,"mtime":1607337073534,"results":"27","hashOfConfig":"26"},{"size":295,"mtime":1607409290675,"results":"28","hashOfConfig":"26"},{"size":867,"mtime":1607337073538,"results":"29","hashOfConfig":"26"},{"size":5441,"mtime":1609130906885,"results":"30","hashOfConfig":"26"},{"size":228,"mtime":1607337073539,"results":"31","hashOfConfig":"26"},{"size":3702,"mtime":1608019369965,"results":"32","hashOfConfig":"26"},{"size":1401,"mtime":1609133813530,"results":"33","hashOfConfig":"26"},{"size":118,"mtime":1607337073539,"results":"34","hashOfConfig":"26"},{"size":2567,"mtime":1609135155492,"results":"35","hashOfConfig":"26"},{"size":972,"mtime":1609129827039,"results":"36","hashOfConfig":"26"},{"size":468,"mtime":1609130506123,"results":"37","hashOfConfig":"26"},{"size":1330,"mtime":1607668985890,"results":"38","hashOfConfig":"26"},{"size":7898,"mtime":1609136677912,"results":"39","hashOfConfig":"26"},{"size":499,"mtime":1607436928844,"results":"40","hashOfConfig":"26"},{"size":841,"mtime":1608019318761,"results":"41","hashOfConfig":"26"},{"size":5096,"mtime":1609130911459,"results":"42","hashOfConfig":"26"},{"size":4699,"mtime":1607598629504,"results":"43","hashOfConfig":"26"},{"size":441,"mtime":1607598331160,"results":"44","hashOfConfig":"26"},{"size":692,"mtime":1607337073536,"results":"45","hashOfConfig":"26"},{"size":382,"mtime":1607337073537,"results":"46","hashOfConfig":"26"},{"size":643,"mtime":1607680508872,"results":"47","hashOfConfig":"26"},{"size":574,"mtime":1609132968339,"results":"48","hashOfConfig":"26"},{"size":513,"mtime":1609132239634,"results":"49","hashOfConfig":"26"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},"itv2ha",{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"81"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"86","usedDeprecatedRules":"52"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"101","usedDeprecatedRules":"52"},"/Users/giva/projects/tomujin/microservices/auth-service/frontend/src/index.tsx",[],["102","103"],"/Users/giva/projects/tomujin/microservices/auth-service/frontend/src/reportWebVitals.ts",[],"/Users/giva/projects/tomujin/microservices/auth-service/frontend/src/theme/index.ts",[],"/Users/giva/projects/tomujin/microservices/auth-service/frontend/src/utils/route-composer/index.tsx",[],"/Users/giva/projects/tomujin/microservices/auth-service/frontend/src/layout/Layout.tsx",[],"/Users/giva/projects/tomujin/microservices/auth-service/frontend/src/view/landing/Landing.tsx",[],"/Users/giva/projects/tomujin/microservices/auth-service/frontend/src/view/login/LoginPage.tsx",[],"/Users/giva/projects/tomujin/microservices/auth-service/frontend/src/view/app/home/Home.tsx",[],"/Users/giva/projects/tomujin/microservices/auth-service/frontend/src/view/app/profile/Profile.tsx",[],"/Users/giva/projects/tomujin/microservices/auth-service/frontend/src/components/protected-router/ProtectedRouter.tsx",[],"/Users/giva/projects/tomujin/microservices/auth-service/frontend/src/store/auth/context.tsx",[],"/Users/giva/projects/tomujin/microservices/auth-service/frontend/src/store/auth/reducers.tsx",[],"/Users/giva/projects/tomujin/microservices/auth-service/frontend/src/routes/index.ts",[],"/Users/giva/projects/tomujin/microservices/auth-service/frontend/src/view/dialog/Dialog.tsx",[],"/Users/giva/projects/tomujin/microservices/auth-service/frontend/src/utils/api/index.ts",[],["104","105"],"/Users/giva/projects/tomujin/microservices/auth-service/frontend/src/components/full-redirect/FullRedirect.tsx",[],"/Users/giva/projects/tomujin/microservices/auth-service/frontend/src/view/register/Register.tsx",["106"],"import { Fragment } from \"react\"\nimport Avatar from \"@material-ui/core/Avatar\";\nimport Button from \"@material-ui/core/Button\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport TextField from \"@material-ui/core/TextField\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport Checkbox from \"@material-ui/core/Checkbox\";\nimport Link from \"@material-ui/core/Link\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Box from \"@material-ui/core/Box\";\nimport LockOutlinedIcon from \"@material-ui/icons/LockOutlined\";\nimport Backdrop from \"@material-ui/core/Backdrop\"\nimport Typography from \"@material-ui/core/Typography\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\nimport Alert from \"@material-ui/lab/Alert\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Container from \"@material-ui/core/Container\";\nimport { useAxios } from \"../../utils/api\";\nimport Copyright from \"../../components/copyright/Copyright\"\n\nconst useStyles = makeStyles((theme) => ({\n  paper: {\n    marginTop: theme.spacing(8),\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignItems: \"center\",\n  },\n  avatar: {\n    margin: theme.spacing(1),\n    backgroundColor: theme.palette.secondary.main,\n  },\n  form: {\n    width: \"100%\", // Fix IE 11 issue.\n    marginTop: theme.spacing(3),\n  },\n  submit: {\n    margin: theme.spacing(3, 0, 2),\n  },\n}));\n\nconst SignUp = (props: any) => {\n  const classes = useStyles();\n  const [{ data, loading, error },] = useAxios({\n    url: '/oauth2/register/get/fields',\n    method: \"POST\"\n  })\n  return (\n    <Fragment>\n      <Backdrop open={loading}>\n        <CircularProgress color=\"inherit\" />\n      </Backdrop>\n      {!loading && (<Container component=\"main\" maxWidth=\"xs\">\n        <CssBaseline />\n        <div className={classes.paper}>\n          <Avatar className={classes.avatar}>\n            <LockOutlinedIcon />\n          </Avatar>\n          <Typography component=\"h1\" variant=\"h5\">\n            Sign up\n</Typography>\n          <form className={classes.form} noValidate>\n            {error ? <Fragment>\n              <Alert severity=\"error\">\n                {error.response?.data.error} <br />\n              </Alert>\n              <Box mt={3}>\n                <Grid container justify=\"center\">\n                  <Link href=\"/oauth2/authorize\" variant=\"body2\">\n                    Already have login and password? Sign in\n                  </Link>\n                </Grid>\n              </Box>\n            </Fragment> : (<Fragment>\n              <Grid container spacing={2}>\n                <Grid item xs={12} sm={6}>\n                  <TextField\n                    autoComplete=\"fname\"\n                    name=\"firstName\"\n                    variant=\"outlined\"\n                    required\n                    fullWidth\n                    id=\"firstName\"\n                    label=\"First Name\"\n                    autoFocus\n                  />\n                </Grid>\n                <Grid item xs={12} sm={6}>\n                  <TextField\n                    variant=\"outlined\"\n                    required\n                    fullWidth\n                    id=\"lastName\"\n                    label=\"Last Name\"\n                    name=\"lastName\"\n                    autoComplete=\"lname\"\n                  />\n                </Grid>\n                <Grid item xs={12}>\n                  <TextField\n                    variant=\"outlined\"\n                    required\n                    fullWidth\n                    id=\"email\"\n                    label=\"Email Address\"\n                    name=\"email\"\n                    autoComplete=\"email\"\n                  />\n                </Grid>\n                <Grid item xs={12}>\n                  <TextField\n                    variant=\"outlined\"\n                    required\n                    fullWidth\n                    name=\"password\"\n                    label=\"Password\"\n                    type=\"password\"\n                    id=\"password\"\n                    autoComplete=\"current-password\"\n                  />\n                </Grid>\n                <Grid item xs={12}>\n                  <FormControlLabel\n                    control={<Checkbox value=\"allowExtraEmails\" color=\"primary\" />}\n                    label=\"I want to receive inspiration, marketing promotions and updates via email.\"\n                  />\n                </Grid>\n              </Grid>\n              <Button\n                type=\"submit\"\n                fullWidth\n                variant=\"contained\"\n                color=\"primary\"\n                className={classes.submit}\n              >\n                Sign Up\n  </Button>\n              <Grid container justify=\"flex-end\">\n                <Grid item>\n                  <Link href=\"/oauth2/authorize\" variant=\"body2\">\n                    Already have an account? Sign in\n                  </Link>\n                </Grid>\n              </Grid>\n            </Fragment>)}\n\n          </form>\n        </div>\n        <Box mt={5}>\n          <Copyright />\n        </Box>\n      </Container>)}\n    </Fragment>\n  );\n};\n\nexport default SignUp;\n","/Users/giva/projects/tomujin/microservices/auth-service/frontend/src/view/reset-password/ResetPassword.tsx",[],"/Users/giva/projects/tomujin/microservices/auth-service/frontend/src/components/copyright/Copyright.tsx",[],"/Users/giva/projects/tomujin/microservices/auth-service/frontend/src/store/theme/context.tsx",[],"/Users/giva/projects/tomujin/microservices/auth-service/frontend/src/store/theme/reducers.tsx",[],"/Users/giva/projects/tomujin/microservices/auth-service/frontend/src/view/signout/Signout.tsx",[],"/Users/giva/projects/tomujin/microservices/auth-service/frontend/src/store/ability/context.tsx",[],"/Users/giva/projects/tomujin/microservices/auth-service/frontend/src/store/ability/ability.ts",["107","108"],"import { AbilityBuilder, Ability, AbilityClass } from \"@casl/ability\";\n\nexport type AppAbility = Ability<[any, any]>;\n\nexport const AppAbility = Ability as AbilityClass<AppAbility>;\n\nexport default function defineRulesFor() {\n  const { can, rules } = new AbilityBuilder(AppAbility);\n  return rules;\n}\n\nexport function buildAbilityFor(): AppAbility {\n  return new AppAbility(defineRulesFor(), {\n    // https://casl.js.org/v5/en/guide/subject-type-detection\n    detectSubjectType: (object) => object!.type,\n  });\n}\n",{"ruleId":"109","replacedBy":"110"},{"ruleId":"111","replacedBy":"112"},{"ruleId":"109","replacedBy":"113"},{"ruleId":"111","replacedBy":"114"},{"ruleId":"115","severity":1,"message":"116","line":43,"column":12,"nodeType":"117","messageId":"118","endLine":43,"endColumn":16},{"ruleId":"119","severity":1,"message":"120","line":5,"column":14,"nodeType":"117","messageId":"121","endLine":5,"endColumn":24},{"ruleId":"115","severity":1,"message":"122","line":8,"column":11,"nodeType":"117","messageId":"118","endLine":8,"endColumn":14},"no-native-reassign",["123"],"no-negated-in-lhs",["124"],["123"],["124"],"@typescript-eslint/no-unused-vars","'data' is assigned a value but never used.","Identifier","unusedVar","@typescript-eslint/no-redeclare","'AppAbility' is already defined.","redeclared","'can' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]