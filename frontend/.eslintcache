[{"/Users/giva/projects/tomujin/microservices/auth-service/frontend/src/index.tsx":"1","/Users/giva/projects/tomujin/microservices/auth-service/frontend/src/reportWebVitals.ts":"2","/Users/giva/projects/tomujin/microservices/auth-service/frontend/src/theme/index.ts":"3","/Users/giva/projects/tomujin/microservices/auth-service/frontend/src/utils/route-composer/index.tsx":"4","/Users/giva/projects/tomujin/microservices/auth-service/frontend/src/view/landing/Landing.tsx":"5","/Users/giva/projects/tomujin/microservices/auth-service/frontend/src/view/login/LoginPage.tsx":"6","/Users/giva/projects/tomujin/microservices/auth-service/frontend/src/view/app/home/Home.tsx":"7","/Users/giva/projects/tomujin/microservices/auth-service/frontend/src/view/app/profile/Profile.tsx":"8","/Users/giva/projects/tomujin/microservices/auth-service/frontend/src/components/protected-router/ProtectedRouter.tsx":"9","/Users/giva/projects/tomujin/microservices/auth-service/frontend/src/store/auth/context.tsx":"10","/Users/giva/projects/tomujin/microservices/auth-service/frontend/src/store/auth/reducers.tsx":"11","/Users/giva/projects/tomujin/microservices/auth-service/frontend/src/view/dialog/Dialog.tsx":"12","/Users/giva/projects/tomujin/microservices/auth-service/frontend/src/utils/api/index.ts":"13","/Users/giva/projects/tomujin/microservices/auth-service/frontend/src/components/full-redirect/FullRedirect.tsx":"14","/Users/giva/projects/tomujin/microservices/auth-service/frontend/src/components/copyright/Copyright.tsx":"15","/Users/giva/projects/tomujin/microservices/auth-service/frontend/src/store/theme/context.tsx":"16","/Users/giva/projects/tomujin/microservices/auth-service/frontend/src/store/theme/reducers.tsx":"17","/Users/giva/projects/tomujin/microservices/auth-service/frontend/src/view/signout/Signout.tsx":"18","/Users/giva/projects/tomujin/microservices/auth-service/frontend/src/store/ability/context.tsx":"19","/Users/giva/projects/tomujin/microservices/auth-service/frontend/src/store/ability/ability.ts":"20","/Users/giva/projects/tomujin/microservices/auth-service/frontend/src/components/provider-wrapper/ProviderWrapper.tsx":"21","/Users/giva/projects/tomujin/microservices/auth-service/frontend/src/i18n/index.tsx":"22","/Users/giva/projects/tomujin/microservices/auth-service/frontend/src/components/loader/Loader.tsx":"23","/Users/giva/projects/tomujin/microservices/auth-service/frontend/src/assets/jss/components/loaderStyles.tsx":"24","/Users/giva/projects/tomujin/microservices/auth-service/frontend/src/assets/jss/view/loginStyles.tsx":"25","/Users/giva/projects/tomujin/microservices/auth-service/frontend/src/layouts/Layout.tsx":"26","/Users/giva/projects/tomujin/microservices/auth-service/frontend/src/components/layout/sider/Sider.tsx":"27","/Users/giva/projects/tomujin/microservices/auth-service/frontend/src/components/layout/menu/Menu.tsx":"28","/Users/giva/projects/tomujin/microservices/auth-service/frontend/src/utils/route/index.ts":"29","/Users/giva/projects/tomujin/microservices/auth-service/frontend/src/routes/index.tsx":"30","/Users/giva/projects/tomujin/microservices/auth-service/frontend/src/components/layout/header/Header.tsx":"31","/Users/giva/projects/tomujin/microservices/auth-service/frontend/src/view/app/user/User.tsx":"32","/Users/giva/projects/tomujin/microservices/auth-service/frontend/src/view/app/charts/insight/Insight.tsx":"33","/Users/giva/projects/tomujin/microservices/auth-service/frontend/src/view/app/charts/analytics/Analytics.tsx":"34","/Users/giva/projects/tomujin/microservices/auth-service/frontend/src/view/app/charts/index.tsx":"35","/Users/giva/projects/tomujin/microservices/auth-service/frontend/src/utils/format/index.ts":"36","/Users/giva/projects/tomujin/microservices/auth-service/frontend/src/components/forms/login/LoginForm.tsx":"37","/Users/giva/projects/tomujin/microservices/auth-service/frontend/src/components/identity-providers/index.tsx":"38","/Users/giva/projects/tomujin/microservices/auth-service/frontend/src/components/identity-providers/google-button/GoogleButton.tsx":"39","/Users/giva/projects/tomujin/microservices/auth-service/frontend/src/components/forms/register/RegisterForm.tsx":"40","/Users/giva/projects/tomujin/microservices/auth-service/frontend/src/assets/jss/view/registerStyles.tsx":"41","/Users/giva/projects/tomujin/microservices/auth-service/frontend/src/view/sign-up/SignUpPage.tsx":"42","/Users/giva/projects/tomujin/microservices/auth-service/frontend/src/components/layout/carousel-form/CarouselForm.tsx":"43","/Users/giva/projects/tomujin/microservices/auth-service/frontend/src/assets/jss/layout/carouselFormStyles.tsx":"44","/Users/giva/projects/tomujin/microservices/auth-service/frontend/src/components/layout/simple-layout/SimpleLayout.tsx":"45","/Users/giva/projects/tomujin/microservices/auth-service/frontend/src/view/validate-email/ValidateEmailPage.tsx":"46","/Users/giva/projects/tomujin/microservices/auth-service/frontend/src/assets/jss/layout/simpleLayoutStyles.tsx":"47","/Users/giva/projects/tomujin/microservices/auth-service/frontend/src/assets/jss/view/validateEmailStyles.tsx":"48","/Users/giva/projects/tomujin/microservices/auth-service/frontend/src/assets/jss/layout/layoutStyles.tsx":"49","/Users/giva/projects/tomujin/microservices/auth-service/frontend/src/assets/jss/view/resetPasswordStyles.tsx":"50","/Users/giva/projects/tomujin/microservices/auth-service/frontend/src/view/forgot-password/ForgotPasswordPage.tsx":"51","/Users/giva/projects/tomujin/microservices/auth-service/frontend/src/components/forms/forgot-password/ForgotPasswordForm.tsx":"52"},{"size":894,"mtime":1609998283931,"results":"53","hashOfConfig":"54"},{"size":425,"mtime":1607337073534,"results":"55","hashOfConfig":"54"},{"size":295,"mtime":1609845357682,"results":"56","hashOfConfig":"54"},{"size":887,"mtime":1609998321659,"results":"57","hashOfConfig":"54"},{"size":284,"mtime":1609999874582,"results":"58","hashOfConfig":"54"},{"size":354,"mtime":1610274024923,"results":"59","hashOfConfig":"54"},{"size":1401,"mtime":1609133813530,"results":"60","hashOfConfig":"54"},{"size":118,"mtime":1607337073539,"results":"61","hashOfConfig":"54"},{"size":2460,"mtime":1609822064741,"results":"62","hashOfConfig":"54"},{"size":980,"mtime":1609822056192,"results":"63","hashOfConfig":"54"},{"size":468,"mtime":1609130506123,"results":"64","hashOfConfig":"54"},{"size":7899,"mtime":1609136776845,"results":"65","hashOfConfig":"54"},{"size":499,"mtime":1607436928844,"results":"66","hashOfConfig":"54"},{"size":843,"mtime":1610268689937,"results":"67","hashOfConfig":"54"},{"size":441,"mtime":1607598331160,"results":"68","hashOfConfig":"54"},{"size":692,"mtime":1607337073536,"results":"69","hashOfConfig":"54"},{"size":382,"mtime":1607337073537,"results":"70","hashOfConfig":"54"},{"size":643,"mtime":1607680508872,"results":"71","hashOfConfig":"54"},{"size":574,"mtime":1609132968339,"results":"72","hashOfConfig":"54"},{"size":484,"mtime":1609379530820,"results":"73","hashOfConfig":"54"},{"size":1106,"mtime":1609375725359,"results":"74","hashOfConfig":"54"},{"size":1168,"mtime":1609224721879,"results":"75","hashOfConfig":"54"},{"size":609,"mtime":1609504302015,"results":"76","hashOfConfig":"54"},{"size":1791,"mtime":1609852771206,"results":"77","hashOfConfig":"54"},{"size":560,"mtime":1610274147350,"results":"78","hashOfConfig":"54"},{"size":1555,"mtime":1609596116791,"results":"79","hashOfConfig":"54"},{"size":1014,"mtime":1609596019997,"results":"80","hashOfConfig":"54"},{"size":1948,"mtime":1609596009033,"results":"81","hashOfConfig":"54"},{"size":1275,"mtime":1609595774910,"results":"82","hashOfConfig":"54"},{"size":3056,"mtime":1610293353757,"results":"83","hashOfConfig":"54"},{"size":4337,"mtime":1609574021518,"results":"84","hashOfConfig":"54"},{"size":107,"mtime":1609576645368,"results":"85","hashOfConfig":"54"},{"size":118,"mtime":1609577749518,"results":"86","hashOfConfig":"54"},{"size":134,"mtime":1609577860142,"results":"87","hashOfConfig":"54"},{"size":156,"mtime":1609748339217,"results":"88","hashOfConfig":"54"},{"size":813,"mtime":1610268323087,"results":"89","hashOfConfig":"54"},{"size":6128,"mtime":1610293351006,"results":"90","hashOfConfig":"54"},{"size":125,"mtime":1609897661347,"results":"91","hashOfConfig":"54"},{"size":1439,"mtime":1609599550305,"results":"92","hashOfConfig":"54"},{"size":6088,"mtime":1610290569714,"results":"93","hashOfConfig":"54"},{"size":476,"mtime":1609921829198,"results":"94","hashOfConfig":"54"},{"size":368,"mtime":1610273298511,"results":"95","hashOfConfig":"54"},{"size":2646,"mtime":1610000478561,"results":"96","hashOfConfig":"54"},{"size":1047,"mtime":1609996177024,"results":"97","hashOfConfig":"54"},{"size":1869,"mtime":1610024916277,"results":"98","hashOfConfig":"54"},{"size":9417,"mtime":1610272518424,"results":"99","hashOfConfig":"54"},{"size":724,"mtime":1610273272080,"results":"100","hashOfConfig":"54"},{"size":1725,"mtime":1610070698100,"results":"101","hashOfConfig":"54"},{"size":2345,"mtime":1610276948591,"results":"102","hashOfConfig":"54"},{"size":485,"mtime":1610286958833,"results":"103","hashOfConfig":"54"},{"size":428,"mtime":1610292704088,"results":"104","hashOfConfig":"54"},{"size":3649,"mtime":1610293876888,"results":"105","hashOfConfig":"54"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},"itv2ha",{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"125","usedDeprecatedRules":"108"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"138"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"143","messages":"144","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"145","messages":"146","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"147","messages":"148","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"149","usedDeprecatedRules":"108"},{"filePath":"150","messages":"151","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"152","messages":"153","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"154","messages":"155","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"156","messages":"157","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"158","messages":"159","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"160","messages":"161","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"162","messages":"163","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"164","messages":"165","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"166","messages":"167","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"168","messages":"169","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"170","messages":"171","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"172","messages":"173","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"174","messages":"175","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"176","messages":"177","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"178","messages":"179","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"180","messages":"181","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"182","messages":"183","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"184","messages":"185","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"186","messages":"187","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"188","messages":"189","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"190","usedDeprecatedRules":"108"},{"filePath":"191","messages":"192","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"193","messages":"194","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"195","messages":"196","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"197","messages":"198","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"199","messages":"200","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"201","messages":"202","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"203","usedDeprecatedRules":"108"},{"filePath":"204","messages":"205","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"206","messages":"207","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"208","messages":"209","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"210","messages":"211","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"212","messages":"213","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"214","messages":"215","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/giva/projects/tomujin/microservices/auth-service/frontend/src/index.tsx",[],["216","217"],"/Users/giva/projects/tomujin/microservices/auth-service/frontend/src/reportWebVitals.ts",[],"/Users/giva/projects/tomujin/microservices/auth-service/frontend/src/theme/index.ts",[],"/Users/giva/projects/tomujin/microservices/auth-service/frontend/src/utils/route-composer/index.tsx",[],"/Users/giva/projects/tomujin/microservices/auth-service/frontend/src/view/landing/Landing.tsx",[],"/Users/giva/projects/tomujin/microservices/auth-service/frontend/src/view/login/LoginPage.tsx",[],"/Users/giva/projects/tomujin/microservices/auth-service/frontend/src/view/app/home/Home.tsx",[],"/Users/giva/projects/tomujin/microservices/auth-service/frontend/src/view/app/profile/Profile.tsx",[],"/Users/giva/projects/tomujin/microservices/auth-service/frontend/src/components/protected-router/ProtectedRouter.tsx",["218","219","220"],"import { unpackRules } from '@casl/ability/extra';\nimport { makeStyles } from \"@material-ui/core\";\nimport { Fragment, useEffect } from \"react\";\nimport { useAbility } from \"../../store/ability/context\";\nimport { AuthConsumer, useAuthContext } from \"../../store/auth/context\";\nimport { useAxios } from \"../../utils/api\";\nimport FullRedirect from \"../full-redirect/FullRedirect\";\nimport Loader from '../loader/Loader';\n\nconst useStyles = makeStyles((theme) => ({\n    Backdrop: {\n        zIndex: 1202\n    }\n}))\n\nconst ProtectedRoute = (props: any) => {\n    let { as: Comp, ...otherProps } = props;\n    const { state, dispatch } = useAuthContext()\n    const ability = useAbility()\n    const [{ data: userProfile, loading, error }, fetch] = useAxios({\n        url: \"/oauth2/userinfo\",\n        withCredentials: true\n    }, { manual: true })\n\n    const [{ data: userAbilities, loading: abilityLoading, error: abilityError }, fetchAbility] = useAxios({\n        url: \"/myabilities\",\n        withCredentials: true\n    }, { manual: true })\n\n    useEffect(() => {\n        if (!state.authenticated && !error && !userProfile) {\n            fetch()\n        } else {\n            fetchAbility()\n        }\n        return () => { }\n    }, [state.authenticated, fetch, error, userProfile, fetchAbility])\n    useEffect(() => {\n        if (userProfile?.success === true) {\n            fetchAbility()\n            dispatch({\n                type: \"ADD_AUTH\",\n                payload: {\n                    authenticated: true,\n                    user: userProfile.data\n                }\n            })\n        }\n        return () => { }\n    }, [userProfile, error, dispatch, fetchAbility])\n\n    useEffect(() => {\n        if (userAbilities?.success === true) {\n            ability.update(unpackRules(userAbilities?.data?.rules))\n        }\n        return () => { }\n    }, [userAbilities, ability])\n\n    let decisionComp = <Fragment />\n\n    // if (error || abilityError) decisionComp = <FullRedirect url={`/oauth2/authorize`} />\n    return <AuthConsumer>\n        {auth =>\n            <Fragment>\n                <Loader spinning={loading || abilityLoading} fullScreen={true} />\n                {\n                    userProfile?.success || auth.state.authenticated ?\n                        (<Comp {...otherProps} />)\n                        :\n                        decisionComp\n                }\n            </Fragment>\n        }\n    </AuthConsumer >\n};\n\nexport default ProtectedRoute;","/Users/giva/projects/tomujin/microservices/auth-service/frontend/src/store/auth/context.tsx",[],"/Users/giva/projects/tomujin/microservices/auth-service/frontend/src/store/auth/reducers.tsx",[],"/Users/giva/projects/tomujin/microservices/auth-service/frontend/src/view/dialog/Dialog.tsx",[],"/Users/giva/projects/tomujin/microservices/auth-service/frontend/src/utils/api/index.ts",[],"/Users/giva/projects/tomujin/microservices/auth-service/frontend/src/components/full-redirect/FullRedirect.tsx",[],"/Users/giva/projects/tomujin/microservices/auth-service/frontend/src/components/copyright/Copyright.tsx",[],["221","222"],"/Users/giva/projects/tomujin/microservices/auth-service/frontend/src/store/theme/context.tsx",[],"/Users/giva/projects/tomujin/microservices/auth-service/frontend/src/store/theme/reducers.tsx",[],"/Users/giva/projects/tomujin/microservices/auth-service/frontend/src/view/signout/Signout.tsx",[],"/Users/giva/projects/tomujin/microservices/auth-service/frontend/src/store/ability/context.tsx",[],"/Users/giva/projects/tomujin/microservices/auth-service/frontend/src/store/ability/ability.ts",["223"],"import { AbilityBuilder, Ability, AbilityClass } from \"@casl/ability\";\n\nexport const AppAbility = Ability as AbilityClass<Ability<[any, any]>>;\n\nexport default function defineRulesFor() {\n  const { can, rules } = new AbilityBuilder(AppAbility);\n  return rules;\n}\n\nexport function buildAbilityFor(): Ability<[any, any]> {\n  return new AppAbility(defineRulesFor(), {\n    // https://casl.js.org/v5/en/guide/subject-type-detection\n    detectSubjectType: (object) => object!.type,\n  });\n}\n","/Users/giva/projects/tomujin/microservices/auth-service/frontend/src/components/provider-wrapper/ProviderWrapper.tsx",[],"/Users/giva/projects/tomujin/microservices/auth-service/frontend/src/i18n/index.tsx",[],"/Users/giva/projects/tomujin/microservices/auth-service/frontend/src/components/loader/Loader.tsx",[],"/Users/giva/projects/tomujin/microservices/auth-service/frontend/src/assets/jss/components/loaderStyles.tsx",[],"/Users/giva/projects/tomujin/microservices/auth-service/frontend/src/assets/jss/view/loginStyles.tsx",[],"/Users/giva/projects/tomujin/microservices/auth-service/frontend/src/layouts/Layout.tsx",[],"/Users/giva/projects/tomujin/microservices/auth-service/frontend/src/components/layout/sider/Sider.tsx",[],"/Users/giva/projects/tomujin/microservices/auth-service/frontend/src/components/layout/menu/Menu.tsx",[],"/Users/giva/projects/tomujin/microservices/auth-service/frontend/src/utils/route/index.ts",[],"/Users/giva/projects/tomujin/microservices/auth-service/frontend/src/routes/index.tsx",[],"/Users/giva/projects/tomujin/microservices/auth-service/frontend/src/components/layout/header/Header.tsx",[],"/Users/giva/projects/tomujin/microservices/auth-service/frontend/src/view/app/user/User.tsx",[],"/Users/giva/projects/tomujin/microservices/auth-service/frontend/src/view/app/charts/insight/Insight.tsx",[],"/Users/giva/projects/tomujin/microservices/auth-service/frontend/src/view/app/charts/analytics/Analytics.tsx",[],"/Users/giva/projects/tomujin/microservices/auth-service/frontend/src/view/app/charts/index.tsx",[],"/Users/giva/projects/tomujin/microservices/auth-service/frontend/src/utils/format/index.ts",[],"/Users/giva/projects/tomujin/microservices/auth-service/frontend/src/components/forms/login/LoginForm.tsx",["224","225","226"],"/Users/giva/projects/tomujin/microservices/auth-service/frontend/src/components/identity-providers/index.tsx",[],"/Users/giva/projects/tomujin/microservices/auth-service/frontend/src/components/identity-providers/google-button/GoogleButton.tsx",[],"/Users/giva/projects/tomujin/microservices/auth-service/frontend/src/components/forms/register/RegisterForm.tsx",["227","228"],"import { EyeInvisibleOutlined, EyeTwoTone, LoadingOutlined } from '@ant-design/icons'\nimport { Box } from \"@material-ui/core\"\nimport { Link, useLocation } from \"@reach/router\"\nimport { Alert, Button, Col, Form, Input, Row, Spin, Typography } from \"antd\"\nimport queryString from \"query-string\"\nimport { Fragment } from \"react\"\nimport registerStyles from '../../../assets/jss/view/registerStyles'\nimport { useAxios } from \"../../../utils/api\"\nimport { formatQueryString } from \"../../../utils/format\"\nimport FullRedirect from \"../../full-redirect/FullRedirect\"\nimport { Helmet } from \"react-helmet-async\";\n\nconst antIcon = <LoadingOutlined style={{ fontSize: 24 }} spin />;\nconst { Title } = Typography\nconst FormItem = Form.Item\n\nconst RegisterForm = () => {\n    const classes = registerStyles()\n    const location = useLocation()\n    const [{ data, loading, error },] = useAxios({\n        url: '/oauth2/register/get/fields',\n        method: \"POST\"\n    })\n    const queryParams = queryString.parse(location.search)\n    const [form] = Form.useForm();\n    const [{\n        data: registerData,\n        loading: registerLoading,\n        error: registerError\n    }, register] = useAxios({\n        url: `/oauth2/register`,\n        method: 'POST',\n        params: queryParams\n    }, {\n        manual: true,\n    })\n    const handleOk = () => {\n        register({\n            data: form.getFieldsValue(),\n            headers: {\n                'X-Requested-With': 'XMLHttpRequest'\n            }\n        })\n    }    \n    const EyeTwoToneIcon = <EyeTwoTone className={classes.inputIcon} />\n    const EyeInvisibleOutlinedIcon = <EyeInvisibleOutlined className={classes.inputIcon} />\n    return (\n        <Fragment>\n            <Helmet>\n                <title>Sign Up</title>\n            </Helmet>\n            <div className={classes.form}>\n                <Row justify='center'>\n                    <Title className={classes.title} level={3}>Sign Up</Title>\n                </Row>\n                {error && <Row gutter={[0, 32]}>\n                    <Col span={24}>\n                        <Alert message={error.response?.data.message} type=\"error\" showIcon closable />\n                    </Col>\n                </Row>}\n                {loading ? <Row justify=\"center\"><Box p={3}><Spin indicator={antIcon} /></Box></Row> :\n                    !error && (registerData?.success ? <FullRedirect url={`/oauth2/authorize${formatQueryString(queryParams)}`} /> : <Fragment>\n                        <Form layout=\"vertical\" initialValues={{ remember_me: true }} onFinish={handleOk} form={form}>\n                            <FormItem label=\"Fullname\">\n                                <FormItem name=\"fullname\"\n                                    messageVariables={{\n                                        name: 'Fullname'\n                                    }}\n                                    noStyle\n                                    required\n                                    rules={[{ required: true, }]} hasFeedback>\n                                    <Input\n                                        name=\"Fullname\"\n                                        size=\"large\"\n                                        placeholder={`Brene Brown`}\n                                    />\n                                </FormItem>\n                            </FormItem>\n                            <FormItem label=\"Email\">\n                                <FormItem name=\"email\"\n                                    messageVariables={{\n                                        name: 'Email'\n                                    }}\n                                    noStyle\n                                    rules={[{ required: true, type: 'email', }]} hasFeedback>\n                                    <Input\n                                        name=\"email\"\n                                        size=\"large\"\n                                        placeholder={`example@site.com`}\n                                    />\n                                </FormItem>\n                            </FormItem>\n                            <FormItem label=\"Choosing password\">\n                                <FormItem name=\"password\"\n                                    messageVariables={{\n                                        name: 'Password'\n                                    }}\n                                    noStyle\n                                    rules={[{ required: true, message: 'Please input a password!' }]}>\n                                    <Input.Password\n                                        name='password'\n                                        iconRender={visible => (visible ? EyeTwoToneIcon : EyeInvisibleOutlinedIcon)}\n                                        size=\"large\"\n                                        type=\"password\"\n                                        placeholder={`•••••••••`}\n                                    />\n                                </FormItem>\n                            </FormItem>\n                            <Row>\n                                <Button\n                                    size=\"large\"\n                                    className={classes.button}\n                                    type=\"primary\"\n                                    htmlType=\"submit\"\n                                    loading={registerLoading}\n                                >\n                                    Sign Up\n                                    </Button>\n                            </Row>\n                        </Form>\n                    </Fragment>)\n                }\n                <Box mt={2} mb={12}>\n                    <Row justify=\"center\">\n                        <Link to={`${location.pathname === \"/signup\" ? '/login' : '/oauth2/authorize'}${formatQueryString(queryParams)}`}>\n                            Already have an account? Sign in\n                        </Link>\n                    </Row>\n                </Box>\n            </div>\n        </Fragment>\n    )\n}\n\nexport default RegisterForm\n","/Users/giva/projects/tomujin/microservices/auth-service/frontend/src/assets/jss/view/registerStyles.tsx",[],"/Users/giva/projects/tomujin/microservices/auth-service/frontend/src/view/sign-up/SignUpPage.tsx",[],"/Users/giva/projects/tomujin/microservices/auth-service/frontend/src/components/layout/carousel-form/CarouselForm.tsx",[],"/Users/giva/projects/tomujin/microservices/auth-service/frontend/src/assets/jss/layout/carouselFormStyles.tsx",[],"/Users/giva/projects/tomujin/microservices/auth-service/frontend/src/components/layout/simple-layout/SimpleLayout.tsx",[],"/Users/giva/projects/tomujin/microservices/auth-service/frontend/src/view/validate-email/ValidateEmailPage.tsx",["229","230"],"import { LoadingOutlined } from '@ant-design/icons'\nimport { Box, Hidden, Link } from \"@material-ui/core\"\nimport { Button, Col, Row, Typography, Spin, Alert } from \"antd\"\nimport { Fragment, useEffect, useState } from \"react\"\nimport ReactCodeInput from 'react-code-input'\nimport MailImage from '../../assets/img/pages/paper-plane.png'\nimport validateEmailStyles from \"../../assets/jss/view/validateEmailStyles\"\nimport SimpleLayout from '../../components/layout/simple-layout/SimpleLayout'\nimport { useAxios } from \"../../utils/api\"\nimport FullRedirect from '../../components/full-redirect/FullRedirect'\nimport queryString from 'query-string'\nimport { formatQueryString } from '../../utils/format'\nimport { useLocation } from '@reach/router'\n\nconst { Title, Text } = Typography\nconst antIcon = <LoadingOutlined style={{ fontSize: 24 }} spin />;\n\nconst inputCodeStyles: any = {\n    fontFamily: 'monospace',\n    borderRadius: 6,\n    border: '1px solid lightgrey',\n    boxShadow: 'rgba(0, 0, 0, 0.1) 0px 0px 10px 0px',\n    margin: 4,\n    paddingLeft: 8,\n    paddingRight: 0,\n    width: 46,\n    height: 52,\n    fontSize: 32,\n    boxSizing: 'border-box',\n    color: 'black',\n    backgroundColor: 'white',\n}\n\nconst inputCodeInvalidStyles: any = {\n    fontFamily: 'monospace',\n    borderRadius: 6,\n    border: '1px solid rgb(238, 211, 215)',\n    boxShadow: 'rgba(0, 0, 0, 0.1) 0px 0px 10px 0px',\n    margin: 4,\n    paddingLeft: 8,\n    paddingRight: 0,\n    width: 46,\n    height: 52,\n    fontSize: 32,\n    boxSizing: 'border-box',\n    color: 'rgb(185, 74, 72)',\n    backgroundColor: 'rgb(242, 222, 222)',\n}\n\nconst ValidateEmailPage = () => {\n    const classes = validateEmailStyles()\n    const location = useLocation()\n    const [code, setCode] = useState<string>('')\n    const [isCodeValid, setIsCodeValid] = useState(true)\n    const [{ data: infoData,\n        loading: infoLoading,\n        error: infoError }, getInfo] = useAxios({\n            url: '/signup/validate-email/info',\n            method: 'GET',\n        })\n    const [{ data: verificationData, loading: verificationLoading, error: verificationError }, verify] = useAxios({\n        url: '/signup/validate-email/code',\n        method: 'POST',\n    }, {\n        manual: true\n    })\n    useEffect(() => {\n        if (verificationError?.response?.data?.data?.verified === false) {\n            setIsCodeValid(false)\n        }\n        return () => { }\n    }, [verificationError])\n    const queryParams = queryString.parse(location.search)\n    return (\n        <Fragment>\n            <SimpleLayout>\n                <Row justify=\"center\" align='middle' style={{\n                    height: \"100%\"\n                }}>\n                    <div className={classes.Card}>\n                        {\n                            infoLoading ? <Row justify='center'><Spin indicator={antIcon} /></Row> : verificationData?.data?.verified ?\n                                <Fragment>\n                                    <FullRedirect url={`/oauth2/authorize${formatQueryString(queryParams)}`} />\n                                </Fragment> : infoError ? <Fragment>\n                                    <Alert message={infoError.response?.data?.message} type=\"error\" showIcon closable />\n                                </Fragment> : <Fragment>\n                                        <Row justify=\"center\">\n                                            <span className={classes.H2}>Let's go!</span>\n                                        </Row>\n                                        <Hidden smDown>\n                                            <Row justify='center'>\n                                                <Box mt={2}>\n                                                    <img className={classes.MailImg} alt='Mail' src={MailImage} />\n                                                </Box>\n                                            </Row>\n                                        </Hidden>\n                                        <Row>\n                                            <span className={classes.boxWrapper}>\n                                                <span className={classes.H3}>\n                                                    We just emailed you.\n                                                </span>\n                                                <Row>\n                                                    <Text type=\"secondary\">Please enter the code we emailed you.</Text>\n                                                </Row>\n                                                <Row>\n                                                    <Text>{infoData?.data?.email}</Text>\n                                                </Row>\n                                                <Row>\n                                                    <span className={classes.CodeConfirmationLabel}>\n                                                        <Text strong>Confirmation Code</Text>\n                                                    </span>\n                                                </Row>\n                                                <Row justify='center'>\n                                                    <span className={classes.CodeInputWrapper}>\n                                                        <ReactCodeInput onChange={(value) => {\n                                                            setCode(value)\n                                                            if (!isCodeValid) {\n                                                                setIsCodeValid(true)\n                                                            }\n                                                        }}\n                                                            className={classes.CodeInput}\n                                                            name='code'\n                                                            inputMode='numeric'\n                                                            type='number'\n                                                            fields={4}\n                                                            isValid={isCodeValid}\n                                                            inputStyle={inputCodeStyles}\n                                                            inputStyleInvalid={inputCodeInvalidStyles} />\n                                                    </span>\n                                                </Row>\n                                                {\n                                                    verificationError?.response?.data?.message && <Box marginX={2}>\n                                                        <Alert message={verificationError?.response?.data?.message} type=\"error\" closable showIcon />\n                                                    </Box>\n                                                }\n                                                <Row>\n                                                    <Button\n                                                        size=\"large\"\n                                                        className={classes.button}\n                                                        type=\"primary\"\n                                                        onClick={() => {\n                                                            verify({\n                                                                data: {\n                                                                    code,\n                                                                }\n                                                            })\n                                                        }}\n                                                        loading={verificationLoading}\n                                                    >\n                                                        Verify\n                                                </Button>\n                                                </Row>\n                                                <Box mt={2}>\n                                                    <Row justify='center' gutter={[4, 0]}>\n                                                        <Col>\n                                                            <Link>\n                                                                Resend code\n                                            </Link>\n                                                        </Col>\n                                                        <Col>\n                                                            or\n                                        </Col>\n                                                        <Col>\n                                                            <Link href=\"/logout\">\n                                                                Logout\n                                                </Link>\n                                                        </Col>\n                                                    </Row>\n                                                </Box>\n                                            </span>\n                                        </Row>\n                                    </Fragment>\n                        }\n                    </div>\n                </Row>\n            </SimpleLayout>\n        </Fragment>\n    )\n}\n\nexport default ValidateEmailPage\n","/Users/giva/projects/tomujin/microservices/auth-service/frontend/src/assets/jss/layout/simpleLayoutStyles.tsx",[],"/Users/giva/projects/tomujin/microservices/auth-service/frontend/src/assets/jss/view/validateEmailStyles.tsx",[],"/Users/giva/projects/tomujin/microservices/auth-service/frontend/src/assets/jss/layout/layoutStyles.tsx",[],"/Users/giva/projects/tomujin/microservices/auth-service/frontend/src/assets/jss/view/resetPasswordStyles.tsx",[],"/Users/giva/projects/tomujin/microservices/auth-service/frontend/src/view/forgot-password/ForgotPasswordPage.tsx",[],"/Users/giva/projects/tomujin/microservices/auth-service/frontend/src/components/forms/forgot-password/ForgotPasswordForm.tsx",["231","232","233","234","235","236"],{"ruleId":"237","replacedBy":"238"},{"ruleId":"239","replacedBy":"240"},{"ruleId":"241","severity":1,"message":"242","line":7,"column":8,"nodeType":"243","messageId":"244","endLine":7,"endColumn":20},{"ruleId":"241","severity":1,"message":"245","line":10,"column":7,"nodeType":"243","messageId":"244","endLine":10,"endColumn":16},{"ruleId":"241","severity":1,"message":"246","line":25,"column":67,"nodeType":"243","messageId":"244","endLine":25,"endColumn":79},{"ruleId":"237","replacedBy":"247"},{"ruleId":"239","replacedBy":"248"},{"ruleId":"241","severity":1,"message":"249","line":6,"column":11,"nodeType":"243","messageId":"244","endLine":6,"endColumn":14},{"ruleId":"250","severity":1,"message":"251","line":23,"column":20,"nodeType":"252","messageId":"253","endLine":23,"endColumn":30},{"ruleId":"241","severity":1,"message":"254","line":34,"column":16,"nodeType":"243","messageId":"244","endLine":34,"endColumn":30},{"ruleId":"241","severity":1,"message":"255","line":35,"column":8,"nodeType":"243","messageId":"244","endLine":35,"endColumn":20},{"ruleId":"241","severity":1,"message":"256","line":20,"column":14,"nodeType":"243","messageId":"244","endLine":20,"endColumn":18},{"ruleId":"241","severity":1,"message":"257","line":29,"column":16,"nodeType":"243","messageId":"244","endLine":29,"endColumn":29},{"ruleId":"241","severity":1,"message":"258","line":15,"column":9,"nodeType":"243","messageId":"244","endLine":15,"endColumn":14},{"ruleId":"241","severity":1,"message":"259","line":57,"column":29,"nodeType":"243","messageId":"244","endLine":57,"endColumn":36},{"ruleId":"241","severity":1,"message":"260","line":1,"column":10,"nodeType":"243","messageId":"244","endLine":1,"endColumn":30},{"ruleId":"241","severity":1,"message":"261","line":1,"column":32,"nodeType":"243","messageId":"244","endLine":1,"endColumn":42},{"ruleId":"241","severity":1,"message":"262","line":4,"column":48,"nodeType":"243","messageId":"244","endLine":4,"endColumn":52},{"ruleId":"241","severity":1,"message":"242","line":10,"column":8,"nodeType":"243","messageId":"244","endLine":10,"endColumn":20},{"ruleId":"241","severity":1,"message":"263","line":13,"column":7,"nodeType":"243","messageId":"244","endLine":13,"endColumn":14},{"ruleId":"241","severity":1,"message":"264","line":23,"column":15,"nodeType":"243","messageId":"244","endLine":23,"endColumn":32},"no-native-reassign",["265"],"no-negated-in-lhs",["266"],"@typescript-eslint/no-unused-vars","'FullRedirect' is defined but never used.","Identifier","unusedVar","'useStyles' is assigned a value but never used.","'abilityError' is assigned a value but never used.",["265"],["266"],"'can' is assigned a value but never used.","no-empty-pattern","Unexpected empty object pattern.","ObjectPattern","unexpected","'errorProviders' is assigned a value but never used.","'getProviders' is assigned a value but never used.","'data' is assigned a value but never used.","'registerError' is assigned a value but never used.","'Title' is assigned a value but never used.","'getInfo' is assigned a value but never used.","'EyeInvisibleOutlined' is defined but never used.","'EyeTwoTone' is defined but never used.","'Spin' is defined but never used.","'antIcon' is assigned a value but never used.","'resetPasswordData' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]