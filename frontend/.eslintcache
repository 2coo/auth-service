[{"/Users/giva/projects/tomujin/microservices/auth-service/frontend/src/index.tsx":"1","/Users/giva/projects/tomujin/microservices/auth-service/frontend/src/reportWebVitals.ts":"2","/Users/giva/projects/tomujin/microservices/auth-service/frontend/src/theme/index.ts":"3","/Users/giva/projects/tomujin/microservices/auth-service/frontend/src/utils/route-composer/index.tsx":"4","/Users/giva/projects/tomujin/microservices/auth-service/frontend/src/layout/Layout.tsx":"5","/Users/giva/projects/tomujin/microservices/auth-service/frontend/src/view/landing/Landing.tsx":"6","/Users/giva/projects/tomujin/microservices/auth-service/frontend/src/view/login/LoginPage.tsx":"7","/Users/giva/projects/tomujin/microservices/auth-service/frontend/src/view/app/home/Home.tsx":"8","/Users/giva/projects/tomujin/microservices/auth-service/frontend/src/view/app/profile/Profile.tsx":"9","/Users/giva/projects/tomujin/microservices/auth-service/frontend/src/components/protected-router/ProtectedRouter.tsx":"10","/Users/giva/projects/tomujin/microservices/auth-service/frontend/src/store/auth/context.tsx":"11","/Users/giva/projects/tomujin/microservices/auth-service/frontend/src/store/auth/reducers.tsx":"12","/Users/giva/projects/tomujin/microservices/auth-service/frontend/src/routes/index.ts":"13","/Users/giva/projects/tomujin/microservices/auth-service/frontend/src/view/dialog/Dialog.tsx":"14","/Users/giva/projects/tomujin/microservices/auth-service/frontend/src/utils/api/index.ts":"15","/Users/giva/projects/tomujin/microservices/auth-service/frontend/src/components/full-redirect/FullRedirect.tsx":"16"},{"size":945,"mtime":1607337073532,"results":"17","hashOfConfig":"18"},{"size":425,"mtime":1607337073534,"results":"19","hashOfConfig":"18"},{"size":295,"mtime":1607409290675,"results":"20","hashOfConfig":"18"},{"size":867,"mtime":1607337073538,"results":"21","hashOfConfig":"18"},{"size":5611,"mtime":1607521722470,"results":"22","hashOfConfig":"18"},{"size":228,"mtime":1607337073539,"results":"23","hashOfConfig":"18"},{"size":3449,"mtime":1607477677233,"results":"24","hashOfConfig":"18"},{"size":346,"mtime":1607437193296,"results":"25","hashOfConfig":"18"},{"size":118,"mtime":1607337073539,"results":"26","hashOfConfig":"18"},{"size":1669,"mtime":1607521180154,"results":"27","hashOfConfig":"18"},{"size":780,"mtime":1607519802433,"results":"28","hashOfConfig":"18"},{"size":473,"mtime":1607427676586,"results":"29","hashOfConfig":"18"},{"size":909,"mtime":1607517522797,"results":"30","hashOfConfig":"18"},{"size":7826,"mtime":1607526571686,"results":"31","hashOfConfig":"18"},{"size":499,"mtime":1607436928844,"results":"32","hashOfConfig":"18"},{"size":429,"mtime":1607521100398,"results":"33","hashOfConfig":"18"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},"itv2ha",{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45","usedDeprecatedRules":"36"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},"/Users/giva/projects/tomujin/microservices/auth-service/frontend/src/index.tsx",[],["69","70"],"/Users/giva/projects/tomujin/microservices/auth-service/frontend/src/reportWebVitals.ts",[],"/Users/giva/projects/tomujin/microservices/auth-service/frontend/src/theme/index.ts",[],"/Users/giva/projects/tomujin/microservices/auth-service/frontend/src/utils/route-composer/index.tsx",[],"/Users/giva/projects/tomujin/microservices/auth-service/frontend/src/layout/Layout.tsx",["71","72"],"import { Link } from \"@reach/router\"\nimport {\n  AppBar,\n  Toolbar,\n  IconButton,\n  Typography,\n  Badge,\n  makeStyles,\n  Drawer,\n  Divider,\n  List,\n  Container,\n  MenuItem,\n  Menu\n} from \"@material-ui/core\"\nimport { Menu as MenuIcon, Notifications as NotificationsIcon, ChevronLeft as ChevronLeftIcon, AccountCircle } from \"@material-ui/icons\"\nimport clsx from \"clsx\"\nimport { useState } from \"react\";\nimport { useAuthContext } from \"../store/auth/context\";\nimport FullRedirect from \"../components/full-redirect/FullRedirect\"\n\nconst drawerWidth = 240;\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: 'flex',\n  },\n  toolbar: {\n    paddingRight: 24, // keep right padding when drawer closed\n  },\n  toolbarIcon: {\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'flex-end',\n    padding: '0 8px',\n    ...theme.mixins.toolbar,\n  },\n  appBar: {\n    zIndex: theme.zIndex.drawer + 1,\n    transition: theme.transitions.create(['width', 'margin'], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    }),\n  },\n  appBarShift: {\n    marginLeft: drawerWidth,\n    width: `calc(100% - ${drawerWidth}px)`,\n    transition: theme.transitions.create(['width', 'margin'], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.enteringScreen,\n    }),\n  },\n  menuButton: {\n    marginRight: 36,\n  },\n  menuButtonHidden: {\n    display: 'none',\n  },\n  title: {\n    flexGrow: 1,\n  },\n  drawerPaper: {\n    position: 'relative',\n    whiteSpace: 'nowrap',\n    width: drawerWidth,\n    transition: theme.transitions.create('width', {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.enteringScreen,\n    }),\n  },\n  drawerPaperClose: {\n    overflowX: 'hidden',\n    transition: theme.transitions.create('width', {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    }),\n    width: theme.spacing(7),\n    [theme.breakpoints.up('sm')]: {\n      width: theme.spacing(9),\n    },\n  },\n  appBarSpacer: theme.mixins.toolbar,\n  content: {\n    flexGrow: 1,\n    height: '100vh',\n    overflow: 'auto',\n  },\n  container: {\n    paddingTop: theme.spacing(4),\n    paddingBottom: theme.spacing(4),\n  },\n  paper: {\n    padding: theme.spacing(2),\n    display: 'flex',\n    overflow: 'auto',\n    flexDirection: 'column',\n  },\n  fixedHeight: {\n    height: 240,\n  },\n}));\n\nconst App = (props: any) => {\n  const classes = useStyles()\n  const { dispatch } = useAuthContext()\n  const [openDrawer, setOpenDrawer] = useState(true);\n\n  const handleDrawerOpen = () => {\n    setOpenDrawer(true);\n  };\n  const handleDrawerClose = () => {\n    setOpenDrawer(false);\n  };\n\n  const [anchorEl, setAnchorEl] = useState(null);\n  const openMenu = Boolean(anchorEl);\n\n  const handleMenu = (event: any) => {\n    setAnchorEl(event.currentTarget);\n  };\n  const handleClose = () => {\n    setAnchorEl(null);\n  };\n\n  const handleLogout = () => {\n    setAnchorEl(null);\n    dispatch({\n      type: \"REMOVE_AUTH\"\n    })\n    setLogginOutEl(<FullRedirect url=\"/logout\" />)\n  }\n  const [logginOutEl, setLogginOutEl] = useState<JSX.Element | null>(null)\n\n  return (<div className={classes.root}>\n    <AppBar position=\"absolute\" className={clsx(classes.appBar, openDrawer && classes.appBarShift)}>\n      <Toolbar className={classes.toolbar}>\n        <IconButton\n          edge=\"start\"\n          color=\"inherit\"\n          aria-label=\"open drawer\"\n          onClick={handleDrawerOpen}\n          className={clsx(classes.menuButton, openDrawer && classes.menuButtonHidden)}\n        >\n          <MenuIcon />\n        </IconButton>\n        <Typography component=\"h1\" variant=\"h6\" color=\"inherit\" noWrap className={classes.title}>\n          Dashboard\n        </Typography>\n        <IconButton color=\"inherit\">\n          <Badge badgeContent={0} color=\"secondary\">\n            <NotificationsIcon />\n          </Badge>\n        </IconButton>\n        <div>\n          <IconButton\n            aria-label=\"account of current user\"\n            aria-controls=\"menu-appbar\"\n            aria-haspopup=\"true\"\n            onClick={handleMenu}\n            color=\"inherit\"\n          >\n            <AccountCircle />\n          </IconButton>\n          <Menu\n            id=\"menu-appbar\"\n            anchorEl={anchorEl}\n            anchorOrigin={{\n              vertical: 'top',\n              horizontal: 'right',\n            }}\n            keepMounted\n            transformOrigin={{\n              vertical: 'top',\n              horizontal: 'right',\n            }}\n            open={openMenu}\n            onClose={handleClose}\n          >\n            <MenuItem onClick={handleClose}>My account</MenuItem>\n            <MenuItem onClick={handleLogout}>\n              {logginOutEl}\n              Logout\n            </MenuItem>\n          </Menu>\n        </div>\n      </Toolbar>\n    </AppBar>\n    <Drawer\n      variant=\"permanent\"\n      classes={{\n        paper: clsx(classes.drawerPaper, !openDrawer && classes.drawerPaperClose),\n      }}\n      open={openDrawer}\n    >\n      <div className={classes.toolbarIcon}>\n        <IconButton onClick={handleDrawerClose}>\n          <ChevronLeftIcon />\n        </IconButton>\n      </div>\n      <Divider />\n      {/* <List>{mainListItems}</List> */}\n      <Divider />\n      {/* <List>{secondaryListItems}</List> */}\n    </Drawer>\n    <main className={classes.content}>\n      <div className={classes.appBarSpacer} />\n      <Container maxWidth=\"lg\" className={classes.container}>\n        {props.children}\n      </Container>\n    </main>\n  </div>)\n};\n\nexport default App;\n","/Users/giva/projects/tomujin/microservices/auth-service/frontend/src/view/landing/Landing.tsx",[],"/Users/giva/projects/tomujin/microservices/auth-service/frontend/src/view/login/LoginPage.tsx",[],"/Users/giva/projects/tomujin/microservices/auth-service/frontend/src/view/app/home/Home.tsx",[],"/Users/giva/projects/tomujin/microservices/auth-service/frontend/src/view/app/profile/Profile.tsx",[],"/Users/giva/projects/tomujin/microservices/auth-service/frontend/src/components/protected-router/ProtectedRouter.tsx",[],"/Users/giva/projects/tomujin/microservices/auth-service/frontend/src/store/auth/context.tsx",[],"/Users/giva/projects/tomujin/microservices/auth-service/frontend/src/store/auth/reducers.tsx",[],["73","74"],"/Users/giva/projects/tomujin/microservices/auth-service/frontend/src/routes/index.ts",[],"/Users/giva/projects/tomujin/microservices/auth-service/frontend/src/view/dialog/Dialog.tsx",[],"/Users/giva/projects/tomujin/microservices/auth-service/frontend/src/utils/api/index.ts",[],"/Users/giva/projects/tomujin/microservices/auth-service/frontend/src/components/full-redirect/FullRedirect.tsx",[],{"ruleId":"75","replacedBy":"76"},{"ruleId":"77","replacedBy":"78"},{"ruleId":"79","severity":1,"message":"80","line":1,"column":10,"nodeType":"81","messageId":"82","endLine":1,"endColumn":14},{"ruleId":"79","severity":1,"message":"83","line":11,"column":3,"nodeType":"81","messageId":"82","endLine":11,"endColumn":7},{"ruleId":"75","replacedBy":"84"},{"ruleId":"77","replacedBy":"85"},"no-native-reassign",["86"],"no-negated-in-lhs",["87"],"@typescript-eslint/no-unused-vars","'Link' is defined but never used.","Identifier","unusedVar","'List' is defined but never used.",["86"],["87"],"no-global-assign","no-unsafe-negation"]