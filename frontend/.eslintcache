[{"/Users/giva/projects/tomujin/microservices/auth-service/frontend/src/index.tsx":"1","/Users/giva/projects/tomujin/microservices/auth-service/frontend/src/reportWebVitals.ts":"2","/Users/giva/projects/tomujin/microservices/auth-service/frontend/src/theme/index.ts":"3","/Users/giva/projects/tomujin/microservices/auth-service/frontend/src/utils/route-composer/index.tsx":"4","/Users/giva/projects/tomujin/microservices/auth-service/frontend/src/view/landing/Landing.tsx":"5","/Users/giva/projects/tomujin/microservices/auth-service/frontend/src/view/login/LoginPage.tsx":"6","/Users/giva/projects/tomujin/microservices/auth-service/frontend/src/view/app/home/Home.tsx":"7","/Users/giva/projects/tomujin/microservices/auth-service/frontend/src/view/app/profile/Profile.tsx":"8","/Users/giva/projects/tomujin/microservices/auth-service/frontend/src/components/protected-router/ProtectedRouter.tsx":"9","/Users/giva/projects/tomujin/microservices/auth-service/frontend/src/store/auth/context.tsx":"10","/Users/giva/projects/tomujin/microservices/auth-service/frontend/src/store/auth/reducers.tsx":"11","/Users/giva/projects/tomujin/microservices/auth-service/frontend/src/view/dialog/Dialog.tsx":"12","/Users/giva/projects/tomujin/microservices/auth-service/frontend/src/utils/api/index.ts":"13","/Users/giva/projects/tomujin/microservices/auth-service/frontend/src/components/full-redirect/FullRedirect.tsx":"14","/Users/giva/projects/tomujin/microservices/auth-service/frontend/src/view/register/Register.tsx":"15","/Users/giva/projects/tomujin/microservices/auth-service/frontend/src/view/reset-password/ResetPassword.tsx":"16","/Users/giva/projects/tomujin/microservices/auth-service/frontend/src/components/copyright/Copyright.tsx":"17","/Users/giva/projects/tomujin/microservices/auth-service/frontend/src/store/theme/context.tsx":"18","/Users/giva/projects/tomujin/microservices/auth-service/frontend/src/store/theme/reducers.tsx":"19","/Users/giva/projects/tomujin/microservices/auth-service/frontend/src/view/signout/Signout.tsx":"20","/Users/giva/projects/tomujin/microservices/auth-service/frontend/src/store/ability/context.tsx":"21","/Users/giva/projects/tomujin/microservices/auth-service/frontend/src/store/ability/ability.ts":"22","/Users/giva/projects/tomujin/microservices/auth-service/frontend/src/components/provider-wrapper/ProviderWrapper.tsx":"23","/Users/giva/projects/tomujin/microservices/auth-service/frontend/src/i18n/index.tsx":"24","/Users/giva/projects/tomujin/microservices/auth-service/frontend/src/components/loader/Loader.tsx":"25","/Users/giva/projects/tomujin/microservices/auth-service/frontend/src/assets/jss/components/loaderStyles.tsx":"26","/Users/giva/projects/tomujin/microservices/auth-service/frontend/src/assets/jss/view/loginStyles.tsx":"27","/Users/giva/projects/tomujin/microservices/auth-service/frontend/src/layouts/Layout.tsx":"28","/Users/giva/projects/tomujin/microservices/auth-service/frontend/src/assets/jss/layout/layoutStyles.jsx":"29","/Users/giva/projects/tomujin/microservices/auth-service/frontend/src/components/layout/sider/Sider.tsx":"30","/Users/giva/projects/tomujin/microservices/auth-service/frontend/src/components/layout/menu/Menu.tsx":"31","/Users/giva/projects/tomujin/microservices/auth-service/frontend/src/utils/route/index.ts":"32","/Users/giva/projects/tomujin/microservices/auth-service/frontend/src/routes/index.tsx":"33","/Users/giva/projects/tomujin/microservices/auth-service/frontend/src/components/layout/header/Header.tsx":"34","/Users/giva/projects/tomujin/microservices/auth-service/frontend/src/view/app/user/User.tsx":"35","/Users/giva/projects/tomujin/microservices/auth-service/frontend/src/view/app/charts/insight/Insight.tsx":"36","/Users/giva/projects/tomujin/microservices/auth-service/frontend/src/view/app/charts/analytics/Analytics.tsx":"37","/Users/giva/projects/tomujin/microservices/auth-service/frontend/src/view/app/charts/index.tsx":"38","/Users/giva/projects/tomujin/microservices/auth-service/frontend/src/utils/format/index.ts":"39","/Users/giva/projects/tomujin/microservices/auth-service/frontend/src/components/forms/login/LoginForm.tsx":"40","/Users/giva/projects/tomujin/microservices/auth-service/frontend/src/components/identity-providers/index.tsx":"41","/Users/giva/projects/tomujin/microservices/auth-service/frontend/src/components/identity-providers/google-button/GoogleButton.tsx":"42","/Users/giva/projects/tomujin/microservices/auth-service/frontend/src/components/forms/register/RegisterForm.tsx":"43","/Users/giva/projects/tomujin/microservices/auth-service/frontend/src/assets/jss/view/registerStyles.tsx":"44"},{"size":892,"mtime":1609236189584,"results":"45","hashOfConfig":"46"},{"size":425,"mtime":1607337073534,"results":"47","hashOfConfig":"46"},{"size":295,"mtime":1609845357682,"results":"48","hashOfConfig":"46"},{"size":867,"mtime":1607337073538,"results":"49","hashOfConfig":"46"},{"size":284,"mtime":1609681921186,"results":"50","hashOfConfig":"46"},{"size":2316,"mtime":1609897860541,"results":"51","hashOfConfig":"46"},{"size":1401,"mtime":1609133813530,"results":"52","hashOfConfig":"46"},{"size":118,"mtime":1607337073539,"results":"53","hashOfConfig":"46"},{"size":2460,"mtime":1609822064741,"results":"54","hashOfConfig":"46"},{"size":980,"mtime":1609822056192,"results":"55","hashOfConfig":"46"},{"size":468,"mtime":1609130506123,"results":"56","hashOfConfig":"46"},{"size":7899,"mtime":1609136776845,"results":"57","hashOfConfig":"46"},{"size":499,"mtime":1607436928844,"results":"58","hashOfConfig":"46"},{"size":841,"mtime":1608019318761,"results":"59","hashOfConfig":"46"},{"size":2333,"mtime":1609917388324,"results":"60","hashOfConfig":"46"},{"size":4699,"mtime":1607598629504,"results":"61","hashOfConfig":"46"},{"size":441,"mtime":1607598331160,"results":"62","hashOfConfig":"46"},{"size":692,"mtime":1607337073536,"results":"63","hashOfConfig":"46"},{"size":382,"mtime":1607337073537,"results":"64","hashOfConfig":"46"},{"size":643,"mtime":1607680508872,"results":"65","hashOfConfig":"46"},{"size":574,"mtime":1609132968339,"results":"66","hashOfConfig":"46"},{"size":484,"mtime":1609379530820,"results":"67","hashOfConfig":"46"},{"size":1106,"mtime":1609375725359,"results":"68","hashOfConfig":"46"},{"size":1168,"mtime":1609224721879,"results":"69","hashOfConfig":"46"},{"size":609,"mtime":1609504302015,"results":"70","hashOfConfig":"46"},{"size":1791,"mtime":1609852771206,"results":"71","hashOfConfig":"46"},{"size":1465,"mtime":1609921677269,"results":"72","hashOfConfig":"46"},{"size":1555,"mtime":1609596116791,"results":"73","hashOfConfig":"46"},{"size":2345,"mtime":1609573398615,"results":"74","hashOfConfig":"46"},{"size":1014,"mtime":1609596019997,"results":"75","hashOfConfig":"46"},{"size":1948,"mtime":1609596009033,"results":"76","hashOfConfig":"46"},{"size":1275,"mtime":1609595774910,"results":"77","hashOfConfig":"46"},{"size":2492,"mtime":1609898234358,"results":"78","hashOfConfig":"46"},{"size":4337,"mtime":1609574021518,"results":"79","hashOfConfig":"46"},{"size":107,"mtime":1609576645368,"results":"80","hashOfConfig":"46"},{"size":118,"mtime":1609577749518,"results":"81","hashOfConfig":"46"},{"size":134,"mtime":1609577860142,"results":"82","hashOfConfig":"46"},{"size":156,"mtime":1609748339217,"results":"83","hashOfConfig":"46"},{"size":812,"mtime":1609909906509,"results":"84","hashOfConfig":"46"},{"size":6251,"mtime":1609926336837,"results":"85","hashOfConfig":"46"},{"size":125,"mtime":1609897661347,"results":"86","hashOfConfig":"46"},{"size":1439,"mtime":1609599550305,"results":"87","hashOfConfig":"46"},{"size":6518,"mtime":1609941274964,"results":"88","hashOfConfig":"46"},{"size":476,"mtime":1609921829198,"results":"89","hashOfConfig":"46"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},"itv2ha",{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"109","usedDeprecatedRules":"92"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"136","usedDeprecatedRules":"92"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"143","messages":"144","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"145","messages":"146","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"147","messages":"148","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"149","messages":"150","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"151"},{"filePath":"152","messages":"153","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"154","messages":"155","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"156","messages":"157","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"158","messages":"159","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"160","messages":"161","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"162","messages":"163","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"164","messages":"165","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"166","messages":"167","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"168","messages":"169","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"170","messages":"171","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"172","messages":"173","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"174","usedDeprecatedRules":"92"},{"filePath":"175","messages":"176","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"177","messages":"178","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"179","messages":"180","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"181","messages":"182","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},"/Users/giva/projects/tomujin/microservices/auth-service/frontend/src/index.tsx",[],["183","184"],"/Users/giva/projects/tomujin/microservices/auth-service/frontend/src/reportWebVitals.ts",[],"/Users/giva/projects/tomujin/microservices/auth-service/frontend/src/theme/index.ts",[],"/Users/giva/projects/tomujin/microservices/auth-service/frontend/src/utils/route-composer/index.tsx",[],"/Users/giva/projects/tomujin/microservices/auth-service/frontend/src/view/landing/Landing.tsx",[],"/Users/giva/projects/tomujin/microservices/auth-service/frontend/src/view/login/LoginPage.tsx",[],"/Users/giva/projects/tomujin/microservices/auth-service/frontend/src/view/app/home/Home.tsx",[],"/Users/giva/projects/tomujin/microservices/auth-service/frontend/src/view/app/profile/Profile.tsx",[],"/Users/giva/projects/tomujin/microservices/auth-service/frontend/src/components/protected-router/ProtectedRouter.tsx",["185","186","187"],"import { unpackRules } from '@casl/ability/extra';\nimport { makeStyles } from \"@material-ui/core\";\nimport { Fragment, useEffect } from \"react\";\nimport { useAbility } from \"../../store/ability/context\";\nimport { AuthConsumer, useAuthContext } from \"../../store/auth/context\";\nimport { useAxios } from \"../../utils/api\";\nimport FullRedirect from \"../full-redirect/FullRedirect\";\nimport Loader from '../loader/Loader';\n\nconst useStyles = makeStyles((theme) => ({\n    Backdrop: {\n        zIndex: 1202\n    }\n}))\n\nconst ProtectedRoute = (props: any) => {\n    let { as: Comp, ...otherProps } = props;\n    const { state, dispatch } = useAuthContext()\n    const ability = useAbility()\n    const [{ data: userProfile, loading, error }, fetch] = useAxios({\n        url: \"/oauth2/userinfo\",\n        withCredentials: true\n    }, { manual: true })\n\n    const [{ data: userAbilities, loading: abilityLoading, error: abilityError }, fetchAbility] = useAxios({\n        url: \"/myabilities\",\n        withCredentials: true\n    }, { manual: true })\n\n    useEffect(() => {\n        if (!state.authenticated && !error && !userProfile) {\n            fetch()\n        } else {\n            fetchAbility()\n        }\n        return () => { }\n    }, [state.authenticated, fetch, error, userProfile, fetchAbility])\n    useEffect(() => {\n        if (userProfile?.success === true) {\n            fetchAbility()\n            dispatch({\n                type: \"ADD_AUTH\",\n                payload: {\n                    authenticated: true,\n                    user: userProfile.data\n                }\n            })\n        }\n        return () => { }\n    }, [userProfile, error, dispatch, fetchAbility])\n\n    useEffect(() => {\n        if (userAbilities?.success === true) {\n            ability.update(unpackRules(userAbilities?.data?.rules))\n        }\n        return () => { }\n    }, [userAbilities, ability])\n\n    let decisionComp = <Fragment />\n\n    // if (error || abilityError) decisionComp = <FullRedirect url={`/oauth2/authorize`} />\n    return <AuthConsumer>\n        {auth =>\n            <Fragment>\n                <Loader spinning={loading || abilityLoading} fullScreen={true} />\n                {\n                    userProfile?.success || auth.state.authenticated ?\n                        (<Comp {...otherProps} />)\n                        :\n                        decisionComp\n                }\n            </Fragment>\n        }\n    </AuthConsumer >\n};\n\nexport default ProtectedRoute;","/Users/giva/projects/tomujin/microservices/auth-service/frontend/src/store/auth/context.tsx",[],"/Users/giva/projects/tomujin/microservices/auth-service/frontend/src/store/auth/reducers.tsx",[],"/Users/giva/projects/tomujin/microservices/auth-service/frontend/src/view/dialog/Dialog.tsx",[],"/Users/giva/projects/tomujin/microservices/auth-service/frontend/src/utils/api/index.ts",[],"/Users/giva/projects/tomujin/microservices/auth-service/frontend/src/components/full-redirect/FullRedirect.tsx",[],"/Users/giva/projects/tomujin/microservices/auth-service/frontend/src/view/register/Register.tsx",[],"/Users/giva/projects/tomujin/microservices/auth-service/frontend/src/view/reset-password/ResetPassword.tsx",[],"/Users/giva/projects/tomujin/microservices/auth-service/frontend/src/components/copyright/Copyright.tsx",[],"/Users/giva/projects/tomujin/microservices/auth-service/frontend/src/store/theme/context.tsx",[],"/Users/giva/projects/tomujin/microservices/auth-service/frontend/src/store/theme/reducers.tsx",[],"/Users/giva/projects/tomujin/microservices/auth-service/frontend/src/view/signout/Signout.tsx",[],"/Users/giva/projects/tomujin/microservices/auth-service/frontend/src/store/ability/context.tsx",[],"/Users/giva/projects/tomujin/microservices/auth-service/frontend/src/store/ability/ability.ts",["188"],"import { AbilityBuilder, Ability, AbilityClass } from \"@casl/ability\";\n\nexport const AppAbility = Ability as AbilityClass<Ability<[any, any]>>;\n\nexport default function defineRulesFor() {\n  const { can, rules } = new AbilityBuilder(AppAbility);\n  return rules;\n}\n\nexport function buildAbilityFor(): Ability<[any, any]> {\n  return new AppAbility(defineRulesFor(), {\n    // https://casl.js.org/v5/en/guide/subject-type-detection\n    detectSubjectType: (object) => object!.type,\n  });\n}\n","/Users/giva/projects/tomujin/microservices/auth-service/frontend/src/components/provider-wrapper/ProviderWrapper.tsx",[],"/Users/giva/projects/tomujin/microservices/auth-service/frontend/src/i18n/index.tsx",[],"/Users/giva/projects/tomujin/microservices/auth-service/frontend/src/components/loader/Loader.tsx",[],"/Users/giva/projects/tomujin/microservices/auth-service/frontend/src/assets/jss/components/loaderStyles.tsx",[],"/Users/giva/projects/tomujin/microservices/auth-service/frontend/src/assets/jss/view/loginStyles.tsx",[],"/Users/giva/projects/tomujin/microservices/auth-service/frontend/src/layouts/Layout.tsx",[],"/Users/giva/projects/tomujin/microservices/auth-service/frontend/src/assets/jss/layout/layoutStyles.jsx",[],["189","190"],"/Users/giva/projects/tomujin/microservices/auth-service/frontend/src/components/layout/sider/Sider.tsx",[],"/Users/giva/projects/tomujin/microservices/auth-service/frontend/src/components/layout/menu/Menu.tsx",[],"/Users/giva/projects/tomujin/microservices/auth-service/frontend/src/utils/route/index.ts",[],"/Users/giva/projects/tomujin/microservices/auth-service/frontend/src/routes/index.tsx",[],"/Users/giva/projects/tomujin/microservices/auth-service/frontend/src/components/layout/header/Header.tsx",[],"/Users/giva/projects/tomujin/microservices/auth-service/frontend/src/view/app/user/User.tsx",[],"/Users/giva/projects/tomujin/microservices/auth-service/frontend/src/view/app/charts/insight/Insight.tsx",[],"/Users/giva/projects/tomujin/microservices/auth-service/frontend/src/view/app/charts/analytics/Analytics.tsx",[],"/Users/giva/projects/tomujin/microservices/auth-service/frontend/src/view/app/charts/index.tsx",[],"/Users/giva/projects/tomujin/microservices/auth-service/frontend/src/utils/format/index.ts",[],"/Users/giva/projects/tomujin/microservices/auth-service/frontend/src/components/forms/login/LoginForm.tsx",["191","192","193"],"import { FormEvent, Fragment, PropsWithChildren, useRef, useState } from \"react\"\nimport { Link, useLocation } from \"@reach/router\"\nimport { Alert, Avatar, Button, Checkbox, Col, Divider, Form, Input, Row, Space, Typography, Spin } from \"antd\";\nimport Logo from '../../../assets/img/Logo/Asset 10@300x.png'\nimport { Box } from \"@material-ui/core\";\nimport { formatQueryString } from \"../../../utils/format\";\nimport IDENTITY_PROVIDERS from \"../../identity-providers\";\nimport loginStyles from \"../../../assets/jss/view/loginStyles\";\nimport { StringParam, useQueryParam } from \"use-query-params\";\nimport { useAxios } from \"../../../utils/api\";\nimport queryString from \"querystring\";\nimport { LoadingOutlined, UserOutlined, LockOutlined } from '@ant-design/icons';\n\nconst FormItem = Form.Item\nconst { Text } = Typography\n\ninterface Props extends PropsWithChildren<any> {\n}\n\nconst antIcon = <LoadingOutlined style={{ fontSize: 24 }} spin />;\n\nconst LoginForm = ({ }: Props) => {\n    const classes = loginStyles();\n    const location = useLocation()\n    const [clientId,] = useQueryParam('client_id', StringParam);\n    const [error,] = useQueryParam('error', StringParam)\n    const [submitting, setSubmitting] = useState(false)\n    const [fields, setFields] = useState<any[]>([]);\n    const [form] = Form.useForm();\n    const formHiddenEl = useRef<HTMLFormElement | undefined | null>()\n    const [{ data: providers,\n        loading: loadingProviders,\n        error: errorProviders\n    }, getProviders] = useAxios({\n        url: '/oauth2/providers',\n        method: \"GET\", params: { client_id: clientId }\n    })\n    const handleOk = (e: FormEvent<HTMLFormElement>) => {\n        formHiddenEl.current?.submit()\n    }\n    const queryParams = queryString.parse(location.search.substr(1))\n    return (\n        <Fragment>\n            <Row align=\"middle\" justify=\"center\" style={{ height: \"100%\", }}>\n                <Col className={classes.form}>\n                    {error && <Row gutter={[0, 32]}>\n                        <Col span={24}>\n                            <Alert message={atob(error)} type=\"error\" showIcon closable />\n                        </Col>\n                    </Row>}\n                    <Box mb={4}>\n                        <Row justify=\"center\" gutter={[0, 32]} align=\"middle\">\n                            <Space>\n                                <Avatar size={40} shape=\"square\" src={Logo} />\n                                <span className={classes.company}>TOMUJIN DIGITAL</span>\n                            </Space>\n                        </Row>\n                    </Box>\n                    <Form initialValues={{ remember_me: true }} onFinish={handleOk} form={form} onFieldsChange={(changedFields, allFields) => {\n                        setFields(allFields)\n                    }}>\n                        <FormItem name=\"username\"\n                            rules={[{ required: true, message: 'Please input email or username!' }]} hasFeedback>\n                            <Input\n                                size=\"large\"\n                                prefix={<UserOutlined className={classes.inputIcon} />}\n                                placeholder={`Username`}\n                            />\n                        </FormItem>\n                        <FormItem name=\"password\"\n                            rules={[{ required: true, message: 'Please input email or username!' }]} hasFeedback>\n                            <Input\n                                prefix={<LockOutlined className={classes.inputIcon} />}\n                                size=\"large\"\n                                type=\"password\"\n                                placeholder={`Password`}\n                            />\n                        </FormItem>\n                        <Form.Item>\n                            <Form.Item name=\"remember_me\" valuePropName=\"checked\" noStyle>\n                                <Checkbox>Remember me</Checkbox>\n                            </Form.Item>\n                            <Link className={classes.loginFormForgot} to=\"/password/new\">\n                                Forgot password?\n                            </Link>\n                        </Form.Item>\n                        <Space size={15} direction=\"vertical\" style={{\n                            width: \"100%\"\n                        }}>\n                            <Row>\n                                <Button\n                                    size=\"large\"\n                                    className={classes.button}\n                                    type=\"primary\"\n                                    htmlType=\"submit\"\n                                    loading={submitting}\n                                >\n                                    Log in\n                                </Button>\n                            </Row>\n                            <Row justify=\"center\">\n                                <Text type=\"secondary\">Don't have an account yet? <Link to={`/signup${formatQueryString(queryParams)}`}>Register now</Link></Text>\n                            </Row>\n                        </Space>\n                        <Divider plain>OR</Divider>\n                        <Row justify=\"center\">\n                            {loadingProviders ? <Spin indicator={antIcon} /> : providers?.data.map((provider: 'GOOGLE') => {\n                                const ProviderButton = IDENTITY_PROVIDERS?.[provider];\n                                const _queryParams = { ...queryParams }\n                                _queryParams[\"identity_provider\"] = provider\n                                return <a key={provider} href={`/oauth2/authorize${formatQueryString(_queryParams)}`}><ProviderButton /></a>\n                            })}\n                        </Row>\n                    </Form>\n                    <form ref={(el) => formHiddenEl.current = el} method=\"post\" onSubmit={() => setSubmitting(true)}>\n                        {\n                            fields.map((field) => <input key={field.name[0]} name={field.name[0]} value={field.value} type=\"hidden\" />)\n                        }\n                    </form>\n                </Col>\n            </Row>\n        </Fragment>\n    )\n}\n\nexport default LoginForm\n","/Users/giva/projects/tomujin/microservices/auth-service/frontend/src/components/identity-providers/index.tsx",[],"/Users/giva/projects/tomujin/microservices/auth-service/frontend/src/components/identity-providers/google-button/GoogleButton.tsx",[],"/Users/giva/projects/tomujin/microservices/auth-service/frontend/src/components/forms/register/RegisterForm.tsx",["194","195","196","197","198","199","200","201","202"],"/Users/giva/projects/tomujin/microservices/auth-service/frontend/src/assets/jss/view/registerStyles.tsx",[],{"ruleId":"203","replacedBy":"204"},{"ruleId":"205","replacedBy":"206"},{"ruleId":"207","severity":1,"message":"208","line":7,"column":8,"nodeType":"209","messageId":"210","endLine":7,"endColumn":20},{"ruleId":"207","severity":1,"message":"211","line":10,"column":7,"nodeType":"209","messageId":"210","endLine":10,"endColumn":16},{"ruleId":"207","severity":1,"message":"212","line":25,"column":67,"nodeType":"209","messageId":"210","endLine":25,"endColumn":79},{"ruleId":"207","severity":1,"message":"213","line":6,"column":11,"nodeType":"209","messageId":"210","endLine":6,"endColumn":14},{"ruleId":"203","replacedBy":"204"},{"ruleId":"205","replacedBy":"206"},{"ruleId":"214","severity":1,"message":"215","line":22,"column":20,"nodeType":"216","messageId":"217","endLine":22,"endColumn":30},{"ruleId":"207","severity":1,"message":"218","line":33,"column":16,"nodeType":"209","messageId":"210","endLine":33,"endColumn":30},{"ruleId":"207","severity":1,"message":"219","line":34,"column":8,"nodeType":"209","messageId":"210","endLine":34,"endColumn":20},{"ruleId":"207","severity":1,"message":"220","line":1,"column":66,"nodeType":"209","messageId":"210","endLine":1,"endColumn":73},{"ruleId":"207","severity":1,"message":"221","line":1,"column":86,"nodeType":"209","messageId":"210","endLine":1,"endColumn":92},{"ruleId":"207","severity":1,"message":"222","line":2,"column":20,"nodeType":"209","messageId":"210","endLine":2,"endColumn":29},{"ruleId":"207","severity":1,"message":"223","line":2,"column":31,"nodeType":"209","messageId":"210","endLine":2,"endColumn":39},{"ruleId":"207","severity":1,"message":"224","line":12,"column":8,"nodeType":"209","messageId":"210","endLine":12,"endColumn":14},{"ruleId":"207","severity":1,"message":"225","line":15,"column":16,"nodeType":"209","messageId":"210","endLine":15,"endColumn":20},{"ruleId":"207","severity":1,"message":"226","line":17,"column":9,"nodeType":"209","messageId":"210","endLine":17,"endColumn":18},{"ruleId":"207","severity":1,"message":"227","line":22,"column":14,"nodeType":"209","messageId":"210","endLine":22,"endColumn":18},{"ruleId":"207","severity":1,"message":"228","line":31,"column":16,"nodeType":"209","messageId":"210","endLine":31,"endColumn":29},"no-native-reassign",["229"],"no-negated-in-lhs",["230"],"@typescript-eslint/no-unused-vars","'FullRedirect' is defined but never used.","Identifier","unusedVar","'useStyles' is assigned a value but never used.","'abilityError' is assigned a value but never used.","'can' is assigned a value but never used.","no-empty-pattern","Unexpected empty object pattern.","ObjectPattern","unexpected","'errorProviders' is assigned a value but never used.","'getProviders' is assigned a value but never used.","'message' is defined but never used.","'Result' is defined but never used.","'useEffect' is defined but never used.","'useState' is defined but never used.","'moment' is defined but never used.","'Text' is assigned a value but never used.","'Countdown' is assigned a value but never used.","'data' is assigned a value but never used.","'registerError' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]