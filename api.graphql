### This file was generated by Nexus Schema
### Do not make changes to this file directly


input AccessTokenOAuthClientIdCompoundUniqueInput {
  accessToken: String!
  oAuthClientId: String!
}

input CodeOAuthClientIdCompoundUniqueInput {
  code: String!
  oAuthClientId: String!
}

scalar DateTime

"""Gender of users"""
enum Gender {
  FEMALE
  MALE
  OTHER
}

""""""
enum GrantType {
  AUTHORIZATION_CODE
  CLIENT_CREDENTIALS
  EXTENSION
  PASSWORD
  REFRESH_TOKEN
}

type Group {
  createdAt: DateTime!
  description: String
  name: String!
  updatedAt: DateTime!
  users(after: UserGroupWhereUniqueInput, before: UserGroupWhereUniqueInput, first: Int, last: Int): [UserGroup!]!
}

input GroupCreateOneWithoutUsersInput {
  connect: GroupWhereUniqueInput
  connectOrCreate: GroupCreateOrConnectWithoutUserGroupInput
  create: GroupCreateWithoutUsersInput
}

input GroupCreateOrConnectWithoutUserGroupInput {
  create: GroupCreateWithoutUsersInput!
  where: GroupWhereUniqueInput!
}

input GroupCreateWithoutUsersInput {
  createdAt: DateTime
  description: String
  id: String
  name: String!
  updatedAt: DateTime
}

input GroupWhereUniqueInput {
  id: String
}

type Mutation {
  createOneoAuthClient(data: oAuthClientCreateInput!): oAuthClient!
  createOneUser(data: UserCreateInput!): User!
}

type oAuthAccessToken {
  accessToken: String!
  client: oAuthClient!
  createdAt: DateTime!
  expirationDate: DateTime!
  scopes(after: oAuthAccessTokenScopeWhereUniqueInput, before: oAuthAccessTokenScopeWhereUniqueInput, first: Int, last: Int): [oAuthAccessTokenScope!]!
  user: User
}

input oAuthAccessTokenCreateManyWithoutClientInput {
  connect: [oAuthAccessTokenWhereUniqueInput!]
  connectOrCreate: [oAuthAccessTokenCreateOrConnectWithoutoAuthClientInput!]
  create: [oAuthAccessTokenCreateWithoutClientInput!]
}

input oAuthAccessTokenCreateManyWithoutUserInput {
  connect: [oAuthAccessTokenWhereUniqueInput!]
  connectOrCreate: [oAuthAccessTokenCreateOrConnectWithoutUserInput!]
  create: [oAuthAccessTokenCreateWithoutUserInput!]
}

input oAuthAccessTokenCreateOneWithoutScopesInput {
  connect: oAuthAccessTokenWhereUniqueInput
  connectOrCreate: oAuthAccessTokenCreateOrConnectWithoutoAuthAccessTokenScopeInput
  create: oAuthAccessTokenCreateWithoutScopesInput
}

input oAuthAccessTokenCreateOrConnectWithoutoAuthAccessTokenScopeInput {
  create: oAuthAccessTokenCreateWithoutScopesInput!
  where: oAuthAccessTokenWhereUniqueInput!
}

input oAuthAccessTokenCreateOrConnectWithoutoAuthClientInput {
  create: oAuthAccessTokenCreateWithoutClientInput!
  where: oAuthAccessTokenWhereUniqueInput!
}

input oAuthAccessTokenCreateOrConnectWithoutUserInput {
  create: oAuthAccessTokenCreateWithoutUserInput!
  where: oAuthAccessTokenWhereUniqueInput!
}

input oAuthAccessTokenCreateWithoutClientInput {
  accessToken: String
  createdAt: DateTime
  expirationDate: DateTime!
  id: String
  scopes: oAuthAccessTokenScopeCreateManyWithoutAccessTokenInput
  updatedAt: DateTime
  user: UserCreateOneWithoutOAuthAccessTokenInput
}

input oAuthAccessTokenCreateWithoutScopesInput {
  accessToken: String
  client: oAuthClientCreateOneWithoutAccessTokensInput!
  createdAt: DateTime
  expirationDate: DateTime!
  id: String
  updatedAt: DateTime
  user: UserCreateOneWithoutOAuthAccessTokenInput
}

input oAuthAccessTokenCreateWithoutUserInput {
  accessToken: String
  client: oAuthClientCreateOneWithoutAccessTokensInput!
  createdAt: DateTime
  expirationDate: DateTime!
  id: String
  scopes: oAuthAccessTokenScopeCreateManyWithoutAccessTokenInput
  updatedAt: DateTime
}

type oAuthAccessTokenScope {
  accessToken: oAuthAccessToken!
  createdAt: DateTime!
  scope: oAuthScope!
}

input oAuthAccessTokenScopeCreateManyWithoutAccessTokenInput {
  connect: [oAuthAccessTokenScopeWhereUniqueInput!]
  connectOrCreate: [oAuthAccessTokenScopeCreateOrConnectWithoutoAuthAccessTokenInput!]
  create: [oAuthAccessTokenScopeCreateWithoutAccessTokenInput!]
}

input oAuthAccessTokenScopeCreateManyWithoutScopeInput {
  connect: [oAuthAccessTokenScopeWhereUniqueInput!]
  connectOrCreate: [oAuthAccessTokenScopeCreateOrConnectWithoutoAuthScopeInput!]
  create: [oAuthAccessTokenScopeCreateWithoutScopeInput!]
}

input oAuthAccessTokenScopeCreateOrConnectWithoutoAuthAccessTokenInput {
  create: oAuthAccessTokenScopeCreateWithoutAccessTokenInput!
  where: oAuthAccessTokenScopeWhereUniqueInput!
}

input oAuthAccessTokenScopeCreateOrConnectWithoutoAuthScopeInput {
  create: oAuthAccessTokenScopeCreateWithoutScopeInput!
  where: oAuthAccessTokenScopeWhereUniqueInput!
}

input oAuthAccessTokenScopeCreateWithoutAccessTokenInput {
  createdAt: DateTime
  scope: oAuthScopeCreateOneWithoutAccessTokensInput!
}

input oAuthAccessTokenScopeCreateWithoutScopeInput {
  accessToken: oAuthAccessTokenCreateOneWithoutScopesInput!
  createdAt: DateTime
}

input oAuthAccessTokenScopeWhereUniqueInput {
  oAuthScopeId_oAuthAccessTokenId: OAuthScopeIdOAuthAccessTokenIdCompoundUniqueInput
}

input oAuthAccessTokenWhereUniqueInput {
  accessToken_oAuthClientId: AccessTokenOAuthClientIdCompoundUniqueInput
  id: String
  userId_oAuthClientId: UserIdOAuthClientIdCompoundUniqueInput
}

type oAuthAuthorizationCode {
  client: oAuthClient!
  code: String!
  createdAt: DateTime!
  expirationDate: DateTime!
  redirectURI: String!
  scopes(after: oAuthAuthorizationCodeScopeWhereUniqueInput, before: oAuthAuthorizationCodeScopeWhereUniqueInput, first: Int, last: Int): [oAuthAuthorizationCodeScope!]!
  user: User!
}

input oAuthAuthorizationCodeCreateManyWithoutClientInput {
  connect: [oAuthAuthorizationCodeWhereUniqueInput!]
  connectOrCreate: [oAuthAuthorizationCodeCreateOrConnectWithoutoAuthClientInput!]
  create: [oAuthAuthorizationCodeCreateWithoutClientInput!]
}

input oAuthAuthorizationCodeCreateManyWithoutUserInput {
  connect: [oAuthAuthorizationCodeWhereUniqueInput!]
  connectOrCreate: [oAuthAuthorizationCodeCreateOrConnectWithoutUserInput!]
  create: [oAuthAuthorizationCodeCreateWithoutUserInput!]
}

input oAuthAuthorizationCodeCreateOneWithoutScopesInput {
  connect: oAuthAuthorizationCodeWhereUniqueInput
  connectOrCreate: oAuthAuthorizationCodeCreateOrConnectWithoutoAuthAuthorizationCodeScopeInput
  create: oAuthAuthorizationCodeCreateWithoutScopesInput
}

input oAuthAuthorizationCodeCreateOrConnectWithoutoAuthAuthorizationCodeScopeInput {
  create: oAuthAuthorizationCodeCreateWithoutScopesInput!
  where: oAuthAuthorizationCodeWhereUniqueInput!
}

input oAuthAuthorizationCodeCreateOrConnectWithoutoAuthClientInput {
  create: oAuthAuthorizationCodeCreateWithoutClientInput!
  where: oAuthAuthorizationCodeWhereUniqueInput!
}

input oAuthAuthorizationCodeCreateOrConnectWithoutUserInput {
  create: oAuthAuthorizationCodeCreateWithoutUserInput!
  where: oAuthAuthorizationCodeWhereUniqueInput!
}

input oAuthAuthorizationCodeCreateWithoutClientInput {
  code: String
  createdAt: DateTime
  expirationDate: DateTime!
  id: String
  redirectURI: String!
  scopes: oAuthAuthorizationCodeScopeCreateManyWithoutAuthorizationCodeInput
  updatedAt: DateTime
  user: UserCreateOneWithoutOAuthAuthorizationCodeInput!
}

input oAuthAuthorizationCodeCreateWithoutScopesInput {
  client: oAuthClientCreateOneWithoutAuthorizationCodesInput!
  code: String
  createdAt: DateTime
  expirationDate: DateTime!
  id: String
  redirectURI: String!
  updatedAt: DateTime
  user: UserCreateOneWithoutOAuthAuthorizationCodeInput!
}

input oAuthAuthorizationCodeCreateWithoutUserInput {
  client: oAuthClientCreateOneWithoutAuthorizationCodesInput!
  code: String
  createdAt: DateTime
  expirationDate: DateTime!
  id: String
  redirectURI: String!
  scopes: oAuthAuthorizationCodeScopeCreateManyWithoutAuthorizationCodeInput
  updatedAt: DateTime
}

input OAuthAuthorizationCodeIdOAuthScopeIdCompoundUniqueInput {
  oAuthAuthorizationCodeId: String!
  oAuthScopeId: String!
}

type oAuthAuthorizationCodeScope {
  authorizationCode: oAuthAuthorizationCode!
  createdAt: DateTime!
  scope: oAuthScope!
}

input oAuthAuthorizationCodeScopeCreateManyWithoutAuthorizationCodeInput {
  connect: [oAuthAuthorizationCodeScopeWhereUniqueInput!]
  connectOrCreate: [oAuthAuthorizationCodeScopeCreateOrConnectWithoutoAuthAuthorizationCodeInput!]
  create: [oAuthAuthorizationCodeScopeCreateWithoutAuthorizationCodeInput!]
}

input oAuthAuthorizationCodeScopeCreateManyWithoutScopeInput {
  connect: [oAuthAuthorizationCodeScopeWhereUniqueInput!]
  connectOrCreate: [oAuthAuthorizationCodeScopeCreateOrConnectWithoutoAuthScopeInput!]
  create: [oAuthAuthorizationCodeScopeCreateWithoutScopeInput!]
}

input oAuthAuthorizationCodeScopeCreateOrConnectWithoutoAuthAuthorizationCodeInput {
  create: oAuthAuthorizationCodeScopeCreateWithoutAuthorizationCodeInput!
  where: oAuthAuthorizationCodeScopeWhereUniqueInput!
}

input oAuthAuthorizationCodeScopeCreateOrConnectWithoutoAuthScopeInput {
  create: oAuthAuthorizationCodeScopeCreateWithoutScopeInput!
  where: oAuthAuthorizationCodeScopeWhereUniqueInput!
}

input oAuthAuthorizationCodeScopeCreateWithoutAuthorizationCodeInput {
  createdAt: DateTime
  scope: oAuthScopeCreateOneWithoutAuthorizationCodesInput!
}

input oAuthAuthorizationCodeScopeCreateWithoutScopeInput {
  authorizationCode: oAuthAuthorizationCodeCreateOneWithoutScopesInput!
  createdAt: DateTime
}

input oAuthAuthorizationCodeScopeWhereUniqueInput {
  oAuthAuthorizationCodeId_oAuthScopeId: OAuthAuthorizationCodeIdOAuthScopeIdCompoundUniqueInput
}

input oAuthAuthorizationCodeWhereUniqueInput {
  code_oAuthClientId: CodeOAuthClientIdCompoundUniqueInput
  id: String
}

type oAuthClient {
  accessTokenLifetime: Int!
  accessTokens(after: oAuthAccessTokenWhereUniqueInput, before: oAuthAccessTokenWhereUniqueInput, first: Int, last: Int): [oAuthAccessToken!]!
  authorizationCodes(after: oAuthAuthorizationCodeWhereUniqueInput, before: oAuthAuthorizationCodeWhereUniqueInput, first: Int, last: Int): [oAuthAuthorizationCode!]!
  createdAt: DateTime!
  grants(after: oAuthClientGrantWhereUniqueInput, before: oAuthClientGrantWhereUniqueInput, first: Int, last: Int): [oAuthClientGrant!]!
  id: String!
  idTokenLifetime: Int!
  isTrusted: Boolean!
  javascriptOrigins(after: oAuthJavascriptOriginWhereUniqueInput, before: oAuthJavascriptOriginWhereUniqueInput, first: Int, last: Int): [oAuthJavascriptOrigin!]!
  name: String!
  redirectUris(after: oAuthRedirectURIWhereUniqueInput, before: oAuthRedirectURIWhereUniqueInput, first: Int, last: Int): [oAuthRedirectURI!]!
  refreshTokenLifetime: Int!
  refreshTokens(after: oAuthRefreshTokenWhereUniqueInput, before: oAuthRefreshTokenWhereUniqueInput, first: Int, last: Int): [oAuthRefreshToken!]!
  scopes(after: oAuthClientScopeWhereUniqueInput, before: oAuthClientScopeWhereUniqueInput, first: Int, last: Int): [oAuthClientScope!]!
  updatedAt: DateTime!
}

input oAuthClientCreateInput {
  accessTokenLifetime: Int
  accessTokens: oAuthAccessTokenCreateManyWithoutClientInput
  authorizationCodes: oAuthAuthorizationCodeCreateManyWithoutClientInput
  createdAt: DateTime
  grants: oAuthClientGrantCreateManyWithoutClientInput
  id: String
  idTokenLifetime: Int
  isTrusted: Boolean
  javascriptOrigins: oAuthJavascriptOriginCreateManyWithoutClientInput
  name: String!
  redirectUris: oAuthRedirectURICreateManyWithoutClientInput
  refreshTokenLifetime: Int
  refreshTokens: oAuthRefreshTokenCreateManyWithoutClientInput
  scopes: oAuthClientScopeCreateManyWithoutClientInput
  secret: String
  updatedAt: DateTime
}

input oAuthClientCreateOneWithoutAccessTokensInput {
  connect: oAuthClientWhereUniqueInput
  connectOrCreate: oAuthClientCreateOrConnectWithoutoAuthAccessTokenInput
  create: oAuthClientCreateWithoutAccessTokensInput
}

input oAuthClientCreateOneWithoutAuthorizationCodesInput {
  connect: oAuthClientWhereUniqueInput
  connectOrCreate: oAuthClientCreateOrConnectWithoutoAuthAuthorizationCodeInput
  create: oAuthClientCreateWithoutAuthorizationCodesInput
}

input oAuthClientCreateOneWithoutRefreshTokensInput {
  connect: oAuthClientWhereUniqueInput
  connectOrCreate: oAuthClientCreateOrConnectWithoutoAuthRefreshTokenInput
  create: oAuthClientCreateWithoutRefreshTokensInput
}

input oAuthClientCreateOneWithoutScopesInput {
  connect: oAuthClientWhereUniqueInput
  connectOrCreate: oAuthClientCreateOrConnectWithoutoAuthClientScopeInput
  create: oAuthClientCreateWithoutScopesInput
}

input oAuthClientCreateOrConnectWithoutoAuthAccessTokenInput {
  create: oAuthClientCreateWithoutAccessTokensInput!
  where: oAuthClientWhereUniqueInput!
}

input oAuthClientCreateOrConnectWithoutoAuthAuthorizationCodeInput {
  create: oAuthClientCreateWithoutAuthorizationCodesInput!
  where: oAuthClientWhereUniqueInput!
}

input oAuthClientCreateOrConnectWithoutoAuthClientScopeInput {
  create: oAuthClientCreateWithoutScopesInput!
  where: oAuthClientWhereUniqueInput!
}

input oAuthClientCreateOrConnectWithoutoAuthRefreshTokenInput {
  create: oAuthClientCreateWithoutRefreshTokensInput!
  where: oAuthClientWhereUniqueInput!
}

input oAuthClientCreateWithoutAccessTokensInput {
  accessTokenLifetime: Int
  authorizationCodes: oAuthAuthorizationCodeCreateManyWithoutClientInput
  createdAt: DateTime
  grants: oAuthClientGrantCreateManyWithoutClientInput
  id: String
  idTokenLifetime: Int
  isTrusted: Boolean
  javascriptOrigins: oAuthJavascriptOriginCreateManyWithoutClientInput
  name: String!
  redirectUris: oAuthRedirectURICreateManyWithoutClientInput
  refreshTokenLifetime: Int
  refreshTokens: oAuthRefreshTokenCreateManyWithoutClientInput
  scopes: oAuthClientScopeCreateManyWithoutClientInput
  secret: String
  updatedAt: DateTime
}

input oAuthClientCreateWithoutAuthorizationCodesInput {
  accessTokenLifetime: Int
  accessTokens: oAuthAccessTokenCreateManyWithoutClientInput
  createdAt: DateTime
  grants: oAuthClientGrantCreateManyWithoutClientInput
  id: String
  idTokenLifetime: Int
  isTrusted: Boolean
  javascriptOrigins: oAuthJavascriptOriginCreateManyWithoutClientInput
  name: String!
  redirectUris: oAuthRedirectURICreateManyWithoutClientInput
  refreshTokenLifetime: Int
  refreshTokens: oAuthRefreshTokenCreateManyWithoutClientInput
  scopes: oAuthClientScopeCreateManyWithoutClientInput
  secret: String
  updatedAt: DateTime
}

input oAuthClientCreateWithoutRefreshTokensInput {
  accessTokenLifetime: Int
  accessTokens: oAuthAccessTokenCreateManyWithoutClientInput
  authorizationCodes: oAuthAuthorizationCodeCreateManyWithoutClientInput
  createdAt: DateTime
  grants: oAuthClientGrantCreateManyWithoutClientInput
  id: String
  idTokenLifetime: Int
  isTrusted: Boolean
  javascriptOrigins: oAuthJavascriptOriginCreateManyWithoutClientInput
  name: String!
  redirectUris: oAuthRedirectURICreateManyWithoutClientInput
  refreshTokenLifetime: Int
  scopes: oAuthClientScopeCreateManyWithoutClientInput
  secret: String
  updatedAt: DateTime
}

input oAuthClientCreateWithoutScopesInput {
  accessTokenLifetime: Int
  accessTokens: oAuthAccessTokenCreateManyWithoutClientInput
  authorizationCodes: oAuthAuthorizationCodeCreateManyWithoutClientInput
  createdAt: DateTime
  grants: oAuthClientGrantCreateManyWithoutClientInput
  id: String
  idTokenLifetime: Int
  isTrusted: Boolean
  javascriptOrigins: oAuthJavascriptOriginCreateManyWithoutClientInput
  name: String!
  redirectUris: oAuthRedirectURICreateManyWithoutClientInput
  refreshTokenLifetime: Int
  refreshTokens: oAuthRefreshTokenCreateManyWithoutClientInput
  secret: String
  updatedAt: DateTime
}

type oAuthClientGrant {
  client: oAuthClient!
  createdAt: DateTime!
  grant: oAuthGrant!
}

input oAuthClientGrantCreateManyWithoutClientInput {
  connect: [oAuthClientGrantWhereUniqueInput!]
  connectOrCreate: [oAuthClientGrantCreateOrConnectWithoutoAuthClientInput!]
  create: [oAuthClientGrantCreateWithoutClientInput!]
}

input oAuthClientGrantCreateOrConnectWithoutoAuthClientInput {
  create: oAuthClientGrantCreateWithoutClientInput!
  where: oAuthClientGrantWhereUniqueInput!
}

input oAuthClientGrantCreateWithoutClientInput {
  createdAt: DateTime
  grant: oAuthGrantCreateOneWithoutClientsInput!
}

input oAuthClientGrantWhereUniqueInput {
  oAuthClientId_oAuthGrantId: OAuthClientIdOAuthGrantIdCompoundUniqueInput
}

input OAuthClientIdOAuthGrantIdCompoundUniqueInput {
  oAuthClientId: String!
  oAuthGrantId: String!
}

input OAuthClientIdOAuthScopeIdCompoundUniqueInput {
  oAuthClientId: String!
  oAuthScopeId: String!
}

type oAuthClientScope {
  client: oAuthClient!
  createdAt: DateTime!
  scope: oAuthScope!
}

input oAuthClientScopeCreateManyWithoutClientInput {
  connect: [oAuthClientScopeWhereUniqueInput!]
  connectOrCreate: [oAuthClientScopeCreateOrConnectWithoutoAuthClientInput!]
  create: [oAuthClientScopeCreateWithoutClientInput!]
}

input oAuthClientScopeCreateManyWithoutScopeInput {
  connect: [oAuthClientScopeWhereUniqueInput!]
  connectOrCreate: [oAuthClientScopeCreateOrConnectWithoutoAuthScopeInput!]
  create: [oAuthClientScopeCreateWithoutScopeInput!]
}

input oAuthClientScopeCreateOrConnectWithoutoAuthClientInput {
  create: oAuthClientScopeCreateWithoutClientInput!
  where: oAuthClientScopeWhereUniqueInput!
}

input oAuthClientScopeCreateOrConnectWithoutoAuthScopeInput {
  create: oAuthClientScopeCreateWithoutScopeInput!
  where: oAuthClientScopeWhereUniqueInput!
}

input oAuthClientScopeCreateWithoutClientInput {
  createdAt: DateTime
  scope: oAuthScopeCreateOneWithoutClientsInput!
}

input oAuthClientScopeCreateWithoutScopeInput {
  client: oAuthClientCreateOneWithoutScopesInput!
  createdAt: DateTime
}

input oAuthClientScopeWhereUniqueInput {
  oAuthClientId_oAuthScopeId: OAuthClientIdOAuthScopeIdCompoundUniqueInput
}

input oAuthClientWhereUniqueInput {
  id: String
  name: String
}

type oAuthCustomScope {
  createdAt: DateTime!
  description: String
  name: String!
  resourceServer: oAuthResourceServer!
  updatedAt: DateTime!
}

input oAuthCustomScopeWhereUniqueInput {
  id: String
}

type oAuthGrant {
  createdAt: DateTime!
  grantType: GrantType!
}

input oAuthGrantCreateOneWithoutClientsInput {
  connect: oAuthGrantWhereUniqueInput
  connectOrCreate: oAuthGrantCreateOrConnectWithoutoAuthClientGrantInput
  create: oAuthGrantCreateWithoutClientsInput
}

input oAuthGrantCreateOrConnectWithoutoAuthClientGrantInput {
  create: oAuthGrantCreateWithoutClientsInput!
  where: oAuthGrantWhereUniqueInput!
}

input oAuthGrantCreateWithoutClientsInput {
  createdAt: DateTime
  grantType: GrantType!
  id: String
  updatedAt: DateTime
}

input oAuthGrantWhereUniqueInput {
  id: String
}

type oAuthJavascriptOrigin {
  createdAt: DateTime!
  uri: String!
}

input oAuthJavascriptOriginCreateManyWithoutClientInput {
  connect: [oAuthJavascriptOriginWhereUniqueInput!]
  connectOrCreate: [oAuthJavascriptOriginCreateOrConnectWithoutoAuthClientInput!]
  create: [oAuthJavascriptOriginCreateWithoutClientInput!]
}

input oAuthJavascriptOriginCreateOrConnectWithoutoAuthClientInput {
  create: oAuthJavascriptOriginCreateWithoutClientInput!
  where: oAuthJavascriptOriginWhereUniqueInput!
}

input oAuthJavascriptOriginCreateWithoutClientInput {
  createdAt: DateTime
  id: String
  updatedAt: DateTime
  uri: String!
}

input oAuthJavascriptOriginWhereUniqueInput {
  id: String
}

type oAuthRedirectURI {
  createdAt: DateTime!
  url: String!
}

input oAuthRedirectURICreateManyWithoutClientInput {
  connect: [oAuthRedirectURIWhereUniqueInput!]
  connectOrCreate: [oAuthRedirectURICreateOrConnectWithoutoAuthClientInput!]
  create: [oAuthRedirectURICreateWithoutClientInput!]
}

input oAuthRedirectURICreateOrConnectWithoutoAuthClientInput {
  create: oAuthRedirectURICreateWithoutClientInput!
  where: oAuthRedirectURIWhereUniqueInput!
}

input oAuthRedirectURICreateWithoutClientInput {
  createdAt: DateTime
  id: String
  updatedAt: DateTime
  url: String!
}

input oAuthRedirectURIWhereUniqueInput {
  id: String
}

type oAuthRefreshToken {
  createdAt: DateTime!
  expirationDate: DateTime!
  refreshToken: String!
}

input oAuthRefreshTokenCreateManyWithoutClientInput {
  connect: [oAuthRefreshTokenWhereUniqueInput!]
  connectOrCreate: [oAuthRefreshTokenCreateOrConnectWithoutoAuthClientInput!]
  create: [oAuthRefreshTokenCreateWithoutClientInput!]
}

input oAuthRefreshTokenCreateManyWithoutUserInput {
  connect: [oAuthRefreshTokenWhereUniqueInput!]
  connectOrCreate: [oAuthRefreshTokenCreateOrConnectWithoutUserInput!]
  create: [oAuthRefreshTokenCreateWithoutUserInput!]
}

input oAuthRefreshTokenCreateOneWithoutScopesInput {
  connect: oAuthRefreshTokenWhereUniqueInput
  connectOrCreate: oAuthRefreshTokenCreateOrConnectWithoutoAuthRefreshTokenScopeInput
  create: oAuthRefreshTokenCreateWithoutScopesInput
}

input oAuthRefreshTokenCreateOrConnectWithoutoAuthClientInput {
  create: oAuthRefreshTokenCreateWithoutClientInput!
  where: oAuthRefreshTokenWhereUniqueInput!
}

input oAuthRefreshTokenCreateOrConnectWithoutoAuthRefreshTokenScopeInput {
  create: oAuthRefreshTokenCreateWithoutScopesInput!
  where: oAuthRefreshTokenWhereUniqueInput!
}

input oAuthRefreshTokenCreateOrConnectWithoutUserInput {
  create: oAuthRefreshTokenCreateWithoutUserInput!
  where: oAuthRefreshTokenWhereUniqueInput!
}

input oAuthRefreshTokenCreateWithoutClientInput {
  createdAt: DateTime
  expirationDate: DateTime!
  id: String
  refreshToken: String
  scopes: oAuthRefreshTokenScopeCreateManyWithoutRefreshTokenInput
  updatedAt: DateTime
  user: UserCreateOneWithoutOAuthRefreshTokenInput
}

input oAuthRefreshTokenCreateWithoutScopesInput {
  client: oAuthClientCreateOneWithoutRefreshTokensInput!
  createdAt: DateTime
  expirationDate: DateTime!
  id: String
  refreshToken: String
  updatedAt: DateTime
  user: UserCreateOneWithoutOAuthRefreshTokenInput
}

input oAuthRefreshTokenCreateWithoutUserInput {
  client: oAuthClientCreateOneWithoutRefreshTokensInput!
  createdAt: DateTime
  expirationDate: DateTime!
  id: String
  refreshToken: String
  scopes: oAuthRefreshTokenScopeCreateManyWithoutRefreshTokenInput
  updatedAt: DateTime
}

input OAuthRefreshTokenIdOAuthScopeIdCompoundUniqueInput {
  oAuthRefreshTokenId: String!
  oAuthScopeId: String!
}

type oAuthRefreshTokenScope {
  refreshToken: oAuthRefreshToken!
  scope: oAuthScope!
}

input oAuthRefreshTokenScopeCreateManyWithoutRefreshTokenInput {
  connect: [oAuthRefreshTokenScopeWhereUniqueInput!]
  connectOrCreate: [oAuthRefreshTokenScopeCreateOrConnectWithoutoAuthRefreshTokenInput!]
  create: [oAuthRefreshTokenScopeCreateWithoutRefreshTokenInput!]
}

input oAuthRefreshTokenScopeCreateManyWithoutScopeInput {
  connect: [oAuthRefreshTokenScopeWhereUniqueInput!]
  connectOrCreate: [oAuthRefreshTokenScopeCreateOrConnectWithoutoAuthScopeInput!]
  create: [oAuthRefreshTokenScopeCreateWithoutScopeInput!]
}

input oAuthRefreshTokenScopeCreateOrConnectWithoutoAuthRefreshTokenInput {
  create: oAuthRefreshTokenScopeCreateWithoutRefreshTokenInput!
  where: oAuthRefreshTokenScopeWhereUniqueInput!
}

input oAuthRefreshTokenScopeCreateOrConnectWithoutoAuthScopeInput {
  create: oAuthRefreshTokenScopeCreateWithoutScopeInput!
  where: oAuthRefreshTokenScopeWhereUniqueInput!
}

input oAuthRefreshTokenScopeCreateWithoutRefreshTokenInput {
  createdAt: DateTime
  scope: oAuthScopeCreateOneWithoutRefreshTokenScopeInput!
}

input oAuthRefreshTokenScopeCreateWithoutScopeInput {
  createdAt: DateTime
  refreshToken: oAuthRefreshTokenCreateOneWithoutScopesInput!
}

input oAuthRefreshTokenScopeWhereUniqueInput {
  oAuthRefreshTokenId_oAuthScopeId: OAuthRefreshTokenIdOAuthScopeIdCompoundUniqueInput
}

input oAuthRefreshTokenWhereUniqueInput {
  id: String
  refreshToken_oAuthClientId: RefreshTokenOAuthClientIdCompoundUniqueInput
  userId_oAuthClientId: UserIdOAuthClientIdCompoundUniqueInput
}

type oAuthResourceServer {
  createdAt: DateTime!
  identifier: String!
  name: String!
  scopes(after: oAuthCustomScopeWhereUniqueInput, before: oAuthCustomScopeWhereUniqueInput, first: Int, last: Int): [oAuthCustomScope!]!
}

type oAuthScope {
  description: String
  name: String!
}

input oAuthScopeCreateOneWithoutAccessTokensInput {
  connect: oAuthScopeWhereUniqueInput
  connectOrCreate: oAuthScopeCreateOrConnectWithoutoAuthAccessTokenScopeInput
  create: oAuthScopeCreateWithoutAccessTokensInput
}

input oAuthScopeCreateOneWithoutAuthorizationCodesInput {
  connect: oAuthScopeWhereUniqueInput
  connectOrCreate: oAuthScopeCreateOrConnectWithoutoAuthAuthorizationCodeScopeInput
  create: oAuthScopeCreateWithoutAuthorizationCodesInput
}

input oAuthScopeCreateOneWithoutClientsInput {
  connect: oAuthScopeWhereUniqueInput
  connectOrCreate: oAuthScopeCreateOrConnectWithoutoAuthClientScopeInput
  create: oAuthScopeCreateWithoutClientsInput
}

input oAuthScopeCreateOneWithoutRefreshTokenScopeInput {
  connect: oAuthScopeWhereUniqueInput
  connectOrCreate: oAuthScopeCreateOrConnectWithoutoAuthRefreshTokenScopeInput
  create: oAuthScopeCreateWithoutRefreshTokenScopeInput
}

input oAuthScopeCreateOrConnectWithoutoAuthAccessTokenScopeInput {
  create: oAuthScopeCreateWithoutAccessTokensInput!
  where: oAuthScopeWhereUniqueInput!
}

input oAuthScopeCreateOrConnectWithoutoAuthAuthorizationCodeScopeInput {
  create: oAuthScopeCreateWithoutAuthorizationCodesInput!
  where: oAuthScopeWhereUniqueInput!
}

input oAuthScopeCreateOrConnectWithoutoAuthClientScopeInput {
  create: oAuthScopeCreateWithoutClientsInput!
  where: oAuthScopeWhereUniqueInput!
}

input oAuthScopeCreateOrConnectWithoutoAuthRefreshTokenScopeInput {
  create: oAuthScopeCreateWithoutRefreshTokenScopeInput!
  where: oAuthScopeWhereUniqueInput!
}

input oAuthScopeCreateWithoutAccessTokensInput {
  authorizationCodes: oAuthAuthorizationCodeScopeCreateManyWithoutScopeInput
  clients: oAuthClientScopeCreateManyWithoutScopeInput
  createdAt: DateTime
  description: String
  id: String
  name: String!
  refreshTokenScope: oAuthRefreshTokenScopeCreateManyWithoutScopeInput
  updatedAt: DateTime
}

input oAuthScopeCreateWithoutAuthorizationCodesInput {
  accessTokens: oAuthAccessTokenScopeCreateManyWithoutScopeInput
  clients: oAuthClientScopeCreateManyWithoutScopeInput
  createdAt: DateTime
  description: String
  id: String
  name: String!
  refreshTokenScope: oAuthRefreshTokenScopeCreateManyWithoutScopeInput
  updatedAt: DateTime
}

input oAuthScopeCreateWithoutClientsInput {
  accessTokens: oAuthAccessTokenScopeCreateManyWithoutScopeInput
  authorizationCodes: oAuthAuthorizationCodeScopeCreateManyWithoutScopeInput
  createdAt: DateTime
  description: String
  id: String
  name: String!
  refreshTokenScope: oAuthRefreshTokenScopeCreateManyWithoutScopeInput
  updatedAt: DateTime
}

input oAuthScopeCreateWithoutRefreshTokenScopeInput {
  accessTokens: oAuthAccessTokenScopeCreateManyWithoutScopeInput
  authorizationCodes: oAuthAuthorizationCodeScopeCreateManyWithoutScopeInput
  clients: oAuthClientScopeCreateManyWithoutScopeInput
  createdAt: DateTime
  description: String
  id: String
  name: String!
  updatedAt: DateTime
}

input OAuthScopeIdOAuthAccessTokenIdCompoundUniqueInput {
  oAuthAccessTokenId: String!
  oAuthScopeId: String!
}

input oAuthScopeWhereUniqueInput {
  id: String
}

input PasswordResetCreateManyWithoutUserInput {
  connect: [PasswordResetWhereUniqueInput!]
  connectOrCreate: [PasswordResetCreateOrConnectWithoutUserInput!]
  create: [PasswordResetCreateWithoutUserInput!]
}

input PasswordResetCreateOrConnectWithoutUserInput {
  create: PasswordResetCreateWithoutUserInput!
  where: PasswordResetWhereUniqueInput!
}

input PasswordResetCreateWithoutUserInput {
  createdAt: DateTime
  id: String
  token: String!
  updatedAt: DateTime
}

input PasswordResetWhereUniqueInput {
  id: String
}

type Profile {
  birthdate: DateTime
  createdAt: DateTime!
  displayName: String
  firstName: String
  gender: Gender
  image: String
  lastName: String
  mobileNumber: String
  updatedAt: DateTime!
  user: User!
}

input ProfileCreateOneWithoutUserInput {
  connect: ProfileWhereUniqueInput
  connectOrCreate: ProfileCreateOrConnectWithoutUserInput
  create: ProfileCreateWithoutUserInput
}

input ProfileCreateOrConnectWithoutUserInput {
  create: ProfileCreateWithoutUserInput!
  where: ProfileWhereUniqueInput!
}

input ProfileCreateWithoutUserInput {
  address1: String
  address2: String
  birthdate: DateTime
  createdAt: DateTime
  displayName: String
  firstName: String
  gender: Gender
  id: String
  image: String
  lastName: String
  mobileNumber: String
  updatedAt: DateTime
}

input ProfileWhereUniqueInput {
  id: String
}

type Query {
  oAuthAccessToken(where: oAuthAccessTokenWhereUniqueInput!): oAuthAccessToken
  oAuthAuthorizationCode(where: oAuthAuthorizationCodeWhereUniqueInput!): oAuthAuthorizationCode
  oAuthClient(where: oAuthClientWhereUniqueInput!): oAuthClient
  oAuthClients(after: oAuthClientWhereUniqueInput, before: oAuthClientWhereUniqueInput, first: Int, last: Int): [oAuthClient!]!
  oAuthGrants(after: oAuthGrantWhereUniqueInput, before: oAuthGrantWhereUniqueInput, first: Int, last: Int): [oAuthGrant!]!
  oAuthRefreshToken(where: oAuthRefreshTokenWhereUniqueInput!): oAuthRefreshToken
  user(where: UserWhereUniqueInput!): User
  users(after: UserWhereUniqueInput, before: UserWhereUniqueInput, first: Int, last: Int): [User!]!
}

input RefreshTokenOAuthClientIdCompoundUniqueInput {
  oAuthClientId: String!
  refreshToken: String!
}

"""Roles of oauth system"""
enum SystemRole {
  ADMIN
  DEVELOPER
  SUPER_ADMIN
  USER
}

input SystemUserIdSystemGroupIdCompoundUniqueInput {
  systemGroupId: String!
  systemUserId: String!
}

type User {
  createdAt: DateTime!
  email: String!
  groups(after: UserGroupWhereUniqueInput, before: UserGroupWhereUniqueInput, first: Int, last: Int): [UserGroup!]!
  profile: Profile!
  role: SystemRole!
  updatedAt: DateTime!
  username: String!
}

input UserCreateInput {
  createdAt: DateTime
  devices: UserDeviceCreateManyWithoutUserInput
  email: String!
  email_verified: Boolean
  email_verified_at: DateTime
  groups: UserGroupCreateManyWithoutUserInput
  id: String
  isDisabled: Boolean
  oAuthAccessToken: oAuthAccessTokenCreateManyWithoutUserInput
  oAuthAuthorizationCode: oAuthAuthorizationCodeCreateManyWithoutUserInput
  oAuthRefreshToken: oAuthRefreshTokenCreateManyWithoutUserInput
  password: String!
  passwordResets: PasswordResetCreateManyWithoutUserInput
  profile: ProfileCreateOneWithoutUserInput
  role: SystemRole
  updatedAt: DateTime
  username: String
}

input UserCreateOneWithoutOAuthAccessTokenInput {
  connect: UserWhereUniqueInput
  connectOrCreate: UserCreateOrConnectWithoutoAuthAccessTokenInput
  create: UserCreateWithoutOAuthAccessTokenInput
}

input UserCreateOneWithoutOAuthAuthorizationCodeInput {
  connect: UserWhereUniqueInput
  connectOrCreate: UserCreateOrConnectWithoutoAuthAuthorizationCodeInput
  create: UserCreateWithoutOAuthAuthorizationCodeInput
}

input UserCreateOneWithoutOAuthRefreshTokenInput {
  connect: UserWhereUniqueInput
  connectOrCreate: UserCreateOrConnectWithoutoAuthRefreshTokenInput
  create: UserCreateWithoutOAuthRefreshTokenInput
}

input UserCreateOrConnectWithoutoAuthAccessTokenInput {
  create: UserCreateWithoutOAuthAccessTokenInput!
  where: UserWhereUniqueInput!
}

input UserCreateOrConnectWithoutoAuthAuthorizationCodeInput {
  create: UserCreateWithoutOAuthAuthorizationCodeInput!
  where: UserWhereUniqueInput!
}

input UserCreateOrConnectWithoutoAuthRefreshTokenInput {
  create: UserCreateWithoutOAuthRefreshTokenInput!
  where: UserWhereUniqueInput!
}

input UserCreateWithoutOAuthAccessTokenInput {
  createdAt: DateTime
  devices: UserDeviceCreateManyWithoutUserInput
  email: String!
  email_verified: Boolean
  email_verified_at: DateTime
  groups: UserGroupCreateManyWithoutUserInput
  id: String
  isDisabled: Boolean
  oAuthAuthorizationCode: oAuthAuthorizationCodeCreateManyWithoutUserInput
  oAuthRefreshToken: oAuthRefreshTokenCreateManyWithoutUserInput
  password: String!
  passwordResets: PasswordResetCreateManyWithoutUserInput
  profile: ProfileCreateOneWithoutUserInput
  role: SystemRole
  updatedAt: DateTime
  username: String
}

input UserCreateWithoutOAuthAuthorizationCodeInput {
  createdAt: DateTime
  devices: UserDeviceCreateManyWithoutUserInput
  email: String!
  email_verified: Boolean
  email_verified_at: DateTime
  groups: UserGroupCreateManyWithoutUserInput
  id: String
  isDisabled: Boolean
  oAuthAccessToken: oAuthAccessTokenCreateManyWithoutUserInput
  oAuthRefreshToken: oAuthRefreshTokenCreateManyWithoutUserInput
  password: String!
  passwordResets: PasswordResetCreateManyWithoutUserInput
  profile: ProfileCreateOneWithoutUserInput
  role: SystemRole
  updatedAt: DateTime
  username: String
}

input UserCreateWithoutOAuthRefreshTokenInput {
  createdAt: DateTime
  devices: UserDeviceCreateManyWithoutUserInput
  email: String!
  email_verified: Boolean
  email_verified_at: DateTime
  groups: UserGroupCreateManyWithoutUserInput
  id: String
  isDisabled: Boolean
  oAuthAccessToken: oAuthAccessTokenCreateManyWithoutUserInput
  oAuthAuthorizationCode: oAuthAuthorizationCodeCreateManyWithoutUserInput
  password: String!
  passwordResets: PasswordResetCreateManyWithoutUserInput
  profile: ProfileCreateOneWithoutUserInput
  role: SystemRole
  updatedAt: DateTime
  username: String
}

input UserDeviceCreateManyWithoutUserInput {
  connect: [UserDeviceWhereUniqueInput!]
  connectOrCreate: [UserDeviceCreateOrConnectWithoutUserInput!]
  create: [UserDeviceCreateWithoutUserInput!]
}

input UserDeviceCreateOrConnectWithoutUserInput {
  create: UserDeviceCreateWithoutUserInput!
  where: UserDeviceWhereUniqueInput!
}

input UserDeviceCreateWithoutUserInput {
  createdAt: DateTime
  deviceKey: String!
  id: String
  isRemembered: Boolean
  lastIP: String!
  lastSeen: DateTime!
  name: String
  SDK: String
  updatedAt: DateTime
}

input UserDeviceWhereUniqueInput {
  id: String
}

type UserGroup {
  group: Group!
  user: User!
}

input UserGroupCreateManyWithoutUserInput {
  connect: [UserGroupWhereUniqueInput!]
  connectOrCreate: [UserGroupCreateOrConnectWithoutUserInput!]
  create: [UserGroupCreateWithoutUserInput!]
}

input UserGroupCreateOrConnectWithoutUserInput {
  create: UserGroupCreateWithoutUserInput!
  where: UserGroupWhereUniqueInput!
}

input UserGroupCreateWithoutUserInput {
  createdAt: DateTime
  group: GroupCreateOneWithoutUsersInput!
}

input UserGroupWhereUniqueInput {
  systemUserId_systemGroupId: SystemUserIdSystemGroupIdCompoundUniqueInput
}

input UserIdOAuthClientIdCompoundUniqueInput {
  oAuthClientId: String!
  userId: String!
}

input UserWhereUniqueInput {
  email: String
  id: String
  username: String
}
