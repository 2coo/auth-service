### This file was generated by Nexus Schema
### Do not make changes to this file directly


input AccessTokenOAuthClientIdCompoundUniqueInput {
  accessToken: String!
  oAuthClientId: String!
}

enum AccountStatusType {
  ARCHIVED
  COMPROMISED
  CONFIRMED
  FORCE_CHANGE_PASSWORD
  RESET_REQUIRED
  UNCONFIRMED
  UNKNOWN
}

type AuthPayload {
  token: String
  user: SystemUser
}

input BoolFieldUpdateOperationsInput {
  set: Boolean
}

input BoolFilter {
  equals: Boolean
  not: NestedBoolFilter
}

input CodeOAuthClientIdCompoundUniqueInput {
  code: String!
  oAuthClientId: String!
}

scalar DateTime

input DateTimeFieldUpdateOperationsInput {
  set: DateTime
}

input DateTimeFilter {
  equals: DateTime
  gt: DateTime
  gte: DateTime
  in: [DateTime!]
  lt: DateTime
  lte: DateTime
  not: NestedDateTimeFilter
  notIn: [DateTime!]
}

type Email {
  createdAt: DateTime!
  email: String!
  isVerified: Boolean!
  Profile: Profile!
  updatedAt: DateTime!
}

input EmailCreateManyWithoutProfileInput {
  connect: [EmailWhereUniqueInput!]
  connectOrCreate: [EmailCreateOrConnectWithoutProfileInput!]
  create: [EmailCreateWithoutProfileInput!]
}

input EmailCreateOrConnectWithoutProfileInput {
  create: EmailCreateWithoutProfileInput!
  where: EmailWhereUniqueInput!
}

input EmailCreateWithoutProfileInput {
  createdAt: DateTime
  email: String!
  id: String
  isPrimary: Boolean
  isVerified: Boolean
  updatedAt: DateTime
}

input EmailIsExternalProviderCompoundUniqueInput {
  email: String!
  isExternalProvider: Boolean!
}

input EmailScalarWhereInput {
  AND: [EmailScalarWhereInput!]
  createdAt: DateTimeFilter
  email: StringFilter
  id: StringFilter
  isPrimary: BoolFilter
  isVerified: BoolFilter
  NOT: [EmailScalarWhereInput!]
  OR: [EmailScalarWhereInput!]
  profileId: StringFilter
  updatedAt: DateTimeFilter
}

input EmailUpdateManyDataInput {
  createdAt: DateTimeFieldUpdateOperationsInput
  email: StringFieldUpdateOperationsInput
  id: StringFieldUpdateOperationsInput
  isPrimary: BoolFieldUpdateOperationsInput
  isVerified: BoolFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
}

input EmailUpdateManyWithoutProfileInput {
  connect: [EmailWhereUniqueInput!]
  connectOrCreate: [EmailCreateOrConnectWithoutProfileInput!]
  create: [EmailCreateWithoutProfileInput!]
  delete: [EmailWhereUniqueInput!]
  deleteMany: [EmailScalarWhereInput!]
  disconnect: [EmailWhereUniqueInput!]
  set: [EmailWhereUniqueInput!]
  update: [EmailUpdateWithWhereUniqueWithoutProfileInput!]
  updateMany: [EmailUpdateManyWithWhereNestedInput!]
  upsert: [EmailUpsertWithWhereUniqueWithoutProfileInput!]
}

input EmailUpdateManyWithWhereNestedInput {
  data: EmailUpdateManyDataInput!
  where: EmailScalarWhereInput!
}

input EmailUpdateWithoutProfileDataInput {
  createdAt: DateTimeFieldUpdateOperationsInput
  email: StringFieldUpdateOperationsInput
  id: StringFieldUpdateOperationsInput
  isPrimary: BoolFieldUpdateOperationsInput
  isVerified: BoolFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
}

input EmailUpdateWithWhereUniqueWithoutProfileInput {
  data: EmailUpdateWithoutProfileDataInput!
  where: EmailWhereUniqueInput!
}

input EmailUpsertWithWhereUniqueWithoutProfileInput {
  create: EmailCreateWithoutProfileInput!
  update: EmailUpdateWithoutProfileDataInput!
  where: EmailWhereUniqueInput!
}

input EmailWhereUniqueInput {
  id: String
}

input EnumAccountStatusTypeFieldUpdateOperationsInput {
  set: AccountStatusType
}

input EnumAccountStatusTypeFilter {
  equals: AccountStatusType
  in: [AccountStatusType!]
  not: NestedEnumAccountStatusTypeFilter
  notIn: [AccountStatusType!]
}

input EnumGrantTypeFieldUpdateOperationsInput {
  set: GrantType
}

input EnumGrantTypeFilter {
  equals: GrantType
  in: [GrantType!]
  not: NestedEnumGrantTypeFilter
  notIn: [GrantType!]
}

input EnumSystemRoleFieldUpdateOperationsInput {
  set: SystemRole
}

"""Gender of users"""
enum Gender {
  FEMALE
  MALE
  OTHER
}

""""""
enum GrantType {
  AUTHORIZATION_CODE
  CLIENT_CREDENTIALS
  EXTENSION
  PASSWORD
  REFRESH_TOKEN
}

type Group {
  createdAt: DateTime!
  description: String
  name: String!
  updatedAt: DateTime!
  Users(after: UserWhereUniqueInput, before: UserWhereUniqueInput, first: Int, last: Int): [User!]!
}

input GroupCreateManyWithoutRolesInput {
  connect: [GroupWhereUniqueInput!]
  connectOrCreate: [GroupCreateOrConnectWithoutRoleInput!]
  create: [GroupCreateWithoutRolesInput!]
}

input GroupCreateManyWithoutUserPoolInput {
  connect: [GroupWhereUniqueInput!]
  connectOrCreate: [GroupCreateOrConnectWithoutUserPoolInput!]
  create: [GroupCreateWithoutUserPoolInput!]
}

input GroupCreateManyWithoutUsersInput {
  connect: [GroupWhereUniqueInput!]
  connectOrCreate: [GroupCreateOrConnectWithoutUserInput!]
  create: [GroupCreateWithoutUsersInput!]
}

input GroupCreateOrConnectWithoutRoleInput {
  create: GroupCreateWithoutRolesInput!
  where: GroupWhereUniqueInput!
}

input GroupCreateOrConnectWithoutUserInput {
  create: GroupCreateWithoutUsersInput!
  where: GroupWhereUniqueInput!
}

input GroupCreateOrConnectWithoutUserPoolInput {
  create: GroupCreateWithoutUserPoolInput!
  where: GroupWhereUniqueInput!
}

input GroupCreateWithoutRolesInput {
  createdAt: DateTime
  description: String
  id: String
  name: String!
  updatedAt: DateTime
  UserPool: UserPoolCreateOneWithoutGroupsInput!
  Users: UserCreateManyWithoutGroupsInput
}

input GroupCreateWithoutUserPoolInput {
  createdAt: DateTime
  description: String
  id: String
  name: String!
  Roles: RoleCreateManyWithoutGroupsInput
  updatedAt: DateTime
  Users: UserCreateManyWithoutGroupsInput
}

input GroupCreateWithoutUsersInput {
  createdAt: DateTime
  description: String
  id: String
  name: String!
  Roles: RoleCreateManyWithoutGroupsInput
  updatedAt: DateTime
  UserPool: UserPoolCreateOneWithoutGroupsInput!
}

input GroupScalarWhereInput {
  AND: [GroupScalarWhereInput!]
  createdAt: DateTimeFilter
  description: StringNullableFilter
  id: StringFilter
  name: StringFilter
  NOT: [GroupScalarWhereInput!]
  OR: [GroupScalarWhereInput!]
  updatedAt: DateTimeFilter
  userPoolId: StringFilter
}

input GroupUpdateManyDataInput {
  createdAt: DateTimeFieldUpdateOperationsInput
  description: NullableStringFieldUpdateOperationsInput
  id: StringFieldUpdateOperationsInput
  name: StringFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
}

input GroupUpdateManyWithoutRolesInput {
  connect: [GroupWhereUniqueInput!]
  connectOrCreate: [GroupCreateOrConnectWithoutRoleInput!]
  create: [GroupCreateWithoutRolesInput!]
  delete: [GroupWhereUniqueInput!]
  deleteMany: [GroupScalarWhereInput!]
  disconnect: [GroupWhereUniqueInput!]
  set: [GroupWhereUniqueInput!]
  update: [GroupUpdateWithWhereUniqueWithoutRolesInput!]
  updateMany: [GroupUpdateManyWithWhereNestedInput!]
  upsert: [GroupUpsertWithWhereUniqueWithoutRolesInput!]
}

input GroupUpdateManyWithoutUserPoolInput {
  connect: [GroupWhereUniqueInput!]
  connectOrCreate: [GroupCreateOrConnectWithoutUserPoolInput!]
  create: [GroupCreateWithoutUserPoolInput!]
  delete: [GroupWhereUniqueInput!]
  deleteMany: [GroupScalarWhereInput!]
  disconnect: [GroupWhereUniqueInput!]
  set: [GroupWhereUniqueInput!]
  update: [GroupUpdateWithWhereUniqueWithoutUserPoolInput!]
  updateMany: [GroupUpdateManyWithWhereNestedInput!]
  upsert: [GroupUpsertWithWhereUniqueWithoutUserPoolInput!]
}

input GroupUpdateManyWithoutUsersInput {
  connect: [GroupWhereUniqueInput!]
  connectOrCreate: [GroupCreateOrConnectWithoutUserInput!]
  create: [GroupCreateWithoutUsersInput!]
  delete: [GroupWhereUniqueInput!]
  deleteMany: [GroupScalarWhereInput!]
  disconnect: [GroupWhereUniqueInput!]
  set: [GroupWhereUniqueInput!]
  update: [GroupUpdateWithWhereUniqueWithoutUsersInput!]
  updateMany: [GroupUpdateManyWithWhereNestedInput!]
  upsert: [GroupUpsertWithWhereUniqueWithoutUsersInput!]
}

input GroupUpdateManyWithWhereNestedInput {
  data: GroupUpdateManyDataInput!
  where: GroupScalarWhereInput!
}

input GroupUpdateWithoutRolesDataInput {
  createdAt: DateTimeFieldUpdateOperationsInput
  description: NullableStringFieldUpdateOperationsInput
  id: StringFieldUpdateOperationsInput
  name: StringFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
  UserPool: UserPoolUpdateOneRequiredWithoutGroupsInput
  Users: UserUpdateManyWithoutGroupsInput
}

input GroupUpdateWithoutUserPoolDataInput {
  createdAt: DateTimeFieldUpdateOperationsInput
  description: NullableStringFieldUpdateOperationsInput
  id: StringFieldUpdateOperationsInput
  name: StringFieldUpdateOperationsInput
  Roles: RoleUpdateManyWithoutGroupsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
  Users: UserUpdateManyWithoutGroupsInput
}

input GroupUpdateWithoutUsersDataInput {
  createdAt: DateTimeFieldUpdateOperationsInput
  description: NullableStringFieldUpdateOperationsInput
  id: StringFieldUpdateOperationsInput
  name: StringFieldUpdateOperationsInput
  Roles: RoleUpdateManyWithoutGroupsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
  UserPool: UserPoolUpdateOneRequiredWithoutGroupsInput
}

input GroupUpdateWithWhereUniqueWithoutRolesInput {
  data: GroupUpdateWithoutRolesDataInput!
  where: GroupWhereUniqueInput!
}

input GroupUpdateWithWhereUniqueWithoutUserPoolInput {
  data: GroupUpdateWithoutUserPoolDataInput!
  where: GroupWhereUniqueInput!
}

input GroupUpdateWithWhereUniqueWithoutUsersInput {
  data: GroupUpdateWithoutUsersDataInput!
  where: GroupWhereUniqueInput!
}

input GroupUpsertWithWhereUniqueWithoutRolesInput {
  create: GroupCreateWithoutRolesInput!
  update: GroupUpdateWithoutRolesDataInput!
  where: GroupWhereUniqueInput!
}

input GroupUpsertWithWhereUniqueWithoutUserPoolInput {
  create: GroupCreateWithoutUserPoolInput!
  update: GroupUpdateWithoutUserPoolDataInput!
  where: GroupWhereUniqueInput!
}

input GroupUpsertWithWhereUniqueWithoutUsersInput {
  create: GroupCreateWithoutUsersInput!
  update: GroupUpdateWithoutUsersDataInput!
  where: GroupWhereUniqueInput!
}

input GroupWhereUniqueInput {
  id: String
}

input IntFieldUpdateOperationsInput {
  decrement: Int
  divide: Int
  increment: Int
  multiply: Int
  set: Int
}

input IntFilter {
  equals: Int
  gt: Int
  gte: Int
  in: [Int!]
  lt: Int
  lte: Int
  not: NestedIntFilter
  notIn: [Int!]
}

type Mutation {
  createOneoAuthClient(data: oAuthClientCreateInput!): oAuthClient!
  createOneoAuthRedirectURI(data: oAuthRedirectURICreateInput!): oAuthRedirectURI!
  createOneOrganization(data: OrganizationCreateInput!): Organization!
  createOneUser(data: UserCreateInput!): User!
  createOneUserPool(data: UserPoolCreateInput!): UserPool!
  deleteOneUser(where: UserWhereUniqueInput!): User
  login(email: String!, password: String!): AuthPayload
  updateOneoAuthClient(data: oAuthClientUpdateInput!, where: oAuthClientWhereUniqueInput!): oAuthClient
  updateOneUser(data: UserUpdateInput!, where: UserWhereUniqueInput!): User
}

input NameOrganizationIdCompoundUniqueInput {
  name: String!
  organizationId: String!
}

input NameProfileIdCompoundUniqueInput {
  name: String!
  profileId: String!
}

input NameUserPoolIdCompoundUniqueInput {
  name: String!
  userPoolId: String!
}

input NestedBoolFilter {
  equals: Boolean
  not: NestedBoolFilter
}

input NestedDateTimeFilter {
  equals: DateTime
  gt: DateTime
  gte: DateTime
  in: [DateTime!]
  lt: DateTime
  lte: DateTime
  not: NestedDateTimeFilter
  notIn: [DateTime!]
}

input NestedEnumAccountStatusTypeFilter {
  equals: AccountStatusType
  in: [AccountStatusType!]
  not: NestedEnumAccountStatusTypeFilter
  notIn: [AccountStatusType!]
}

input NestedEnumGrantTypeFilter {
  equals: GrantType
  in: [GrantType!]
  not: NestedEnumGrantTypeFilter
  notIn: [GrantType!]
}

input NestedIntFilter {
  equals: Int
  gt: Int
  gte: Int
  in: [Int!]
  lt: Int
  lte: Int
  not: NestedIntFilter
  notIn: [Int!]
}

input NestedStringFilter {
  contains: String
  endsWith: String
  equals: String
  gt: String
  gte: String
  in: [String!]
  lt: String
  lte: String
  not: NestedStringFilter
  notIn: [String!]
  startsWith: String
}

input NestedStringNullableFilter {
  contains: String
  endsWith: String
  equals: String
  gt: String
  gte: String
  in: [String!]
  lt: String
  lte: String
  not: NestedStringNullableFilter
  notIn: [String!]
  startsWith: String
}

input NotificationCreateManyWithoutClientInput {
  connect: [NotificationWhereUniqueInput!]
  connectOrCreate: [NotificationCreateOrConnectWithoutoAuthClientInput!]
  create: [NotificationCreateWithoutClientInput!]
}

input NotificationCreateManyWithoutRecipentInput {
  connect: [NotificationWhereUniqueInput!]
  connectOrCreate: [NotificationCreateOrConnectWithoutUserInput!]
  create: [NotificationCreateWithoutRecipentInput!]
}

input NotificationCreateManyWithoutSenderInput {
  connect: [NotificationWhereUniqueInput!]
  connectOrCreate: [NotificationCreateOrConnectWithoutUserInput!]
  create: [NotificationCreateWithoutSenderInput!]
}

input NotificationCreateOrConnectWithoutoAuthClientInput {
  create: NotificationCreateWithoutClientInput!
  where: NotificationWhereUniqueInput!
}

input NotificationCreateOrConnectWithoutUserInput {
  create: NotificationCreateWithoutRecipentInput!
  where: NotificationWhereUniqueInput!
}

input NotificationCreateWithoutClientInput {
  createdAt: DateTime
  id: String
  isDeleted: Boolean!
  isRead: Boolean!
  Recipent: UserCreateOneWithoutNotificationsInput!
  Sender: UserCreateOneWithoutNotificationInput!
  text: String!
  updatedAt: DateTime
  url: String!
}

input NotificationCreateWithoutRecipentInput {
  Client: oAuthClientCreateOneWithoutNotificationsInput
  createdAt: DateTime
  id: String
  isDeleted: Boolean!
  isRead: Boolean!
  Sender: UserCreateOneWithoutNotificationInput!
  text: String!
  updatedAt: DateTime
  url: String!
}

input NotificationCreateWithoutSenderInput {
  Client: oAuthClientCreateOneWithoutNotificationsInput
  createdAt: DateTime
  id: String
  isDeleted: Boolean!
  isRead: Boolean!
  Recipent: UserCreateOneWithoutNotificationsInput!
  text: String!
  updatedAt: DateTime
  url: String!
}

input NotificationScalarWhereInput {
  AND: [NotificationScalarWhereInput!]
  createdAt: DateTimeFilter
  id: StringFilter
  isDeleted: BoolFilter
  isRead: BoolFilter
  NOT: [NotificationScalarWhereInput!]
  oAuthClientId: StringNullableFilter
  OR: [NotificationScalarWhereInput!]
  recipentId: StringFilter
  senderId: StringFilter
  text: StringFilter
  updatedAt: DateTimeFilter
  url: StringFilter
}

input NotificationUpdateManyDataInput {
  createdAt: DateTimeFieldUpdateOperationsInput
  id: StringFieldUpdateOperationsInput
  isDeleted: BoolFieldUpdateOperationsInput
  isRead: BoolFieldUpdateOperationsInput
  text: StringFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
  url: StringFieldUpdateOperationsInput
}

input NotificationUpdateManyWithoutClientInput {
  connect: [NotificationWhereUniqueInput!]
  connectOrCreate: [NotificationCreateOrConnectWithoutoAuthClientInput!]
  create: [NotificationCreateWithoutClientInput!]
  delete: [NotificationWhereUniqueInput!]
  deleteMany: [NotificationScalarWhereInput!]
  disconnect: [NotificationWhereUniqueInput!]
  set: [NotificationWhereUniqueInput!]
  update: [NotificationUpdateWithWhereUniqueWithoutClientInput!]
  updateMany: [NotificationUpdateManyWithWhereNestedInput!]
  upsert: [NotificationUpsertWithWhereUniqueWithoutClientInput!]
}

input NotificationUpdateManyWithoutRecipentInput {
  connect: [NotificationWhereUniqueInput!]
  connectOrCreate: [NotificationCreateOrConnectWithoutUserInput!]
  create: [NotificationCreateWithoutRecipentInput!]
  delete: [NotificationWhereUniqueInput!]
  deleteMany: [NotificationScalarWhereInput!]
  disconnect: [NotificationWhereUniqueInput!]
  set: [NotificationWhereUniqueInput!]
  update: [NotificationUpdateWithWhereUniqueWithoutRecipentInput!]
  updateMany: [NotificationUpdateManyWithWhereNestedInput!]
  upsert: [NotificationUpsertWithWhereUniqueWithoutRecipentInput!]
}

input NotificationUpdateManyWithoutSenderInput {
  connect: [NotificationWhereUniqueInput!]
  connectOrCreate: [NotificationCreateOrConnectWithoutUserInput!]
  create: [NotificationCreateWithoutSenderInput!]
  delete: [NotificationWhereUniqueInput!]
  deleteMany: [NotificationScalarWhereInput!]
  disconnect: [NotificationWhereUniqueInput!]
  set: [NotificationWhereUniqueInput!]
  update: [NotificationUpdateWithWhereUniqueWithoutSenderInput!]
  updateMany: [NotificationUpdateManyWithWhereNestedInput!]
  upsert: [NotificationUpsertWithWhereUniqueWithoutSenderInput!]
}

input NotificationUpdateManyWithWhereNestedInput {
  data: NotificationUpdateManyDataInput!
  where: NotificationScalarWhereInput!
}

input NotificationUpdateWithoutClientDataInput {
  createdAt: DateTimeFieldUpdateOperationsInput
  id: StringFieldUpdateOperationsInput
  isDeleted: BoolFieldUpdateOperationsInput
  isRead: BoolFieldUpdateOperationsInput
  Recipent: UserUpdateOneRequiredWithoutNotificationsInput
  Sender: UserUpdateOneRequiredWithoutNotificationInput
  text: StringFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
  url: StringFieldUpdateOperationsInput
}

input NotificationUpdateWithoutRecipentDataInput {
  Client: oAuthClientUpdateOneWithoutNotificationsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  id: StringFieldUpdateOperationsInput
  isDeleted: BoolFieldUpdateOperationsInput
  isRead: BoolFieldUpdateOperationsInput
  Sender: UserUpdateOneRequiredWithoutNotificationInput
  text: StringFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
  url: StringFieldUpdateOperationsInput
}

input NotificationUpdateWithoutSenderDataInput {
  Client: oAuthClientUpdateOneWithoutNotificationsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  id: StringFieldUpdateOperationsInput
  isDeleted: BoolFieldUpdateOperationsInput
  isRead: BoolFieldUpdateOperationsInput
  Recipent: UserUpdateOneRequiredWithoutNotificationsInput
  text: StringFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
  url: StringFieldUpdateOperationsInput
}

input NotificationUpdateWithWhereUniqueWithoutClientInput {
  data: NotificationUpdateWithoutClientDataInput!
  where: NotificationWhereUniqueInput!
}

input NotificationUpdateWithWhereUniqueWithoutRecipentInput {
  data: NotificationUpdateWithoutRecipentDataInput!
  where: NotificationWhereUniqueInput!
}

input NotificationUpdateWithWhereUniqueWithoutSenderInput {
  data: NotificationUpdateWithoutSenderDataInput!
  where: NotificationWhereUniqueInput!
}

input NotificationUpsertWithWhereUniqueWithoutClientInput {
  create: NotificationCreateWithoutClientInput!
  update: NotificationUpdateWithoutClientDataInput!
  where: NotificationWhereUniqueInput!
}

input NotificationUpsertWithWhereUniqueWithoutRecipentInput {
  create: NotificationCreateWithoutRecipentInput!
  update: NotificationUpdateWithoutRecipentDataInput!
  where: NotificationWhereUniqueInput!
}

input NotificationUpsertWithWhereUniqueWithoutSenderInput {
  create: NotificationCreateWithoutSenderInput!
  update: NotificationUpdateWithoutSenderDataInput!
  where: NotificationWhereUniqueInput!
}

input NotificationWhereUniqueInput {
  id: String
}

input NullableDateTimeFieldUpdateOperationsInput {
  set: DateTime
}

input NullableEnumGenderFieldUpdateOperationsInput {
  set: Gender
}

input NullableStringFieldUpdateOperationsInput {
  set: String
}

type oAuthAccessToken {
  accessToken: String!
  Client: oAuthClient!
  createdAt: DateTime!
  expirationDate: DateTime!
  Scopes(after: oAuthScopeWhereUniqueInput, before: oAuthScopeWhereUniqueInput, first: Int, last: Int): [oAuthScope!]!
  User: User
}

input oAuthAccessTokenCreateManyWithoutClientInput {
  connect: [oAuthAccessTokenWhereUniqueInput!]
  connectOrCreate: [oAuthAccessTokenCreateOrConnectWithoutoAuthClientInput!]
  create: [oAuthAccessTokenCreateWithoutClientInput!]
}

input oAuthAccessTokenCreateManyWithoutScopesInput {
  connect: [oAuthAccessTokenWhereUniqueInput!]
  connectOrCreate: [oAuthAccessTokenCreateOrConnectWithoutoAuthScopeInput!]
  create: [oAuthAccessTokenCreateWithoutScopesInput!]
}

input oAuthAccessTokenCreateManyWithoutUserInput {
  connect: [oAuthAccessTokenWhereUniqueInput!]
  connectOrCreate: [oAuthAccessTokenCreateOrConnectWithoutUserInput!]
  create: [oAuthAccessTokenCreateWithoutUserInput!]
}

input oAuthAccessTokenCreateOrConnectWithoutoAuthClientInput {
  create: oAuthAccessTokenCreateWithoutClientInput!
  where: oAuthAccessTokenWhereUniqueInput!
}

input oAuthAccessTokenCreateOrConnectWithoutoAuthScopeInput {
  create: oAuthAccessTokenCreateWithoutScopesInput!
  where: oAuthAccessTokenWhereUniqueInput!
}

input oAuthAccessTokenCreateOrConnectWithoutUserInput {
  create: oAuthAccessTokenCreateWithoutUserInput!
  where: oAuthAccessTokenWhereUniqueInput!
}

input oAuthAccessTokenCreateWithoutClientInput {
  accessToken: String
  createdAt: DateTime
  expirationDate: DateTime!
  id: String
  Scopes: oAuthScopeCreateManyWithoutAccessTokensInput
  updatedAt: DateTime
  User: UserCreateOneWithoutAccessTokensInput
}

input oAuthAccessTokenCreateWithoutScopesInput {
  accessToken: String
  Client: oAuthClientCreateOneWithoutAccessTokensInput!
  createdAt: DateTime
  expirationDate: DateTime!
  id: String
  updatedAt: DateTime
  User: UserCreateOneWithoutAccessTokensInput
}

input oAuthAccessTokenCreateWithoutUserInput {
  accessToken: String
  Client: oAuthClientCreateOneWithoutAccessTokensInput!
  createdAt: DateTime
  expirationDate: DateTime!
  id: String
  Scopes: oAuthScopeCreateManyWithoutAccessTokensInput
  updatedAt: DateTime
}

input oAuthAccessTokenScalarWhereInput {
  accessToken: StringFilter
  AND: [oAuthAccessTokenScalarWhereInput!]
  createdAt: DateTimeFilter
  expirationDate: DateTimeFilter
  id: StringFilter
  NOT: [oAuthAccessTokenScalarWhereInput!]
  oAuthClientId: StringFilter
  OR: [oAuthAccessTokenScalarWhereInput!]
  updatedAt: DateTimeFilter
  userId: StringNullableFilter
}

input oAuthAccessTokenUpdateManyDataInput {
  accessToken: StringFieldUpdateOperationsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  expirationDate: DateTimeFieldUpdateOperationsInput
  id: StringFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
}

input oAuthAccessTokenUpdateManyWithoutClientInput {
  connect: [oAuthAccessTokenWhereUniqueInput!]
  connectOrCreate: [oAuthAccessTokenCreateOrConnectWithoutoAuthClientInput!]
  create: [oAuthAccessTokenCreateWithoutClientInput!]
  delete: [oAuthAccessTokenWhereUniqueInput!]
  deleteMany: [oAuthAccessTokenScalarWhereInput!]
  disconnect: [oAuthAccessTokenWhereUniqueInput!]
  set: [oAuthAccessTokenWhereUniqueInput!]
  update: [oAuthAccessTokenUpdateWithWhereUniqueWithoutClientInput!]
  updateMany: [oAuthAccessTokenUpdateManyWithWhereNestedInput!]
  upsert: [oAuthAccessTokenUpsertWithWhereUniqueWithoutClientInput!]
}

input oAuthAccessTokenUpdateManyWithoutScopesInput {
  connect: [oAuthAccessTokenWhereUniqueInput!]
  connectOrCreate: [oAuthAccessTokenCreateOrConnectWithoutoAuthScopeInput!]
  create: [oAuthAccessTokenCreateWithoutScopesInput!]
  delete: [oAuthAccessTokenWhereUniqueInput!]
  deleteMany: [oAuthAccessTokenScalarWhereInput!]
  disconnect: [oAuthAccessTokenWhereUniqueInput!]
  set: [oAuthAccessTokenWhereUniqueInput!]
  update: [oAuthAccessTokenUpdateWithWhereUniqueWithoutScopesInput!]
  updateMany: [oAuthAccessTokenUpdateManyWithWhereNestedInput!]
  upsert: [oAuthAccessTokenUpsertWithWhereUniqueWithoutScopesInput!]
}

input oAuthAccessTokenUpdateManyWithoutUserInput {
  connect: [oAuthAccessTokenWhereUniqueInput!]
  connectOrCreate: [oAuthAccessTokenCreateOrConnectWithoutUserInput!]
  create: [oAuthAccessTokenCreateWithoutUserInput!]
  delete: [oAuthAccessTokenWhereUniqueInput!]
  deleteMany: [oAuthAccessTokenScalarWhereInput!]
  disconnect: [oAuthAccessTokenWhereUniqueInput!]
  set: [oAuthAccessTokenWhereUniqueInput!]
  update: [oAuthAccessTokenUpdateWithWhereUniqueWithoutUserInput!]
  updateMany: [oAuthAccessTokenUpdateManyWithWhereNestedInput!]
  upsert: [oAuthAccessTokenUpsertWithWhereUniqueWithoutUserInput!]
}

input oAuthAccessTokenUpdateManyWithWhereNestedInput {
  data: oAuthAccessTokenUpdateManyDataInput!
  where: oAuthAccessTokenScalarWhereInput!
}

input oAuthAccessTokenUpdateWithoutClientDataInput {
  accessToken: StringFieldUpdateOperationsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  expirationDate: DateTimeFieldUpdateOperationsInput
  id: StringFieldUpdateOperationsInput
  Scopes: oAuthScopeUpdateManyWithoutAccessTokensInput
  updatedAt: DateTimeFieldUpdateOperationsInput
  User: UserUpdateOneWithoutAccessTokensInput
}

input oAuthAccessTokenUpdateWithoutScopesDataInput {
  accessToken: StringFieldUpdateOperationsInput
  Client: oAuthClientUpdateOneRequiredWithoutAccessTokensInput
  createdAt: DateTimeFieldUpdateOperationsInput
  expirationDate: DateTimeFieldUpdateOperationsInput
  id: StringFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
  User: UserUpdateOneWithoutAccessTokensInput
}

input oAuthAccessTokenUpdateWithoutUserDataInput {
  accessToken: StringFieldUpdateOperationsInput
  Client: oAuthClientUpdateOneRequiredWithoutAccessTokensInput
  createdAt: DateTimeFieldUpdateOperationsInput
  expirationDate: DateTimeFieldUpdateOperationsInput
  id: StringFieldUpdateOperationsInput
  Scopes: oAuthScopeUpdateManyWithoutAccessTokensInput
  updatedAt: DateTimeFieldUpdateOperationsInput
}

input oAuthAccessTokenUpdateWithWhereUniqueWithoutClientInput {
  data: oAuthAccessTokenUpdateWithoutClientDataInput!
  where: oAuthAccessTokenWhereUniqueInput!
}

input oAuthAccessTokenUpdateWithWhereUniqueWithoutScopesInput {
  data: oAuthAccessTokenUpdateWithoutScopesDataInput!
  where: oAuthAccessTokenWhereUniqueInput!
}

input oAuthAccessTokenUpdateWithWhereUniqueWithoutUserInput {
  data: oAuthAccessTokenUpdateWithoutUserDataInput!
  where: oAuthAccessTokenWhereUniqueInput!
}

input oAuthAccessTokenUpsertWithWhereUniqueWithoutClientInput {
  create: oAuthAccessTokenCreateWithoutClientInput!
  update: oAuthAccessTokenUpdateWithoutClientDataInput!
  where: oAuthAccessTokenWhereUniqueInput!
}

input oAuthAccessTokenUpsertWithWhereUniqueWithoutScopesInput {
  create: oAuthAccessTokenCreateWithoutScopesInput!
  update: oAuthAccessTokenUpdateWithoutScopesDataInput!
  where: oAuthAccessTokenWhereUniqueInput!
}

input oAuthAccessTokenUpsertWithWhereUniqueWithoutUserInput {
  create: oAuthAccessTokenCreateWithoutUserInput!
  update: oAuthAccessTokenUpdateWithoutUserDataInput!
  where: oAuthAccessTokenWhereUniqueInput!
}

input oAuthAccessTokenWhereUniqueInput {
  accessToken_oAuthClientId: AccessTokenOAuthClientIdCompoundUniqueInput
  id: String
  userId_oAuthClientId: UserIdOAuthClientIdCompoundUniqueInput
}

type oAuthAuthorizationCode {
  Client: oAuthClient!
  code: String!
  createdAt: DateTime!
  expirationDate: DateTime!
  redirectURI: String!
  Scopes(after: oAuthScopeWhereUniqueInput, before: oAuthScopeWhereUniqueInput, first: Int, last: Int): [oAuthScope!]!
  User: User!
}

input oAuthAuthorizationCodeCreateManyWithoutClientInput {
  connect: [oAuthAuthorizationCodeWhereUniqueInput!]
  connectOrCreate: [oAuthAuthorizationCodeCreateOrConnectWithoutoAuthClientInput!]
  create: [oAuthAuthorizationCodeCreateWithoutClientInput!]
}

input oAuthAuthorizationCodeCreateManyWithoutScopesInput {
  connect: [oAuthAuthorizationCodeWhereUniqueInput!]
  connectOrCreate: [oAuthAuthorizationCodeCreateOrConnectWithoutoAuthScopeInput!]
  create: [oAuthAuthorizationCodeCreateWithoutScopesInput!]
}

input oAuthAuthorizationCodeCreateManyWithoutUserInput {
  connect: [oAuthAuthorizationCodeWhereUniqueInput!]
  connectOrCreate: [oAuthAuthorizationCodeCreateOrConnectWithoutUserInput!]
  create: [oAuthAuthorizationCodeCreateWithoutUserInput!]
}

input oAuthAuthorizationCodeCreateOrConnectWithoutoAuthClientInput {
  create: oAuthAuthorizationCodeCreateWithoutClientInput!
  where: oAuthAuthorizationCodeWhereUniqueInput!
}

input oAuthAuthorizationCodeCreateOrConnectWithoutoAuthScopeInput {
  create: oAuthAuthorizationCodeCreateWithoutScopesInput!
  where: oAuthAuthorizationCodeWhereUniqueInput!
}

input oAuthAuthorizationCodeCreateOrConnectWithoutUserInput {
  create: oAuthAuthorizationCodeCreateWithoutUserInput!
  where: oAuthAuthorizationCodeWhereUniqueInput!
}

input oAuthAuthorizationCodeCreateWithoutClientInput {
  code: String
  createdAt: DateTime
  expirationDate: DateTime!
  id: String
  redirectURI: String!
  Scopes: oAuthScopeCreateManyWithoutAuthorizationCodesInput
  updatedAt: DateTime
  User: UserCreateOneWithoutAuthorizationCodesInput!
}

input oAuthAuthorizationCodeCreateWithoutScopesInput {
  Client: oAuthClientCreateOneWithoutAuthorizationCodesInput!
  code: String
  createdAt: DateTime
  expirationDate: DateTime!
  id: String
  redirectURI: String!
  updatedAt: DateTime
  User: UserCreateOneWithoutAuthorizationCodesInput!
}

input oAuthAuthorizationCodeCreateWithoutUserInput {
  Client: oAuthClientCreateOneWithoutAuthorizationCodesInput!
  code: String
  createdAt: DateTime
  expirationDate: DateTime!
  id: String
  redirectURI: String!
  Scopes: oAuthScopeCreateManyWithoutAuthorizationCodesInput
  updatedAt: DateTime
}

input oAuthAuthorizationCodeScalarWhereInput {
  AND: [oAuthAuthorizationCodeScalarWhereInput!]
  code: StringFilter
  createdAt: DateTimeFilter
  expirationDate: DateTimeFilter
  id: StringFilter
  NOT: [oAuthAuthorizationCodeScalarWhereInput!]
  oAuthClientId: StringFilter
  OR: [oAuthAuthorizationCodeScalarWhereInput!]
  redirectURI: StringFilter
  updatedAt: DateTimeFilter
  userId: StringFilter
}

input oAuthAuthorizationCodeUpdateManyDataInput {
  code: StringFieldUpdateOperationsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  expirationDate: DateTimeFieldUpdateOperationsInput
  id: StringFieldUpdateOperationsInput
  redirectURI: StringFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
}

input oAuthAuthorizationCodeUpdateManyWithoutClientInput {
  connect: [oAuthAuthorizationCodeWhereUniqueInput!]
  connectOrCreate: [oAuthAuthorizationCodeCreateOrConnectWithoutoAuthClientInput!]
  create: [oAuthAuthorizationCodeCreateWithoutClientInput!]
  delete: [oAuthAuthorizationCodeWhereUniqueInput!]
  deleteMany: [oAuthAuthorizationCodeScalarWhereInput!]
  disconnect: [oAuthAuthorizationCodeWhereUniqueInput!]
  set: [oAuthAuthorizationCodeWhereUniqueInput!]
  update: [oAuthAuthorizationCodeUpdateWithWhereUniqueWithoutClientInput!]
  updateMany: [oAuthAuthorizationCodeUpdateManyWithWhereNestedInput!]
  upsert: [oAuthAuthorizationCodeUpsertWithWhereUniqueWithoutClientInput!]
}

input oAuthAuthorizationCodeUpdateManyWithoutScopesInput {
  connect: [oAuthAuthorizationCodeWhereUniqueInput!]
  connectOrCreate: [oAuthAuthorizationCodeCreateOrConnectWithoutoAuthScopeInput!]
  create: [oAuthAuthorizationCodeCreateWithoutScopesInput!]
  delete: [oAuthAuthorizationCodeWhereUniqueInput!]
  deleteMany: [oAuthAuthorizationCodeScalarWhereInput!]
  disconnect: [oAuthAuthorizationCodeWhereUniqueInput!]
  set: [oAuthAuthorizationCodeWhereUniqueInput!]
  update: [oAuthAuthorizationCodeUpdateWithWhereUniqueWithoutScopesInput!]
  updateMany: [oAuthAuthorizationCodeUpdateManyWithWhereNestedInput!]
  upsert: [oAuthAuthorizationCodeUpsertWithWhereUniqueWithoutScopesInput!]
}

input oAuthAuthorizationCodeUpdateManyWithoutUserInput {
  connect: [oAuthAuthorizationCodeWhereUniqueInput!]
  connectOrCreate: [oAuthAuthorizationCodeCreateOrConnectWithoutUserInput!]
  create: [oAuthAuthorizationCodeCreateWithoutUserInput!]
  delete: [oAuthAuthorizationCodeWhereUniqueInput!]
  deleteMany: [oAuthAuthorizationCodeScalarWhereInput!]
  disconnect: [oAuthAuthorizationCodeWhereUniqueInput!]
  set: [oAuthAuthorizationCodeWhereUniqueInput!]
  update: [oAuthAuthorizationCodeUpdateWithWhereUniqueWithoutUserInput!]
  updateMany: [oAuthAuthorizationCodeUpdateManyWithWhereNestedInput!]
  upsert: [oAuthAuthorizationCodeUpsertWithWhereUniqueWithoutUserInput!]
}

input oAuthAuthorizationCodeUpdateManyWithWhereNestedInput {
  data: oAuthAuthorizationCodeUpdateManyDataInput!
  where: oAuthAuthorizationCodeScalarWhereInput!
}

input oAuthAuthorizationCodeUpdateWithoutClientDataInput {
  code: StringFieldUpdateOperationsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  expirationDate: DateTimeFieldUpdateOperationsInput
  id: StringFieldUpdateOperationsInput
  redirectURI: StringFieldUpdateOperationsInput
  Scopes: oAuthScopeUpdateManyWithoutAuthorizationCodesInput
  updatedAt: DateTimeFieldUpdateOperationsInput
  User: UserUpdateOneRequiredWithoutAuthorizationCodesInput
}

input oAuthAuthorizationCodeUpdateWithoutScopesDataInput {
  Client: oAuthClientUpdateOneRequiredWithoutAuthorizationCodesInput
  code: StringFieldUpdateOperationsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  expirationDate: DateTimeFieldUpdateOperationsInput
  id: StringFieldUpdateOperationsInput
  redirectURI: StringFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
  User: UserUpdateOneRequiredWithoutAuthorizationCodesInput
}

input oAuthAuthorizationCodeUpdateWithoutUserDataInput {
  Client: oAuthClientUpdateOneRequiredWithoutAuthorizationCodesInput
  code: StringFieldUpdateOperationsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  expirationDate: DateTimeFieldUpdateOperationsInput
  id: StringFieldUpdateOperationsInput
  redirectURI: StringFieldUpdateOperationsInput
  Scopes: oAuthScopeUpdateManyWithoutAuthorizationCodesInput
  updatedAt: DateTimeFieldUpdateOperationsInput
}

input oAuthAuthorizationCodeUpdateWithWhereUniqueWithoutClientInput {
  data: oAuthAuthorizationCodeUpdateWithoutClientDataInput!
  where: oAuthAuthorizationCodeWhereUniqueInput!
}

input oAuthAuthorizationCodeUpdateWithWhereUniqueWithoutScopesInput {
  data: oAuthAuthorizationCodeUpdateWithoutScopesDataInput!
  where: oAuthAuthorizationCodeWhereUniqueInput!
}

input oAuthAuthorizationCodeUpdateWithWhereUniqueWithoutUserInput {
  data: oAuthAuthorizationCodeUpdateWithoutUserDataInput!
  where: oAuthAuthorizationCodeWhereUniqueInput!
}

input oAuthAuthorizationCodeUpsertWithWhereUniqueWithoutClientInput {
  create: oAuthAuthorizationCodeCreateWithoutClientInput!
  update: oAuthAuthorizationCodeUpdateWithoutClientDataInput!
  where: oAuthAuthorizationCodeWhereUniqueInput!
}

input oAuthAuthorizationCodeUpsertWithWhereUniqueWithoutScopesInput {
  create: oAuthAuthorizationCodeCreateWithoutScopesInput!
  update: oAuthAuthorizationCodeUpdateWithoutScopesDataInput!
  where: oAuthAuthorizationCodeWhereUniqueInput!
}

input oAuthAuthorizationCodeUpsertWithWhereUniqueWithoutUserInput {
  create: oAuthAuthorizationCodeCreateWithoutUserInput!
  update: oAuthAuthorizationCodeUpdateWithoutUserDataInput!
  where: oAuthAuthorizationCodeWhereUniqueInput!
}

input oAuthAuthorizationCodeWhereUniqueInput {
  code_oAuthClientId: CodeOAuthClientIdCompoundUniqueInput
  id: String
}

type oAuthClient {
  accessTokenLifetime: Int!
  AccessTokens(after: oAuthAccessTokenWhereUniqueInput, before: oAuthAccessTokenWhereUniqueInput, first: Int, last: Int): [oAuthAccessToken!]!
  AuthorizationCodes(after: oAuthAuthorizationCodeWhereUniqueInput, before: oAuthAuthorizationCodeWhereUniqueInput, first: Int, last: Int): [oAuthAuthorizationCode!]!
  createdAt: DateTime!
  EnabledScopes(after: oAuthScopeWhereUniqueInput, before: oAuthScopeWhereUniqueInput, first: Int, last: Int): [oAuthScope!]!
  Grants(after: oAuthGrantWhereUniqueInput, before: oAuthGrantWhereUniqueInput, first: Int, last: Int): [oAuthGrant!]!
  id: String!
  idTokenLifetime: Int!
  isTrusted: Boolean!
  JavascriptOrigins(after: oAuthJavascriptOriginWhereUniqueInput, before: oAuthJavascriptOriginWhereUniqueInput, first: Int, last: Int): [oAuthJavascriptOrigin!]!
  name: String!
  RedirectUris(after: oAuthRedirectURIWhereUniqueInput, before: oAuthRedirectURIWhereUniqueInput, first: Int, last: Int): [oAuthRedirectURI!]!
  refreshTokenLifetime: Int!
  RefreshTokens(after: oAuthRefreshTokenWhereUniqueInput, before: oAuthRefreshTokenWhereUniqueInput, first: Int, last: Int): [oAuthRefreshToken!]!
  secret: String!
  updatedAt: DateTime!
  UserPool: UserPool!
}

input oAuthClientCreateInput {
  accessTokenLifetime: Int
  AccessTokens: oAuthAccessTokenCreateManyWithoutClientInput
  AuthorizationCodes: oAuthAuthorizationCodeCreateManyWithoutClientInput
  createdAt: DateTime
  EnabledCustomScopes: oAuthCustomScopeCreateManyWithoutClientsInput
  EnabledScopes: oAuthScopeCreateManyWithoutClientsInput
  Grants: oAuthGrantCreateManyWithoutClientsInput
  id: String
  idTokenLifetime: Int
  isTrusted: Boolean
  JavascriptOrigins: oAuthJavascriptOriginCreateManyWithoutClientInput
  logo: String
  name: String!
  Notifications: NotificationCreateManyWithoutClientInput
  RedirectUris: oAuthRedirectURICreateManyWithoutClientInput
  refreshTokenLifetime: Int
  RefreshTokens: oAuthRefreshTokenCreateManyWithoutClientInput
  secret: String
  updatedAt: DateTime
  UserPool: UserPoolCreateOneWithoutClientsInput!
}

input oAuthClientCreateManyWithoutEnabledCustomScopesInput {
  connect: [oAuthClientWhereUniqueInput!]
  connectOrCreate: [oAuthClientCreateOrConnectWithoutoAuthCustomScopeInput!]
  create: [oAuthClientCreateWithoutEnabledCustomScopesInput!]
}

input oAuthClientCreateManyWithoutEnabledScopesInput {
  connect: [oAuthClientWhereUniqueInput!]
  connectOrCreate: [oAuthClientCreateOrConnectWithoutoAuthScopeInput!]
  create: [oAuthClientCreateWithoutEnabledScopesInput!]
}

input oAuthClientCreateManyWithoutUserPoolInput {
  connect: [oAuthClientWhereUniqueInput!]
  connectOrCreate: [oAuthClientCreateOrConnectWithoutUserPoolInput!]
  create: [oAuthClientCreateWithoutUserPoolInput!]
}

input oAuthClientCreateOneWithoutAccessTokensInput {
  connect: oAuthClientWhereUniqueInput
  connectOrCreate: oAuthClientCreateOrConnectWithoutoAuthAccessTokenInput
  create: oAuthClientCreateWithoutAccessTokensInput
}

input oAuthClientCreateOneWithoutAuthorizationCodesInput {
  connect: oAuthClientWhereUniqueInput
  connectOrCreate: oAuthClientCreateOrConnectWithoutoAuthAuthorizationCodeInput
  create: oAuthClientCreateWithoutAuthorizationCodesInput
}

input oAuthClientCreateOneWithoutNotificationsInput {
  connect: oAuthClientWhereUniqueInput
  connectOrCreate: oAuthClientCreateOrConnectWithoutNotificationInput
  create: oAuthClientCreateWithoutNotificationsInput
}

input oAuthClientCreateOneWithoutRedirectUrisInput {
  connect: oAuthClientWhereUniqueInput
  connectOrCreate: oAuthClientCreateOrConnectWithoutoAuthRedirectURIInput
  create: oAuthClientCreateWithoutRedirectUrisInput
}

input oAuthClientCreateOneWithoutRefreshTokensInput {
  connect: oAuthClientWhereUniqueInput
  connectOrCreate: oAuthClientCreateOrConnectWithoutoAuthRefreshTokenInput
  create: oAuthClientCreateWithoutRefreshTokensInput
}

input oAuthClientCreateOrConnectWithoutNotificationInput {
  create: oAuthClientCreateWithoutNotificationsInput!
  where: oAuthClientWhereUniqueInput!
}

input oAuthClientCreateOrConnectWithoutoAuthAccessTokenInput {
  create: oAuthClientCreateWithoutAccessTokensInput!
  where: oAuthClientWhereUniqueInput!
}

input oAuthClientCreateOrConnectWithoutoAuthAuthorizationCodeInput {
  create: oAuthClientCreateWithoutAuthorizationCodesInput!
  where: oAuthClientWhereUniqueInput!
}

input oAuthClientCreateOrConnectWithoutoAuthCustomScopeInput {
  create: oAuthClientCreateWithoutEnabledCustomScopesInput!
  where: oAuthClientWhereUniqueInput!
}

input oAuthClientCreateOrConnectWithoutoAuthRedirectURIInput {
  create: oAuthClientCreateWithoutRedirectUrisInput!
  where: oAuthClientWhereUniqueInput!
}

input oAuthClientCreateOrConnectWithoutoAuthRefreshTokenInput {
  create: oAuthClientCreateWithoutRefreshTokensInput!
  where: oAuthClientWhereUniqueInput!
}

input oAuthClientCreateOrConnectWithoutoAuthScopeInput {
  create: oAuthClientCreateWithoutEnabledScopesInput!
  where: oAuthClientWhereUniqueInput!
}

input oAuthClientCreateOrConnectWithoutUserPoolInput {
  create: oAuthClientCreateWithoutUserPoolInput!
  where: oAuthClientWhereUniqueInput!
}

input oAuthClientCreateWithoutAccessTokensInput {
  accessTokenLifetime: Int
  AuthorizationCodes: oAuthAuthorizationCodeCreateManyWithoutClientInput
  createdAt: DateTime
  EnabledCustomScopes: oAuthCustomScopeCreateManyWithoutClientsInput
  EnabledScopes: oAuthScopeCreateManyWithoutClientsInput
  Grants: oAuthGrantCreateManyWithoutClientsInput
  id: String
  idTokenLifetime: Int
  isTrusted: Boolean
  JavascriptOrigins: oAuthJavascriptOriginCreateManyWithoutClientInput
  logo: String
  name: String!
  Notifications: NotificationCreateManyWithoutClientInput
  RedirectUris: oAuthRedirectURICreateManyWithoutClientInput
  refreshTokenLifetime: Int
  RefreshTokens: oAuthRefreshTokenCreateManyWithoutClientInput
  secret: String
  updatedAt: DateTime
  UserPool: UserPoolCreateOneWithoutClientsInput!
}

input oAuthClientCreateWithoutAuthorizationCodesInput {
  accessTokenLifetime: Int
  AccessTokens: oAuthAccessTokenCreateManyWithoutClientInput
  createdAt: DateTime
  EnabledCustomScopes: oAuthCustomScopeCreateManyWithoutClientsInput
  EnabledScopes: oAuthScopeCreateManyWithoutClientsInput
  Grants: oAuthGrantCreateManyWithoutClientsInput
  id: String
  idTokenLifetime: Int
  isTrusted: Boolean
  JavascriptOrigins: oAuthJavascriptOriginCreateManyWithoutClientInput
  logo: String
  name: String!
  Notifications: NotificationCreateManyWithoutClientInput
  RedirectUris: oAuthRedirectURICreateManyWithoutClientInput
  refreshTokenLifetime: Int
  RefreshTokens: oAuthRefreshTokenCreateManyWithoutClientInput
  secret: String
  updatedAt: DateTime
  UserPool: UserPoolCreateOneWithoutClientsInput!
}

input oAuthClientCreateWithoutEnabledCustomScopesInput {
  accessTokenLifetime: Int
  AccessTokens: oAuthAccessTokenCreateManyWithoutClientInput
  AuthorizationCodes: oAuthAuthorizationCodeCreateManyWithoutClientInput
  createdAt: DateTime
  EnabledScopes: oAuthScopeCreateManyWithoutClientsInput
  Grants: oAuthGrantCreateManyWithoutClientsInput
  id: String
  idTokenLifetime: Int
  isTrusted: Boolean
  JavascriptOrigins: oAuthJavascriptOriginCreateManyWithoutClientInput
  logo: String
  name: String!
  Notifications: NotificationCreateManyWithoutClientInput
  RedirectUris: oAuthRedirectURICreateManyWithoutClientInput
  refreshTokenLifetime: Int
  RefreshTokens: oAuthRefreshTokenCreateManyWithoutClientInput
  secret: String
  updatedAt: DateTime
  UserPool: UserPoolCreateOneWithoutClientsInput!
}

input oAuthClientCreateWithoutEnabledScopesInput {
  accessTokenLifetime: Int
  AccessTokens: oAuthAccessTokenCreateManyWithoutClientInput
  AuthorizationCodes: oAuthAuthorizationCodeCreateManyWithoutClientInput
  createdAt: DateTime
  EnabledCustomScopes: oAuthCustomScopeCreateManyWithoutClientsInput
  Grants: oAuthGrantCreateManyWithoutClientsInput
  id: String
  idTokenLifetime: Int
  isTrusted: Boolean
  JavascriptOrigins: oAuthJavascriptOriginCreateManyWithoutClientInput
  logo: String
  name: String!
  Notifications: NotificationCreateManyWithoutClientInput
  RedirectUris: oAuthRedirectURICreateManyWithoutClientInput
  refreshTokenLifetime: Int
  RefreshTokens: oAuthRefreshTokenCreateManyWithoutClientInput
  secret: String
  updatedAt: DateTime
  UserPool: UserPoolCreateOneWithoutClientsInput!
}

input oAuthClientCreateWithoutNotificationsInput {
  accessTokenLifetime: Int
  AccessTokens: oAuthAccessTokenCreateManyWithoutClientInput
  AuthorizationCodes: oAuthAuthorizationCodeCreateManyWithoutClientInput
  createdAt: DateTime
  EnabledCustomScopes: oAuthCustomScopeCreateManyWithoutClientsInput
  EnabledScopes: oAuthScopeCreateManyWithoutClientsInput
  Grants: oAuthGrantCreateManyWithoutClientsInput
  id: String
  idTokenLifetime: Int
  isTrusted: Boolean
  JavascriptOrigins: oAuthJavascriptOriginCreateManyWithoutClientInput
  logo: String
  name: String!
  RedirectUris: oAuthRedirectURICreateManyWithoutClientInput
  refreshTokenLifetime: Int
  RefreshTokens: oAuthRefreshTokenCreateManyWithoutClientInput
  secret: String
  updatedAt: DateTime
  UserPool: UserPoolCreateOneWithoutClientsInput!
}

input oAuthClientCreateWithoutRedirectUrisInput {
  accessTokenLifetime: Int
  AccessTokens: oAuthAccessTokenCreateManyWithoutClientInput
  AuthorizationCodes: oAuthAuthorizationCodeCreateManyWithoutClientInput
  createdAt: DateTime
  EnabledCustomScopes: oAuthCustomScopeCreateManyWithoutClientsInput
  EnabledScopes: oAuthScopeCreateManyWithoutClientsInput
  Grants: oAuthGrantCreateManyWithoutClientsInput
  id: String
  idTokenLifetime: Int
  isTrusted: Boolean
  JavascriptOrigins: oAuthJavascriptOriginCreateManyWithoutClientInput
  logo: String
  name: String!
  Notifications: NotificationCreateManyWithoutClientInput
  refreshTokenLifetime: Int
  RefreshTokens: oAuthRefreshTokenCreateManyWithoutClientInput
  secret: String
  updatedAt: DateTime
  UserPool: UserPoolCreateOneWithoutClientsInput!
}

input oAuthClientCreateWithoutRefreshTokensInput {
  accessTokenLifetime: Int
  AccessTokens: oAuthAccessTokenCreateManyWithoutClientInput
  AuthorizationCodes: oAuthAuthorizationCodeCreateManyWithoutClientInput
  createdAt: DateTime
  EnabledCustomScopes: oAuthCustomScopeCreateManyWithoutClientsInput
  EnabledScopes: oAuthScopeCreateManyWithoutClientsInput
  Grants: oAuthGrantCreateManyWithoutClientsInput
  id: String
  idTokenLifetime: Int
  isTrusted: Boolean
  JavascriptOrigins: oAuthJavascriptOriginCreateManyWithoutClientInput
  logo: String
  name: String!
  Notifications: NotificationCreateManyWithoutClientInput
  RedirectUris: oAuthRedirectURICreateManyWithoutClientInput
  refreshTokenLifetime: Int
  secret: String
  updatedAt: DateTime
  UserPool: UserPoolCreateOneWithoutClientsInput!
}

input oAuthClientCreateWithoutUserPoolInput {
  accessTokenLifetime: Int
  AccessTokens: oAuthAccessTokenCreateManyWithoutClientInput
  AuthorizationCodes: oAuthAuthorizationCodeCreateManyWithoutClientInput
  createdAt: DateTime
  EnabledCustomScopes: oAuthCustomScopeCreateManyWithoutClientsInput
  EnabledScopes: oAuthScopeCreateManyWithoutClientsInput
  Grants: oAuthGrantCreateManyWithoutClientsInput
  id: String
  idTokenLifetime: Int
  isTrusted: Boolean
  JavascriptOrigins: oAuthJavascriptOriginCreateManyWithoutClientInput
  logo: String
  name: String!
  Notifications: NotificationCreateManyWithoutClientInput
  RedirectUris: oAuthRedirectURICreateManyWithoutClientInput
  refreshTokenLifetime: Int
  RefreshTokens: oAuthRefreshTokenCreateManyWithoutClientInput
  secret: String
  updatedAt: DateTime
}

input oAuthClientScalarWhereInput {
  accessTokenLifetime: IntFilter
  AND: [oAuthClientScalarWhereInput!]
  createdAt: DateTimeFilter
  id: StringFilter
  idTokenLifetime: IntFilter
  isTrusted: BoolFilter
  logo: StringNullableFilter
  name: StringFilter
  NOT: [oAuthClientScalarWhereInput!]
  OR: [oAuthClientScalarWhereInput!]
  refreshTokenLifetime: IntFilter
  secret: StringFilter
  updatedAt: DateTimeFilter
  userPoolId: StringFilter
}

input oAuthClientUpdateInput {
  accessTokenLifetime: IntFieldUpdateOperationsInput
  AccessTokens: oAuthAccessTokenUpdateManyWithoutClientInput
  AuthorizationCodes: oAuthAuthorizationCodeUpdateManyWithoutClientInput
  createdAt: DateTimeFieldUpdateOperationsInput
  EnabledCustomScopes: oAuthCustomScopeUpdateManyWithoutClientsInput
  EnabledScopes: oAuthScopeUpdateManyWithoutClientsInput
  Grants: oAuthGrantUpdateManyWithoutClientsInput
  id: StringFieldUpdateOperationsInput
  idTokenLifetime: IntFieldUpdateOperationsInput
  isTrusted: BoolFieldUpdateOperationsInput
  JavascriptOrigins: oAuthJavascriptOriginUpdateManyWithoutClientInput
  logo: NullableStringFieldUpdateOperationsInput
  name: StringFieldUpdateOperationsInput
  Notifications: NotificationUpdateManyWithoutClientInput
  RedirectUris: oAuthRedirectURIUpdateManyWithoutClientInput
  refreshTokenLifetime: IntFieldUpdateOperationsInput
  RefreshTokens: oAuthRefreshTokenUpdateManyWithoutClientInput
  secret: StringFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
  UserPool: UserPoolUpdateOneRequiredWithoutClientsInput
}

input oAuthClientUpdateManyDataInput {
  accessTokenLifetime: IntFieldUpdateOperationsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  id: StringFieldUpdateOperationsInput
  idTokenLifetime: IntFieldUpdateOperationsInput
  isTrusted: BoolFieldUpdateOperationsInput
  logo: NullableStringFieldUpdateOperationsInput
  name: StringFieldUpdateOperationsInput
  refreshTokenLifetime: IntFieldUpdateOperationsInput
  secret: StringFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
}

input oAuthClientUpdateManyWithoutEnabledCustomScopesInput {
  connect: [oAuthClientWhereUniqueInput!]
  connectOrCreate: [oAuthClientCreateOrConnectWithoutoAuthCustomScopeInput!]
  create: [oAuthClientCreateWithoutEnabledCustomScopesInput!]
  delete: [oAuthClientWhereUniqueInput!]
  deleteMany: [oAuthClientScalarWhereInput!]
  disconnect: [oAuthClientWhereUniqueInput!]
  set: [oAuthClientWhereUniqueInput!]
  update: [oAuthClientUpdateWithWhereUniqueWithoutEnabledCustomScopesInput!]
  updateMany: [oAuthClientUpdateManyWithWhereNestedInput!]
  upsert: [oAuthClientUpsertWithWhereUniqueWithoutEnabledCustomScopesInput!]
}

input oAuthClientUpdateManyWithoutEnabledScopesInput {
  connect: [oAuthClientWhereUniqueInput!]
  connectOrCreate: [oAuthClientCreateOrConnectWithoutoAuthScopeInput!]
  create: [oAuthClientCreateWithoutEnabledScopesInput!]
  delete: [oAuthClientWhereUniqueInput!]
  deleteMany: [oAuthClientScalarWhereInput!]
  disconnect: [oAuthClientWhereUniqueInput!]
  set: [oAuthClientWhereUniqueInput!]
  update: [oAuthClientUpdateWithWhereUniqueWithoutEnabledScopesInput!]
  updateMany: [oAuthClientUpdateManyWithWhereNestedInput!]
  upsert: [oAuthClientUpsertWithWhereUniqueWithoutEnabledScopesInput!]
}

input oAuthClientUpdateManyWithoutUserPoolInput {
  connect: [oAuthClientWhereUniqueInput!]
  connectOrCreate: [oAuthClientCreateOrConnectWithoutUserPoolInput!]
  create: [oAuthClientCreateWithoutUserPoolInput!]
  delete: [oAuthClientWhereUniqueInput!]
  deleteMany: [oAuthClientScalarWhereInput!]
  disconnect: [oAuthClientWhereUniqueInput!]
  set: [oAuthClientWhereUniqueInput!]
  update: [oAuthClientUpdateWithWhereUniqueWithoutUserPoolInput!]
  updateMany: [oAuthClientUpdateManyWithWhereNestedInput!]
  upsert: [oAuthClientUpsertWithWhereUniqueWithoutUserPoolInput!]
}

input oAuthClientUpdateManyWithWhereNestedInput {
  data: oAuthClientUpdateManyDataInput!
  where: oAuthClientScalarWhereInput!
}

input oAuthClientUpdateOneRequiredWithoutAccessTokensInput {
  connect: oAuthClientWhereUniqueInput
  connectOrCreate: oAuthClientCreateOrConnectWithoutoAuthAccessTokenInput
  create: oAuthClientCreateWithoutAccessTokensInput
  update: oAuthClientUpdateWithoutAccessTokensDataInput
  upsert: oAuthClientUpsertWithoutAccessTokensInput
}

input oAuthClientUpdateOneRequiredWithoutAuthorizationCodesInput {
  connect: oAuthClientWhereUniqueInput
  connectOrCreate: oAuthClientCreateOrConnectWithoutoAuthAuthorizationCodeInput
  create: oAuthClientCreateWithoutAuthorizationCodesInput
  update: oAuthClientUpdateWithoutAuthorizationCodesDataInput
  upsert: oAuthClientUpsertWithoutAuthorizationCodesInput
}

input oAuthClientUpdateOneRequiredWithoutRefreshTokensInput {
  connect: oAuthClientWhereUniqueInput
  connectOrCreate: oAuthClientCreateOrConnectWithoutoAuthRefreshTokenInput
  create: oAuthClientCreateWithoutRefreshTokensInput
  update: oAuthClientUpdateWithoutRefreshTokensDataInput
  upsert: oAuthClientUpsertWithoutRefreshTokensInput
}

input oAuthClientUpdateOneWithoutNotificationsInput {
  connect: oAuthClientWhereUniqueInput
  connectOrCreate: oAuthClientCreateOrConnectWithoutNotificationInput
  create: oAuthClientCreateWithoutNotificationsInput
  delete: Boolean
  disconnect: Boolean
  update: oAuthClientUpdateWithoutNotificationsDataInput
  upsert: oAuthClientUpsertWithoutNotificationsInput
}

input oAuthClientUpdateWithoutAccessTokensDataInput {
  accessTokenLifetime: IntFieldUpdateOperationsInput
  AuthorizationCodes: oAuthAuthorizationCodeUpdateManyWithoutClientInput
  createdAt: DateTimeFieldUpdateOperationsInput
  EnabledCustomScopes: oAuthCustomScopeUpdateManyWithoutClientsInput
  EnabledScopes: oAuthScopeUpdateManyWithoutClientsInput
  Grants: oAuthGrantUpdateManyWithoutClientsInput
  id: StringFieldUpdateOperationsInput
  idTokenLifetime: IntFieldUpdateOperationsInput
  isTrusted: BoolFieldUpdateOperationsInput
  JavascriptOrigins: oAuthJavascriptOriginUpdateManyWithoutClientInput
  logo: NullableStringFieldUpdateOperationsInput
  name: StringFieldUpdateOperationsInput
  Notifications: NotificationUpdateManyWithoutClientInput
  RedirectUris: oAuthRedirectURIUpdateManyWithoutClientInput
  refreshTokenLifetime: IntFieldUpdateOperationsInput
  RefreshTokens: oAuthRefreshTokenUpdateManyWithoutClientInput
  secret: StringFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
  UserPool: UserPoolUpdateOneRequiredWithoutClientsInput
}

input oAuthClientUpdateWithoutAuthorizationCodesDataInput {
  accessTokenLifetime: IntFieldUpdateOperationsInput
  AccessTokens: oAuthAccessTokenUpdateManyWithoutClientInput
  createdAt: DateTimeFieldUpdateOperationsInput
  EnabledCustomScopes: oAuthCustomScopeUpdateManyWithoutClientsInput
  EnabledScopes: oAuthScopeUpdateManyWithoutClientsInput
  Grants: oAuthGrantUpdateManyWithoutClientsInput
  id: StringFieldUpdateOperationsInput
  idTokenLifetime: IntFieldUpdateOperationsInput
  isTrusted: BoolFieldUpdateOperationsInput
  JavascriptOrigins: oAuthJavascriptOriginUpdateManyWithoutClientInput
  logo: NullableStringFieldUpdateOperationsInput
  name: StringFieldUpdateOperationsInput
  Notifications: NotificationUpdateManyWithoutClientInput
  RedirectUris: oAuthRedirectURIUpdateManyWithoutClientInput
  refreshTokenLifetime: IntFieldUpdateOperationsInput
  RefreshTokens: oAuthRefreshTokenUpdateManyWithoutClientInput
  secret: StringFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
  UserPool: UserPoolUpdateOneRequiredWithoutClientsInput
}

input oAuthClientUpdateWithoutEnabledCustomScopesDataInput {
  accessTokenLifetime: IntFieldUpdateOperationsInput
  AccessTokens: oAuthAccessTokenUpdateManyWithoutClientInput
  AuthorizationCodes: oAuthAuthorizationCodeUpdateManyWithoutClientInput
  createdAt: DateTimeFieldUpdateOperationsInput
  EnabledScopes: oAuthScopeUpdateManyWithoutClientsInput
  Grants: oAuthGrantUpdateManyWithoutClientsInput
  id: StringFieldUpdateOperationsInput
  idTokenLifetime: IntFieldUpdateOperationsInput
  isTrusted: BoolFieldUpdateOperationsInput
  JavascriptOrigins: oAuthJavascriptOriginUpdateManyWithoutClientInput
  logo: NullableStringFieldUpdateOperationsInput
  name: StringFieldUpdateOperationsInput
  Notifications: NotificationUpdateManyWithoutClientInput
  RedirectUris: oAuthRedirectURIUpdateManyWithoutClientInput
  refreshTokenLifetime: IntFieldUpdateOperationsInput
  RefreshTokens: oAuthRefreshTokenUpdateManyWithoutClientInput
  secret: StringFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
  UserPool: UserPoolUpdateOneRequiredWithoutClientsInput
}

input oAuthClientUpdateWithoutEnabledScopesDataInput {
  accessTokenLifetime: IntFieldUpdateOperationsInput
  AccessTokens: oAuthAccessTokenUpdateManyWithoutClientInput
  AuthorizationCodes: oAuthAuthorizationCodeUpdateManyWithoutClientInput
  createdAt: DateTimeFieldUpdateOperationsInput
  EnabledCustomScopes: oAuthCustomScopeUpdateManyWithoutClientsInput
  Grants: oAuthGrantUpdateManyWithoutClientsInput
  id: StringFieldUpdateOperationsInput
  idTokenLifetime: IntFieldUpdateOperationsInput
  isTrusted: BoolFieldUpdateOperationsInput
  JavascriptOrigins: oAuthJavascriptOriginUpdateManyWithoutClientInput
  logo: NullableStringFieldUpdateOperationsInput
  name: StringFieldUpdateOperationsInput
  Notifications: NotificationUpdateManyWithoutClientInput
  RedirectUris: oAuthRedirectURIUpdateManyWithoutClientInput
  refreshTokenLifetime: IntFieldUpdateOperationsInput
  RefreshTokens: oAuthRefreshTokenUpdateManyWithoutClientInput
  secret: StringFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
  UserPool: UserPoolUpdateOneRequiredWithoutClientsInput
}

input oAuthClientUpdateWithoutNotificationsDataInput {
  accessTokenLifetime: IntFieldUpdateOperationsInput
  AccessTokens: oAuthAccessTokenUpdateManyWithoutClientInput
  AuthorizationCodes: oAuthAuthorizationCodeUpdateManyWithoutClientInput
  createdAt: DateTimeFieldUpdateOperationsInput
  EnabledCustomScopes: oAuthCustomScopeUpdateManyWithoutClientsInput
  EnabledScopes: oAuthScopeUpdateManyWithoutClientsInput
  Grants: oAuthGrantUpdateManyWithoutClientsInput
  id: StringFieldUpdateOperationsInput
  idTokenLifetime: IntFieldUpdateOperationsInput
  isTrusted: BoolFieldUpdateOperationsInput
  JavascriptOrigins: oAuthJavascriptOriginUpdateManyWithoutClientInput
  logo: NullableStringFieldUpdateOperationsInput
  name: StringFieldUpdateOperationsInput
  RedirectUris: oAuthRedirectURIUpdateManyWithoutClientInput
  refreshTokenLifetime: IntFieldUpdateOperationsInput
  RefreshTokens: oAuthRefreshTokenUpdateManyWithoutClientInput
  secret: StringFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
  UserPool: UserPoolUpdateOneRequiredWithoutClientsInput
}

input oAuthClientUpdateWithoutRefreshTokensDataInput {
  accessTokenLifetime: IntFieldUpdateOperationsInput
  AccessTokens: oAuthAccessTokenUpdateManyWithoutClientInput
  AuthorizationCodes: oAuthAuthorizationCodeUpdateManyWithoutClientInput
  createdAt: DateTimeFieldUpdateOperationsInput
  EnabledCustomScopes: oAuthCustomScopeUpdateManyWithoutClientsInput
  EnabledScopes: oAuthScopeUpdateManyWithoutClientsInput
  Grants: oAuthGrantUpdateManyWithoutClientsInput
  id: StringFieldUpdateOperationsInput
  idTokenLifetime: IntFieldUpdateOperationsInput
  isTrusted: BoolFieldUpdateOperationsInput
  JavascriptOrigins: oAuthJavascriptOriginUpdateManyWithoutClientInput
  logo: NullableStringFieldUpdateOperationsInput
  name: StringFieldUpdateOperationsInput
  Notifications: NotificationUpdateManyWithoutClientInput
  RedirectUris: oAuthRedirectURIUpdateManyWithoutClientInput
  refreshTokenLifetime: IntFieldUpdateOperationsInput
  secret: StringFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
  UserPool: UserPoolUpdateOneRequiredWithoutClientsInput
}

input oAuthClientUpdateWithoutUserPoolDataInput {
  accessTokenLifetime: IntFieldUpdateOperationsInput
  AccessTokens: oAuthAccessTokenUpdateManyWithoutClientInput
  AuthorizationCodes: oAuthAuthorizationCodeUpdateManyWithoutClientInput
  createdAt: DateTimeFieldUpdateOperationsInput
  EnabledCustomScopes: oAuthCustomScopeUpdateManyWithoutClientsInput
  EnabledScopes: oAuthScopeUpdateManyWithoutClientsInput
  Grants: oAuthGrantUpdateManyWithoutClientsInput
  id: StringFieldUpdateOperationsInput
  idTokenLifetime: IntFieldUpdateOperationsInput
  isTrusted: BoolFieldUpdateOperationsInput
  JavascriptOrigins: oAuthJavascriptOriginUpdateManyWithoutClientInput
  logo: NullableStringFieldUpdateOperationsInput
  name: StringFieldUpdateOperationsInput
  Notifications: NotificationUpdateManyWithoutClientInput
  RedirectUris: oAuthRedirectURIUpdateManyWithoutClientInput
  refreshTokenLifetime: IntFieldUpdateOperationsInput
  RefreshTokens: oAuthRefreshTokenUpdateManyWithoutClientInput
  secret: StringFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
}

input oAuthClientUpdateWithWhereUniqueWithoutEnabledCustomScopesInput {
  data: oAuthClientUpdateWithoutEnabledCustomScopesDataInput!
  where: oAuthClientWhereUniqueInput!
}

input oAuthClientUpdateWithWhereUniqueWithoutEnabledScopesInput {
  data: oAuthClientUpdateWithoutEnabledScopesDataInput!
  where: oAuthClientWhereUniqueInput!
}

input oAuthClientUpdateWithWhereUniqueWithoutUserPoolInput {
  data: oAuthClientUpdateWithoutUserPoolDataInput!
  where: oAuthClientWhereUniqueInput!
}

input oAuthClientUpsertWithoutAccessTokensInput {
  create: oAuthClientCreateWithoutAccessTokensInput!
  update: oAuthClientUpdateWithoutAccessTokensDataInput!
}

input oAuthClientUpsertWithoutAuthorizationCodesInput {
  create: oAuthClientCreateWithoutAuthorizationCodesInput!
  update: oAuthClientUpdateWithoutAuthorizationCodesDataInput!
}

input oAuthClientUpsertWithoutNotificationsInput {
  create: oAuthClientCreateWithoutNotificationsInput!
  update: oAuthClientUpdateWithoutNotificationsDataInput!
}

input oAuthClientUpsertWithoutRefreshTokensInput {
  create: oAuthClientCreateWithoutRefreshTokensInput!
  update: oAuthClientUpdateWithoutRefreshTokensDataInput!
}

input oAuthClientUpsertWithWhereUniqueWithoutEnabledCustomScopesInput {
  create: oAuthClientCreateWithoutEnabledCustomScopesInput!
  update: oAuthClientUpdateWithoutEnabledCustomScopesDataInput!
  where: oAuthClientWhereUniqueInput!
}

input oAuthClientUpsertWithWhereUniqueWithoutEnabledScopesInput {
  create: oAuthClientCreateWithoutEnabledScopesInput!
  update: oAuthClientUpdateWithoutEnabledScopesDataInput!
  where: oAuthClientWhereUniqueInput!
}

input oAuthClientUpsertWithWhereUniqueWithoutUserPoolInput {
  create: oAuthClientCreateWithoutUserPoolInput!
  update: oAuthClientUpdateWithoutUserPoolDataInput!
  where: oAuthClientWhereUniqueInput!
}

input oAuthClientWhereUniqueInput {
  id: String
  name_userPoolId: NameUserPoolIdCompoundUniqueInput
}

type oAuthCustomScope {
  createdAt: DateTime!
  description: String
  name: String!
  ResourceServer: oAuthResourceServer!
  updatedAt: DateTime!
}

input oAuthCustomScopeCreateManyWithoutClientsInput {
  connect: [oAuthCustomScopeWhereUniqueInput!]
  connectOrCreate: [oAuthCustomScopeCreateOrConnectWithoutoAuthClientInput!]
  create: [oAuthCustomScopeCreateWithoutClientsInput!]
}

input oAuthCustomScopeCreateManyWithoutResourceServerInput {
  connect: [oAuthCustomScopeWhereUniqueInput!]
  connectOrCreate: [oAuthCustomScopeCreateOrConnectWithoutoAuthResourceServerInput!]
  create: [oAuthCustomScopeCreateWithoutResourceServerInput!]
}

input oAuthCustomScopeCreateManyWithoutRolesInput {
  connect: [oAuthCustomScopeWhereUniqueInput!]
  connectOrCreate: [oAuthCustomScopeCreateOrConnectWithoutRoleInput!]
  create: [oAuthCustomScopeCreateWithoutRolesInput!]
}

input oAuthCustomScopeCreateManyWithoutUserPoolInput {
  connect: [oAuthCustomScopeWhereUniqueInput!]
  connectOrCreate: [oAuthCustomScopeCreateOrConnectWithoutUserPoolInput!]
  create: [oAuthCustomScopeCreateWithoutUserPoolInput!]
}

input oAuthCustomScopeCreateOrConnectWithoutoAuthClientInput {
  create: oAuthCustomScopeCreateWithoutClientsInput!
  where: oAuthCustomScopeWhereUniqueInput!
}

input oAuthCustomScopeCreateOrConnectWithoutoAuthResourceServerInput {
  create: oAuthCustomScopeCreateWithoutResourceServerInput!
  where: oAuthCustomScopeWhereUniqueInput!
}

input oAuthCustomScopeCreateOrConnectWithoutRoleInput {
  create: oAuthCustomScopeCreateWithoutRolesInput!
  where: oAuthCustomScopeWhereUniqueInput!
}

input oAuthCustomScopeCreateOrConnectWithoutUserPoolInput {
  create: oAuthCustomScopeCreateWithoutUserPoolInput!
  where: oAuthCustomScopeWhereUniqueInput!
}

input oAuthCustomScopeCreateWithoutClientsInput {
  createdAt: DateTime
  description: String
  id: String
  name: String!
  oAuthClientId: String!
  ResourceServer: oAuthResourceServerCreateOneWithoutScopesInput!
  Roles: RoleCreateManyWithoutCustomScopesInput
  updatedAt: DateTime
  UserPool: UserPoolCreateOneWithoutCustomScopesInput!
}

input oAuthCustomScopeCreateWithoutResourceServerInput {
  Clients: oAuthClientCreateManyWithoutEnabledCustomScopesInput
  createdAt: DateTime
  description: String
  id: String
  name: String!
  oAuthClientId: String!
  Roles: RoleCreateManyWithoutCustomScopesInput
  updatedAt: DateTime
  UserPool: UserPoolCreateOneWithoutCustomScopesInput!
}

input oAuthCustomScopeCreateWithoutRolesInput {
  Clients: oAuthClientCreateManyWithoutEnabledCustomScopesInput
  createdAt: DateTime
  description: String
  id: String
  name: String!
  oAuthClientId: String!
  ResourceServer: oAuthResourceServerCreateOneWithoutScopesInput!
  updatedAt: DateTime
  UserPool: UserPoolCreateOneWithoutCustomScopesInput!
}

input oAuthCustomScopeCreateWithoutUserPoolInput {
  Clients: oAuthClientCreateManyWithoutEnabledCustomScopesInput
  createdAt: DateTime
  description: String
  id: String
  name: String!
  oAuthClientId: String!
  ResourceServer: oAuthResourceServerCreateOneWithoutScopesInput!
  Roles: RoleCreateManyWithoutCustomScopesInput
  updatedAt: DateTime
}

input oAuthCustomScopeScalarWhereInput {
  AND: [oAuthCustomScopeScalarWhereInput!]
  createdAt: DateTimeFilter
  description: StringNullableFilter
  id: StringFilter
  name: StringFilter
  NOT: [oAuthCustomScopeScalarWhereInput!]
  oAuthClientId: StringFilter
  oAuthResourceServerId: StringFilter
  OR: [oAuthCustomScopeScalarWhereInput!]
  updatedAt: DateTimeFilter
  userPoolId: StringFilter
}

input oAuthCustomScopeUpdateManyDataInput {
  createdAt: DateTimeFieldUpdateOperationsInput
  description: NullableStringFieldUpdateOperationsInput
  id: StringFieldUpdateOperationsInput
  name: StringFieldUpdateOperationsInput
  oAuthClientId: StringFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
}

input oAuthCustomScopeUpdateManyWithoutClientsInput {
  connect: [oAuthCustomScopeWhereUniqueInput!]
  connectOrCreate: [oAuthCustomScopeCreateOrConnectWithoutoAuthClientInput!]
  create: [oAuthCustomScopeCreateWithoutClientsInput!]
  delete: [oAuthCustomScopeWhereUniqueInput!]
  deleteMany: [oAuthCustomScopeScalarWhereInput!]
  disconnect: [oAuthCustomScopeWhereUniqueInput!]
  set: [oAuthCustomScopeWhereUniqueInput!]
  update: [oAuthCustomScopeUpdateWithWhereUniqueWithoutClientsInput!]
  updateMany: [oAuthCustomScopeUpdateManyWithWhereNestedInput!]
  upsert: [oAuthCustomScopeUpsertWithWhereUniqueWithoutClientsInput!]
}

input oAuthCustomScopeUpdateManyWithoutResourceServerInput {
  connect: [oAuthCustomScopeWhereUniqueInput!]
  connectOrCreate: [oAuthCustomScopeCreateOrConnectWithoutoAuthResourceServerInput!]
  create: [oAuthCustomScopeCreateWithoutResourceServerInput!]
  delete: [oAuthCustomScopeWhereUniqueInput!]
  deleteMany: [oAuthCustomScopeScalarWhereInput!]
  disconnect: [oAuthCustomScopeWhereUniqueInput!]
  set: [oAuthCustomScopeWhereUniqueInput!]
  update: [oAuthCustomScopeUpdateWithWhereUniqueWithoutResourceServerInput!]
  updateMany: [oAuthCustomScopeUpdateManyWithWhereNestedInput!]
  upsert: [oAuthCustomScopeUpsertWithWhereUniqueWithoutResourceServerInput!]
}

input oAuthCustomScopeUpdateManyWithoutRolesInput {
  connect: [oAuthCustomScopeWhereUniqueInput!]
  connectOrCreate: [oAuthCustomScopeCreateOrConnectWithoutRoleInput!]
  create: [oAuthCustomScopeCreateWithoutRolesInput!]
  delete: [oAuthCustomScopeWhereUniqueInput!]
  deleteMany: [oAuthCustomScopeScalarWhereInput!]
  disconnect: [oAuthCustomScopeWhereUniqueInput!]
  set: [oAuthCustomScopeWhereUniqueInput!]
  update: [oAuthCustomScopeUpdateWithWhereUniqueWithoutRolesInput!]
  updateMany: [oAuthCustomScopeUpdateManyWithWhereNestedInput!]
  upsert: [oAuthCustomScopeUpsertWithWhereUniqueWithoutRolesInput!]
}

input oAuthCustomScopeUpdateManyWithoutUserPoolInput {
  connect: [oAuthCustomScopeWhereUniqueInput!]
  connectOrCreate: [oAuthCustomScopeCreateOrConnectWithoutUserPoolInput!]
  create: [oAuthCustomScopeCreateWithoutUserPoolInput!]
  delete: [oAuthCustomScopeWhereUniqueInput!]
  deleteMany: [oAuthCustomScopeScalarWhereInput!]
  disconnect: [oAuthCustomScopeWhereUniqueInput!]
  set: [oAuthCustomScopeWhereUniqueInput!]
  update: [oAuthCustomScopeUpdateWithWhereUniqueWithoutUserPoolInput!]
  updateMany: [oAuthCustomScopeUpdateManyWithWhereNestedInput!]
  upsert: [oAuthCustomScopeUpsertWithWhereUniqueWithoutUserPoolInput!]
}

input oAuthCustomScopeUpdateManyWithWhereNestedInput {
  data: oAuthCustomScopeUpdateManyDataInput!
  where: oAuthCustomScopeScalarWhereInput!
}

input oAuthCustomScopeUpdateWithoutClientsDataInput {
  createdAt: DateTimeFieldUpdateOperationsInput
  description: NullableStringFieldUpdateOperationsInput
  id: StringFieldUpdateOperationsInput
  name: StringFieldUpdateOperationsInput
  oAuthClientId: StringFieldUpdateOperationsInput
  ResourceServer: oAuthResourceServerUpdateOneRequiredWithoutScopesInput
  Roles: RoleUpdateManyWithoutCustomScopesInput
  updatedAt: DateTimeFieldUpdateOperationsInput
  UserPool: UserPoolUpdateOneRequiredWithoutCustomScopesInput
}

input oAuthCustomScopeUpdateWithoutResourceServerDataInput {
  Clients: oAuthClientUpdateManyWithoutEnabledCustomScopesInput
  createdAt: DateTimeFieldUpdateOperationsInput
  description: NullableStringFieldUpdateOperationsInput
  id: StringFieldUpdateOperationsInput
  name: StringFieldUpdateOperationsInput
  oAuthClientId: StringFieldUpdateOperationsInput
  Roles: RoleUpdateManyWithoutCustomScopesInput
  updatedAt: DateTimeFieldUpdateOperationsInput
  UserPool: UserPoolUpdateOneRequiredWithoutCustomScopesInput
}

input oAuthCustomScopeUpdateWithoutRolesDataInput {
  Clients: oAuthClientUpdateManyWithoutEnabledCustomScopesInput
  createdAt: DateTimeFieldUpdateOperationsInput
  description: NullableStringFieldUpdateOperationsInput
  id: StringFieldUpdateOperationsInput
  name: StringFieldUpdateOperationsInput
  oAuthClientId: StringFieldUpdateOperationsInput
  ResourceServer: oAuthResourceServerUpdateOneRequiredWithoutScopesInput
  updatedAt: DateTimeFieldUpdateOperationsInput
  UserPool: UserPoolUpdateOneRequiredWithoutCustomScopesInput
}

input oAuthCustomScopeUpdateWithoutUserPoolDataInput {
  Clients: oAuthClientUpdateManyWithoutEnabledCustomScopesInput
  createdAt: DateTimeFieldUpdateOperationsInput
  description: NullableStringFieldUpdateOperationsInput
  id: StringFieldUpdateOperationsInput
  name: StringFieldUpdateOperationsInput
  oAuthClientId: StringFieldUpdateOperationsInput
  ResourceServer: oAuthResourceServerUpdateOneRequiredWithoutScopesInput
  Roles: RoleUpdateManyWithoutCustomScopesInput
  updatedAt: DateTimeFieldUpdateOperationsInput
}

input oAuthCustomScopeUpdateWithWhereUniqueWithoutClientsInput {
  data: oAuthCustomScopeUpdateWithoutClientsDataInput!
  where: oAuthCustomScopeWhereUniqueInput!
}

input oAuthCustomScopeUpdateWithWhereUniqueWithoutResourceServerInput {
  data: oAuthCustomScopeUpdateWithoutResourceServerDataInput!
  where: oAuthCustomScopeWhereUniqueInput!
}

input oAuthCustomScopeUpdateWithWhereUniqueWithoutRolesInput {
  data: oAuthCustomScopeUpdateWithoutRolesDataInput!
  where: oAuthCustomScopeWhereUniqueInput!
}

input oAuthCustomScopeUpdateWithWhereUniqueWithoutUserPoolInput {
  data: oAuthCustomScopeUpdateWithoutUserPoolDataInput!
  where: oAuthCustomScopeWhereUniqueInput!
}

input oAuthCustomScopeUpsertWithWhereUniqueWithoutClientsInput {
  create: oAuthCustomScopeCreateWithoutClientsInput!
  update: oAuthCustomScopeUpdateWithoutClientsDataInput!
  where: oAuthCustomScopeWhereUniqueInput!
}

input oAuthCustomScopeUpsertWithWhereUniqueWithoutResourceServerInput {
  create: oAuthCustomScopeCreateWithoutResourceServerInput!
  update: oAuthCustomScopeUpdateWithoutResourceServerDataInput!
  where: oAuthCustomScopeWhereUniqueInput!
}

input oAuthCustomScopeUpsertWithWhereUniqueWithoutRolesInput {
  create: oAuthCustomScopeCreateWithoutRolesInput!
  update: oAuthCustomScopeUpdateWithoutRolesDataInput!
  where: oAuthCustomScopeWhereUniqueInput!
}

input oAuthCustomScopeUpsertWithWhereUniqueWithoutUserPoolInput {
  create: oAuthCustomScopeCreateWithoutUserPoolInput!
  update: oAuthCustomScopeUpdateWithoutUserPoolDataInput!
  where: oAuthCustomScopeWhereUniqueInput!
}

input oAuthCustomScopeWhereUniqueInput {
  id: String
}

type oAuthGrant {
  createdAt: DateTime!
  grantType: GrantType!
}

input oAuthGrantCreateManyWithoutClientsInput {
  connect: [oAuthGrantWhereUniqueInput!]
  connectOrCreate: [oAuthGrantCreateOrConnectWithoutoAuthClientInput!]
  create: [oAuthGrantCreateWithoutClientsInput!]
}

input oAuthGrantCreateOrConnectWithoutoAuthClientInput {
  create: oAuthGrantCreateWithoutClientsInput!
  where: oAuthGrantWhereUniqueInput!
}

input oAuthGrantCreateWithoutClientsInput {
  createdAt: DateTime
  grantType: GrantType!
  id: String
  updatedAt: DateTime
}

input oAuthGrantScalarWhereInput {
  AND: [oAuthGrantScalarWhereInput!]
  createdAt: DateTimeFilter
  grantType: EnumGrantTypeFilter
  id: StringFilter
  NOT: [oAuthGrantScalarWhereInput!]
  OR: [oAuthGrantScalarWhereInput!]
  updatedAt: DateTimeFilter
}

input oAuthGrantUpdateManyDataInput {
  createdAt: DateTimeFieldUpdateOperationsInput
  grantType: EnumGrantTypeFieldUpdateOperationsInput
  id: StringFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
}

input oAuthGrantUpdateManyWithoutClientsInput {
  connect: [oAuthGrantWhereUniqueInput!]
  connectOrCreate: [oAuthGrantCreateOrConnectWithoutoAuthClientInput!]
  create: [oAuthGrantCreateWithoutClientsInput!]
  delete: [oAuthGrantWhereUniqueInput!]
  deleteMany: [oAuthGrantScalarWhereInput!]
  disconnect: [oAuthGrantWhereUniqueInput!]
  set: [oAuthGrantWhereUniqueInput!]
  update: [oAuthGrantUpdateWithWhereUniqueWithoutClientsInput!]
  updateMany: [oAuthGrantUpdateManyWithWhereNestedInput!]
  upsert: [oAuthGrantUpsertWithWhereUniqueWithoutClientsInput!]
}

input oAuthGrantUpdateManyWithWhereNestedInput {
  data: oAuthGrantUpdateManyDataInput!
  where: oAuthGrantScalarWhereInput!
}

input oAuthGrantUpdateWithoutClientsDataInput {
  createdAt: DateTimeFieldUpdateOperationsInput
  grantType: EnumGrantTypeFieldUpdateOperationsInput
  id: StringFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
}

input oAuthGrantUpdateWithWhereUniqueWithoutClientsInput {
  data: oAuthGrantUpdateWithoutClientsDataInput!
  where: oAuthGrantWhereUniqueInput!
}

input oAuthGrantUpsertWithWhereUniqueWithoutClientsInput {
  create: oAuthGrantCreateWithoutClientsInput!
  update: oAuthGrantUpdateWithoutClientsDataInput!
  where: oAuthGrantWhereUniqueInput!
}

input oAuthGrantWhereUniqueInput {
  id: String
}

type oAuthJavascriptOrigin {
  createdAt: DateTime!
  uri: String!
}

input oAuthJavascriptOriginCreateManyWithoutClientInput {
  connect: [oAuthJavascriptOriginWhereUniqueInput!]
  connectOrCreate: [oAuthJavascriptOriginCreateOrConnectWithoutoAuthClientInput!]
  create: [oAuthJavascriptOriginCreateWithoutClientInput!]
}

input oAuthJavascriptOriginCreateOrConnectWithoutoAuthClientInput {
  create: oAuthJavascriptOriginCreateWithoutClientInput!
  where: oAuthJavascriptOriginWhereUniqueInput!
}

input oAuthJavascriptOriginCreateWithoutClientInput {
  createdAt: DateTime
  id: String
  updatedAt: DateTime
  uri: String!
}

input oAuthJavascriptOriginScalarWhereInput {
  AND: [oAuthJavascriptOriginScalarWhereInput!]
  createdAt: DateTimeFilter
  id: StringFilter
  NOT: [oAuthJavascriptOriginScalarWhereInput!]
  oAuthClientId: StringFilter
  OR: [oAuthJavascriptOriginScalarWhereInput!]
  updatedAt: DateTimeFilter
  uri: StringFilter
}

input oAuthJavascriptOriginUpdateManyDataInput {
  createdAt: DateTimeFieldUpdateOperationsInput
  id: StringFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
  uri: StringFieldUpdateOperationsInput
}

input oAuthJavascriptOriginUpdateManyWithoutClientInput {
  connect: [oAuthJavascriptOriginWhereUniqueInput!]
  connectOrCreate: [oAuthJavascriptOriginCreateOrConnectWithoutoAuthClientInput!]
  create: [oAuthJavascriptOriginCreateWithoutClientInput!]
  delete: [oAuthJavascriptOriginWhereUniqueInput!]
  deleteMany: [oAuthJavascriptOriginScalarWhereInput!]
  disconnect: [oAuthJavascriptOriginWhereUniqueInput!]
  set: [oAuthJavascriptOriginWhereUniqueInput!]
  update: [oAuthJavascriptOriginUpdateWithWhereUniqueWithoutClientInput!]
  updateMany: [oAuthJavascriptOriginUpdateManyWithWhereNestedInput!]
  upsert: [oAuthJavascriptOriginUpsertWithWhereUniqueWithoutClientInput!]
}

input oAuthJavascriptOriginUpdateManyWithWhereNestedInput {
  data: oAuthJavascriptOriginUpdateManyDataInput!
  where: oAuthJavascriptOriginScalarWhereInput!
}

input oAuthJavascriptOriginUpdateWithoutClientDataInput {
  createdAt: DateTimeFieldUpdateOperationsInput
  id: StringFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
  uri: StringFieldUpdateOperationsInput
}

input oAuthJavascriptOriginUpdateWithWhereUniqueWithoutClientInput {
  data: oAuthJavascriptOriginUpdateWithoutClientDataInput!
  where: oAuthJavascriptOriginWhereUniqueInput!
}

input oAuthJavascriptOriginUpsertWithWhereUniqueWithoutClientInput {
  create: oAuthJavascriptOriginCreateWithoutClientInput!
  update: oAuthJavascriptOriginUpdateWithoutClientDataInput!
  where: oAuthJavascriptOriginWhereUniqueInput!
}

input oAuthJavascriptOriginWhereUniqueInput {
  id: String
}

type oAuthRedirectURI {
  createdAt: DateTime!
  url: String!
}

input oAuthRedirectURICreateInput {
  Client: oAuthClientCreateOneWithoutRedirectUrisInput!
  createdAt: DateTime
  id: String
  updatedAt: DateTime
  url: String!
}

input oAuthRedirectURICreateManyWithoutClientInput {
  connect: [oAuthRedirectURIWhereUniqueInput!]
  connectOrCreate: [oAuthRedirectURICreateOrConnectWithoutoAuthClientInput!]
  create: [oAuthRedirectURICreateWithoutClientInput!]
}

input oAuthRedirectURICreateOrConnectWithoutoAuthClientInput {
  create: oAuthRedirectURICreateWithoutClientInput!
  where: oAuthRedirectURIWhereUniqueInput!
}

input oAuthRedirectURICreateWithoutClientInput {
  createdAt: DateTime
  id: String
  updatedAt: DateTime
  url: String!
}

input oAuthRedirectURIScalarWhereInput {
  AND: [oAuthRedirectURIScalarWhereInput!]
  createdAt: DateTimeFilter
  id: StringFilter
  NOT: [oAuthRedirectURIScalarWhereInput!]
  oAuthClientId: StringFilter
  OR: [oAuthRedirectURIScalarWhereInput!]
  updatedAt: DateTimeFilter
  url: StringFilter
}

input oAuthRedirectURIUpdateManyDataInput {
  createdAt: DateTimeFieldUpdateOperationsInput
  id: StringFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
  url: StringFieldUpdateOperationsInput
}

input oAuthRedirectURIUpdateManyWithoutClientInput {
  connect: [oAuthRedirectURIWhereUniqueInput!]
  connectOrCreate: [oAuthRedirectURICreateOrConnectWithoutoAuthClientInput!]
  create: [oAuthRedirectURICreateWithoutClientInput!]
  delete: [oAuthRedirectURIWhereUniqueInput!]
  deleteMany: [oAuthRedirectURIScalarWhereInput!]
  disconnect: [oAuthRedirectURIWhereUniqueInput!]
  set: [oAuthRedirectURIWhereUniqueInput!]
  update: [oAuthRedirectURIUpdateWithWhereUniqueWithoutClientInput!]
  updateMany: [oAuthRedirectURIUpdateManyWithWhereNestedInput!]
  upsert: [oAuthRedirectURIUpsertWithWhereUniqueWithoutClientInput!]
}

input oAuthRedirectURIUpdateManyWithWhereNestedInput {
  data: oAuthRedirectURIUpdateManyDataInput!
  where: oAuthRedirectURIScalarWhereInput!
}

input oAuthRedirectURIUpdateWithoutClientDataInput {
  createdAt: DateTimeFieldUpdateOperationsInput
  id: StringFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
  url: StringFieldUpdateOperationsInput
}

input oAuthRedirectURIUpdateWithWhereUniqueWithoutClientInput {
  data: oAuthRedirectURIUpdateWithoutClientDataInput!
  where: oAuthRedirectURIWhereUniqueInput!
}

input oAuthRedirectURIUpsertWithWhereUniqueWithoutClientInput {
  create: oAuthRedirectURICreateWithoutClientInput!
  update: oAuthRedirectURIUpdateWithoutClientDataInput!
  where: oAuthRedirectURIWhereUniqueInput!
}

input oAuthRedirectURIWhereUniqueInput {
  id: String
}

type oAuthRefreshToken {
  createdAt: DateTime!
  expirationDate: DateTime!
  refreshToken: String!
}

input oAuthRefreshTokenCreateManyWithoutClientInput {
  connect: [oAuthRefreshTokenWhereUniqueInput!]
  connectOrCreate: [oAuthRefreshTokenCreateOrConnectWithoutoAuthClientInput!]
  create: [oAuthRefreshTokenCreateWithoutClientInput!]
}

input oAuthRefreshTokenCreateManyWithoutScopesInput {
  connect: [oAuthRefreshTokenWhereUniqueInput!]
  connectOrCreate: [oAuthRefreshTokenCreateOrConnectWithoutoAuthScopeInput!]
  create: [oAuthRefreshTokenCreateWithoutScopesInput!]
}

input oAuthRefreshTokenCreateManyWithoutUserInput {
  connect: [oAuthRefreshTokenWhereUniqueInput!]
  connectOrCreate: [oAuthRefreshTokenCreateOrConnectWithoutUserInput!]
  create: [oAuthRefreshTokenCreateWithoutUserInput!]
}

input oAuthRefreshTokenCreateOrConnectWithoutoAuthClientInput {
  create: oAuthRefreshTokenCreateWithoutClientInput!
  where: oAuthRefreshTokenWhereUniqueInput!
}

input oAuthRefreshTokenCreateOrConnectWithoutoAuthScopeInput {
  create: oAuthRefreshTokenCreateWithoutScopesInput!
  where: oAuthRefreshTokenWhereUniqueInput!
}

input oAuthRefreshTokenCreateOrConnectWithoutUserInput {
  create: oAuthRefreshTokenCreateWithoutUserInput!
  where: oAuthRefreshTokenWhereUniqueInput!
}

input oAuthRefreshTokenCreateWithoutClientInput {
  createdAt: DateTime
  expirationDate: DateTime!
  id: String
  refreshToken: String
  Scopes: oAuthScopeCreateManyWithoutRefreshTokenScopeInput
  updatedAt: DateTime
  User: UserCreateOneWithoutRefreshTokensInput
}

input oAuthRefreshTokenCreateWithoutScopesInput {
  Client: oAuthClientCreateOneWithoutRefreshTokensInput!
  createdAt: DateTime
  expirationDate: DateTime!
  id: String
  refreshToken: String
  updatedAt: DateTime
  User: UserCreateOneWithoutRefreshTokensInput
}

input oAuthRefreshTokenCreateWithoutUserInput {
  Client: oAuthClientCreateOneWithoutRefreshTokensInput!
  createdAt: DateTime
  expirationDate: DateTime!
  id: String
  refreshToken: String
  Scopes: oAuthScopeCreateManyWithoutRefreshTokenScopeInput
  updatedAt: DateTime
}

input oAuthRefreshTokenScalarWhereInput {
  AND: [oAuthRefreshTokenScalarWhereInput!]
  createdAt: DateTimeFilter
  expirationDate: DateTimeFilter
  id: StringFilter
  NOT: [oAuthRefreshTokenScalarWhereInput!]
  oAuthClientId: StringFilter
  OR: [oAuthRefreshTokenScalarWhereInput!]
  refreshToken: StringFilter
  updatedAt: DateTimeFilter
  userId: StringNullableFilter
}

input oAuthRefreshTokenUpdateManyDataInput {
  createdAt: DateTimeFieldUpdateOperationsInput
  expirationDate: DateTimeFieldUpdateOperationsInput
  id: StringFieldUpdateOperationsInput
  refreshToken: StringFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
}

input oAuthRefreshTokenUpdateManyWithoutClientInput {
  connect: [oAuthRefreshTokenWhereUniqueInput!]
  connectOrCreate: [oAuthRefreshTokenCreateOrConnectWithoutoAuthClientInput!]
  create: [oAuthRefreshTokenCreateWithoutClientInput!]
  delete: [oAuthRefreshTokenWhereUniqueInput!]
  deleteMany: [oAuthRefreshTokenScalarWhereInput!]
  disconnect: [oAuthRefreshTokenWhereUniqueInput!]
  set: [oAuthRefreshTokenWhereUniqueInput!]
  update: [oAuthRefreshTokenUpdateWithWhereUniqueWithoutClientInput!]
  updateMany: [oAuthRefreshTokenUpdateManyWithWhereNestedInput!]
  upsert: [oAuthRefreshTokenUpsertWithWhereUniqueWithoutClientInput!]
}

input oAuthRefreshTokenUpdateManyWithoutScopesInput {
  connect: [oAuthRefreshTokenWhereUniqueInput!]
  connectOrCreate: [oAuthRefreshTokenCreateOrConnectWithoutoAuthScopeInput!]
  create: [oAuthRefreshTokenCreateWithoutScopesInput!]
  delete: [oAuthRefreshTokenWhereUniqueInput!]
  deleteMany: [oAuthRefreshTokenScalarWhereInput!]
  disconnect: [oAuthRefreshTokenWhereUniqueInput!]
  set: [oAuthRefreshTokenWhereUniqueInput!]
  update: [oAuthRefreshTokenUpdateWithWhereUniqueWithoutScopesInput!]
  updateMany: [oAuthRefreshTokenUpdateManyWithWhereNestedInput!]
  upsert: [oAuthRefreshTokenUpsertWithWhereUniqueWithoutScopesInput!]
}

input oAuthRefreshTokenUpdateManyWithoutUserInput {
  connect: [oAuthRefreshTokenWhereUniqueInput!]
  connectOrCreate: [oAuthRefreshTokenCreateOrConnectWithoutUserInput!]
  create: [oAuthRefreshTokenCreateWithoutUserInput!]
  delete: [oAuthRefreshTokenWhereUniqueInput!]
  deleteMany: [oAuthRefreshTokenScalarWhereInput!]
  disconnect: [oAuthRefreshTokenWhereUniqueInput!]
  set: [oAuthRefreshTokenWhereUniqueInput!]
  update: [oAuthRefreshTokenUpdateWithWhereUniqueWithoutUserInput!]
  updateMany: [oAuthRefreshTokenUpdateManyWithWhereNestedInput!]
  upsert: [oAuthRefreshTokenUpsertWithWhereUniqueWithoutUserInput!]
}

input oAuthRefreshTokenUpdateManyWithWhereNestedInput {
  data: oAuthRefreshTokenUpdateManyDataInput!
  where: oAuthRefreshTokenScalarWhereInput!
}

input oAuthRefreshTokenUpdateWithoutClientDataInput {
  createdAt: DateTimeFieldUpdateOperationsInput
  expirationDate: DateTimeFieldUpdateOperationsInput
  id: StringFieldUpdateOperationsInput
  refreshToken: StringFieldUpdateOperationsInput
  Scopes: oAuthScopeUpdateManyWithoutRefreshTokenScopeInput
  updatedAt: DateTimeFieldUpdateOperationsInput
  User: UserUpdateOneWithoutRefreshTokensInput
}

input oAuthRefreshTokenUpdateWithoutScopesDataInput {
  Client: oAuthClientUpdateOneRequiredWithoutRefreshTokensInput
  createdAt: DateTimeFieldUpdateOperationsInput
  expirationDate: DateTimeFieldUpdateOperationsInput
  id: StringFieldUpdateOperationsInput
  refreshToken: StringFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
  User: UserUpdateOneWithoutRefreshTokensInput
}

input oAuthRefreshTokenUpdateWithoutUserDataInput {
  Client: oAuthClientUpdateOneRequiredWithoutRefreshTokensInput
  createdAt: DateTimeFieldUpdateOperationsInput
  expirationDate: DateTimeFieldUpdateOperationsInput
  id: StringFieldUpdateOperationsInput
  refreshToken: StringFieldUpdateOperationsInput
  Scopes: oAuthScopeUpdateManyWithoutRefreshTokenScopeInput
  updatedAt: DateTimeFieldUpdateOperationsInput
}

input oAuthRefreshTokenUpdateWithWhereUniqueWithoutClientInput {
  data: oAuthRefreshTokenUpdateWithoutClientDataInput!
  where: oAuthRefreshTokenWhereUniqueInput!
}

input oAuthRefreshTokenUpdateWithWhereUniqueWithoutScopesInput {
  data: oAuthRefreshTokenUpdateWithoutScopesDataInput!
  where: oAuthRefreshTokenWhereUniqueInput!
}

input oAuthRefreshTokenUpdateWithWhereUniqueWithoutUserInput {
  data: oAuthRefreshTokenUpdateWithoutUserDataInput!
  where: oAuthRefreshTokenWhereUniqueInput!
}

input oAuthRefreshTokenUpsertWithWhereUniqueWithoutClientInput {
  create: oAuthRefreshTokenCreateWithoutClientInput!
  update: oAuthRefreshTokenUpdateWithoutClientDataInput!
  where: oAuthRefreshTokenWhereUniqueInput!
}

input oAuthRefreshTokenUpsertWithWhereUniqueWithoutScopesInput {
  create: oAuthRefreshTokenCreateWithoutScopesInput!
  update: oAuthRefreshTokenUpdateWithoutScopesDataInput!
  where: oAuthRefreshTokenWhereUniqueInput!
}

input oAuthRefreshTokenUpsertWithWhereUniqueWithoutUserInput {
  create: oAuthRefreshTokenCreateWithoutUserInput!
  update: oAuthRefreshTokenUpdateWithoutUserDataInput!
  where: oAuthRefreshTokenWhereUniqueInput!
}

input oAuthRefreshTokenWhereUniqueInput {
  id: String
  refreshToken_oAuthClientId: RefreshTokenOAuthClientIdCompoundUniqueInput
  userId_oAuthClientId: UserIdOAuthClientIdCompoundUniqueInput
}

type oAuthResourceServer {
  createdAt: DateTime!
  identifier: String!
  name: String!
  Scopes(after: oAuthCustomScopeWhereUniqueInput, before: oAuthCustomScopeWhereUniqueInput, first: Int, last: Int): [oAuthCustomScope!]!
}

input oAuthResourceServerCreateManyWithoutUserPoolInput {
  connect: [oAuthResourceServerWhereUniqueInput!]
  connectOrCreate: [oAuthResourceServerCreateOrConnectWithoutUserPoolInput!]
  create: [oAuthResourceServerCreateWithoutUserPoolInput!]
}

input oAuthResourceServerCreateOneWithoutScopesInput {
  connect: oAuthResourceServerWhereUniqueInput
  connectOrCreate: oAuthResourceServerCreateOrConnectWithoutoAuthCustomScopeInput
  create: oAuthResourceServerCreateWithoutScopesInput
}

input oAuthResourceServerCreateOrConnectWithoutoAuthCustomScopeInput {
  create: oAuthResourceServerCreateWithoutScopesInput!
  where: oAuthResourceServerWhereUniqueInput!
}

input oAuthResourceServerCreateOrConnectWithoutUserPoolInput {
  create: oAuthResourceServerCreateWithoutUserPoolInput!
  where: oAuthResourceServerWhereUniqueInput!
}

input oAuthResourceServerCreateWithoutScopesInput {
  createdAt: DateTime
  id: String
  identifier: String!
  name: String!
  updatedAt: DateTime
  UserPool: UserPoolCreateOneWithoutResourceServersInput!
}

input oAuthResourceServerCreateWithoutUserPoolInput {
  createdAt: DateTime
  id: String
  identifier: String!
  name: String!
  Scopes: oAuthCustomScopeCreateManyWithoutResourceServerInput
  updatedAt: DateTime
}

input oAuthResourceServerScalarWhereInput {
  AND: [oAuthResourceServerScalarWhereInput!]
  createdAt: DateTimeFilter
  id: StringFilter
  identifier: StringFilter
  name: StringFilter
  NOT: [oAuthResourceServerScalarWhereInput!]
  OR: [oAuthResourceServerScalarWhereInput!]
  updatedAt: DateTimeFilter
  userPoolId: StringFilter
}

input oAuthResourceServerUpdateManyDataInput {
  createdAt: DateTimeFieldUpdateOperationsInput
  id: StringFieldUpdateOperationsInput
  identifier: StringFieldUpdateOperationsInput
  name: StringFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
}

input oAuthResourceServerUpdateManyWithoutUserPoolInput {
  connect: [oAuthResourceServerWhereUniqueInput!]
  connectOrCreate: [oAuthResourceServerCreateOrConnectWithoutUserPoolInput!]
  create: [oAuthResourceServerCreateWithoutUserPoolInput!]
  delete: [oAuthResourceServerWhereUniqueInput!]
  deleteMany: [oAuthResourceServerScalarWhereInput!]
  disconnect: [oAuthResourceServerWhereUniqueInput!]
  set: [oAuthResourceServerWhereUniqueInput!]
  update: [oAuthResourceServerUpdateWithWhereUniqueWithoutUserPoolInput!]
  updateMany: [oAuthResourceServerUpdateManyWithWhereNestedInput!]
  upsert: [oAuthResourceServerUpsertWithWhereUniqueWithoutUserPoolInput!]
}

input oAuthResourceServerUpdateManyWithWhereNestedInput {
  data: oAuthResourceServerUpdateManyDataInput!
  where: oAuthResourceServerScalarWhereInput!
}

input oAuthResourceServerUpdateOneRequiredWithoutScopesInput {
  connect: oAuthResourceServerWhereUniqueInput
  connectOrCreate: oAuthResourceServerCreateOrConnectWithoutoAuthCustomScopeInput
  create: oAuthResourceServerCreateWithoutScopesInput
  update: oAuthResourceServerUpdateWithoutScopesDataInput
  upsert: oAuthResourceServerUpsertWithoutScopesInput
}

input oAuthResourceServerUpdateWithoutScopesDataInput {
  createdAt: DateTimeFieldUpdateOperationsInput
  id: StringFieldUpdateOperationsInput
  identifier: StringFieldUpdateOperationsInput
  name: StringFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
  UserPool: UserPoolUpdateOneRequiredWithoutResourceServersInput
}

input oAuthResourceServerUpdateWithoutUserPoolDataInput {
  createdAt: DateTimeFieldUpdateOperationsInput
  id: StringFieldUpdateOperationsInput
  identifier: StringFieldUpdateOperationsInput
  name: StringFieldUpdateOperationsInput
  Scopes: oAuthCustomScopeUpdateManyWithoutResourceServerInput
  updatedAt: DateTimeFieldUpdateOperationsInput
}

input oAuthResourceServerUpdateWithWhereUniqueWithoutUserPoolInput {
  data: oAuthResourceServerUpdateWithoutUserPoolDataInput!
  where: oAuthResourceServerWhereUniqueInput!
}

input oAuthResourceServerUpsertWithoutScopesInput {
  create: oAuthResourceServerCreateWithoutScopesInput!
  update: oAuthResourceServerUpdateWithoutScopesDataInput!
}

input oAuthResourceServerUpsertWithWhereUniqueWithoutUserPoolInput {
  create: oAuthResourceServerCreateWithoutUserPoolInput!
  update: oAuthResourceServerUpdateWithoutUserPoolDataInput!
  where: oAuthResourceServerWhereUniqueInput!
}

input oAuthResourceServerWhereUniqueInput {
  id: String
  name_userPoolId: NameUserPoolIdCompoundUniqueInput
}

type oAuthScope {
  description: String
  name: String!
}

input oAuthScopeCreateManyWithoutAccessTokensInput {
  connect: [oAuthScopeWhereUniqueInput!]
  connectOrCreate: [oAuthScopeCreateOrConnectWithoutoAuthAccessTokenInput!]
  create: [oAuthScopeCreateWithoutAccessTokensInput!]
}

input oAuthScopeCreateManyWithoutAuthorizationCodesInput {
  connect: [oAuthScopeWhereUniqueInput!]
  connectOrCreate: [oAuthScopeCreateOrConnectWithoutoAuthAuthorizationCodeInput!]
  create: [oAuthScopeCreateWithoutAuthorizationCodesInput!]
}

input oAuthScopeCreateManyWithoutClientsInput {
  connect: [oAuthScopeWhereUniqueInput!]
  connectOrCreate: [oAuthScopeCreateOrConnectWithoutoAuthClientInput!]
  create: [oAuthScopeCreateWithoutClientsInput!]
}

input oAuthScopeCreateManyWithoutRefreshTokenScopeInput {
  connect: [oAuthScopeWhereUniqueInput!]
  connectOrCreate: [oAuthScopeCreateOrConnectWithoutoAuthRefreshTokenInput!]
  create: [oAuthScopeCreateWithoutRefreshTokenScopeInput!]
}

input oAuthScopeCreateManyWithoutRolesInput {
  connect: [oAuthScopeWhereUniqueInput!]
  connectOrCreate: [oAuthScopeCreateOrConnectWithoutRoleInput!]
  create: [oAuthScopeCreateWithoutRolesInput!]
}

input oAuthScopeCreateManyWithoutUserPoolsInput {
  connect: [oAuthScopeWhereUniqueInput!]
  connectOrCreate: [oAuthScopeCreateOrConnectWithoutUserPoolInput!]
  create: [oAuthScopeCreateWithoutUserPoolsInput!]
}

input oAuthScopeCreateOrConnectWithoutoAuthAccessTokenInput {
  create: oAuthScopeCreateWithoutAccessTokensInput!
  where: oAuthScopeWhereUniqueInput!
}

input oAuthScopeCreateOrConnectWithoutoAuthAuthorizationCodeInput {
  create: oAuthScopeCreateWithoutAuthorizationCodesInput!
  where: oAuthScopeWhereUniqueInput!
}

input oAuthScopeCreateOrConnectWithoutoAuthClientInput {
  create: oAuthScopeCreateWithoutClientsInput!
  where: oAuthScopeWhereUniqueInput!
}

input oAuthScopeCreateOrConnectWithoutoAuthRefreshTokenInput {
  create: oAuthScopeCreateWithoutRefreshTokenScopeInput!
  where: oAuthScopeWhereUniqueInput!
}

input oAuthScopeCreateOrConnectWithoutRoleInput {
  create: oAuthScopeCreateWithoutRolesInput!
  where: oAuthScopeWhereUniqueInput!
}

input oAuthScopeCreateOrConnectWithoutUserPoolInput {
  create: oAuthScopeCreateWithoutUserPoolsInput!
  where: oAuthScopeWhereUniqueInput!
}

input oAuthScopeCreateWithoutAccessTokensInput {
  AuthorizationCodes: oAuthAuthorizationCodeCreateManyWithoutScopesInput
  Clients: oAuthClientCreateManyWithoutEnabledScopesInput
  createdAt: DateTime
  description: String
  id: String
  name: String!
  RefreshTokenScope: oAuthRefreshTokenCreateManyWithoutScopesInput
  Roles: RoleCreateManyWithoutScopesInput
  updatedAt: DateTime
  UserPools: UserPoolCreateManyWithoutScopesInput
}

input oAuthScopeCreateWithoutAuthorizationCodesInput {
  AccessTokens: oAuthAccessTokenCreateManyWithoutScopesInput
  Clients: oAuthClientCreateManyWithoutEnabledScopesInput
  createdAt: DateTime
  description: String
  id: String
  name: String!
  RefreshTokenScope: oAuthRefreshTokenCreateManyWithoutScopesInput
  Roles: RoleCreateManyWithoutScopesInput
  updatedAt: DateTime
  UserPools: UserPoolCreateManyWithoutScopesInput
}

input oAuthScopeCreateWithoutClientsInput {
  AccessTokens: oAuthAccessTokenCreateManyWithoutScopesInput
  AuthorizationCodes: oAuthAuthorizationCodeCreateManyWithoutScopesInput
  createdAt: DateTime
  description: String
  id: String
  name: String!
  RefreshTokenScope: oAuthRefreshTokenCreateManyWithoutScopesInput
  Roles: RoleCreateManyWithoutScopesInput
  updatedAt: DateTime
  UserPools: UserPoolCreateManyWithoutScopesInput
}

input oAuthScopeCreateWithoutRefreshTokenScopeInput {
  AccessTokens: oAuthAccessTokenCreateManyWithoutScopesInput
  AuthorizationCodes: oAuthAuthorizationCodeCreateManyWithoutScopesInput
  Clients: oAuthClientCreateManyWithoutEnabledScopesInput
  createdAt: DateTime
  description: String
  id: String
  name: String!
  Roles: RoleCreateManyWithoutScopesInput
  updatedAt: DateTime
  UserPools: UserPoolCreateManyWithoutScopesInput
}

input oAuthScopeCreateWithoutRolesInput {
  AccessTokens: oAuthAccessTokenCreateManyWithoutScopesInput
  AuthorizationCodes: oAuthAuthorizationCodeCreateManyWithoutScopesInput
  Clients: oAuthClientCreateManyWithoutEnabledScopesInput
  createdAt: DateTime
  description: String
  id: String
  name: String!
  RefreshTokenScope: oAuthRefreshTokenCreateManyWithoutScopesInput
  updatedAt: DateTime
  UserPools: UserPoolCreateManyWithoutScopesInput
}

input oAuthScopeCreateWithoutUserPoolsInput {
  AccessTokens: oAuthAccessTokenCreateManyWithoutScopesInput
  AuthorizationCodes: oAuthAuthorizationCodeCreateManyWithoutScopesInput
  Clients: oAuthClientCreateManyWithoutEnabledScopesInput
  createdAt: DateTime
  description: String
  id: String
  name: String!
  RefreshTokenScope: oAuthRefreshTokenCreateManyWithoutScopesInput
  Roles: RoleCreateManyWithoutScopesInput
  updatedAt: DateTime
}

input oAuthScopeScalarWhereInput {
  AND: [oAuthScopeScalarWhereInput!]
  createdAt: DateTimeFilter
  description: StringNullableFilter
  id: StringFilter
  name: StringFilter
  NOT: [oAuthScopeScalarWhereInput!]
  OR: [oAuthScopeScalarWhereInput!]
  updatedAt: DateTimeFilter
}

input oAuthScopeUpdateManyDataInput {
  createdAt: DateTimeFieldUpdateOperationsInput
  description: NullableStringFieldUpdateOperationsInput
  id: StringFieldUpdateOperationsInput
  name: StringFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
}

input oAuthScopeUpdateManyWithoutAccessTokensInput {
  connect: [oAuthScopeWhereUniqueInput!]
  connectOrCreate: [oAuthScopeCreateOrConnectWithoutoAuthAccessTokenInput!]
  create: [oAuthScopeCreateWithoutAccessTokensInput!]
  delete: [oAuthScopeWhereUniqueInput!]
  deleteMany: [oAuthScopeScalarWhereInput!]
  disconnect: [oAuthScopeWhereUniqueInput!]
  set: [oAuthScopeWhereUniqueInput!]
  update: [oAuthScopeUpdateWithWhereUniqueWithoutAccessTokensInput!]
  updateMany: [oAuthScopeUpdateManyWithWhereNestedInput!]
  upsert: [oAuthScopeUpsertWithWhereUniqueWithoutAccessTokensInput!]
}

input oAuthScopeUpdateManyWithoutAuthorizationCodesInput {
  connect: [oAuthScopeWhereUniqueInput!]
  connectOrCreate: [oAuthScopeCreateOrConnectWithoutoAuthAuthorizationCodeInput!]
  create: [oAuthScopeCreateWithoutAuthorizationCodesInput!]
  delete: [oAuthScopeWhereUniqueInput!]
  deleteMany: [oAuthScopeScalarWhereInput!]
  disconnect: [oAuthScopeWhereUniqueInput!]
  set: [oAuthScopeWhereUniqueInput!]
  update: [oAuthScopeUpdateWithWhereUniqueWithoutAuthorizationCodesInput!]
  updateMany: [oAuthScopeUpdateManyWithWhereNestedInput!]
  upsert: [oAuthScopeUpsertWithWhereUniqueWithoutAuthorizationCodesInput!]
}

input oAuthScopeUpdateManyWithoutClientsInput {
  connect: [oAuthScopeWhereUniqueInput!]
  connectOrCreate: [oAuthScopeCreateOrConnectWithoutoAuthClientInput!]
  create: [oAuthScopeCreateWithoutClientsInput!]
  delete: [oAuthScopeWhereUniqueInput!]
  deleteMany: [oAuthScopeScalarWhereInput!]
  disconnect: [oAuthScopeWhereUniqueInput!]
  set: [oAuthScopeWhereUniqueInput!]
  update: [oAuthScopeUpdateWithWhereUniqueWithoutClientsInput!]
  updateMany: [oAuthScopeUpdateManyWithWhereNestedInput!]
  upsert: [oAuthScopeUpsertWithWhereUniqueWithoutClientsInput!]
}

input oAuthScopeUpdateManyWithoutRefreshTokenScopeInput {
  connect: [oAuthScopeWhereUniqueInput!]
  connectOrCreate: [oAuthScopeCreateOrConnectWithoutoAuthRefreshTokenInput!]
  create: [oAuthScopeCreateWithoutRefreshTokenScopeInput!]
  delete: [oAuthScopeWhereUniqueInput!]
  deleteMany: [oAuthScopeScalarWhereInput!]
  disconnect: [oAuthScopeWhereUniqueInput!]
  set: [oAuthScopeWhereUniqueInput!]
  update: [oAuthScopeUpdateWithWhereUniqueWithoutRefreshTokenScopeInput!]
  updateMany: [oAuthScopeUpdateManyWithWhereNestedInput!]
  upsert: [oAuthScopeUpsertWithWhereUniqueWithoutRefreshTokenScopeInput!]
}

input oAuthScopeUpdateManyWithoutRolesInput {
  connect: [oAuthScopeWhereUniqueInput!]
  connectOrCreate: [oAuthScopeCreateOrConnectWithoutRoleInput!]
  create: [oAuthScopeCreateWithoutRolesInput!]
  delete: [oAuthScopeWhereUniqueInput!]
  deleteMany: [oAuthScopeScalarWhereInput!]
  disconnect: [oAuthScopeWhereUniqueInput!]
  set: [oAuthScopeWhereUniqueInput!]
  update: [oAuthScopeUpdateWithWhereUniqueWithoutRolesInput!]
  updateMany: [oAuthScopeUpdateManyWithWhereNestedInput!]
  upsert: [oAuthScopeUpsertWithWhereUniqueWithoutRolesInput!]
}

input oAuthScopeUpdateManyWithoutUserPoolsInput {
  connect: [oAuthScopeWhereUniqueInput!]
  connectOrCreate: [oAuthScopeCreateOrConnectWithoutUserPoolInput!]
  create: [oAuthScopeCreateWithoutUserPoolsInput!]
  delete: [oAuthScopeWhereUniqueInput!]
  deleteMany: [oAuthScopeScalarWhereInput!]
  disconnect: [oAuthScopeWhereUniqueInput!]
  set: [oAuthScopeWhereUniqueInput!]
  update: [oAuthScopeUpdateWithWhereUniqueWithoutUserPoolsInput!]
  updateMany: [oAuthScopeUpdateManyWithWhereNestedInput!]
  upsert: [oAuthScopeUpsertWithWhereUniqueWithoutUserPoolsInput!]
}

input oAuthScopeUpdateManyWithWhereNestedInput {
  data: oAuthScopeUpdateManyDataInput!
  where: oAuthScopeScalarWhereInput!
}

input oAuthScopeUpdateWithoutAccessTokensDataInput {
  AuthorizationCodes: oAuthAuthorizationCodeUpdateManyWithoutScopesInput
  Clients: oAuthClientUpdateManyWithoutEnabledScopesInput
  createdAt: DateTimeFieldUpdateOperationsInput
  description: NullableStringFieldUpdateOperationsInput
  id: StringFieldUpdateOperationsInput
  name: StringFieldUpdateOperationsInput
  RefreshTokenScope: oAuthRefreshTokenUpdateManyWithoutScopesInput
  Roles: RoleUpdateManyWithoutScopesInput
  updatedAt: DateTimeFieldUpdateOperationsInput
  UserPools: UserPoolUpdateManyWithoutScopesInput
}

input oAuthScopeUpdateWithoutAuthorizationCodesDataInput {
  AccessTokens: oAuthAccessTokenUpdateManyWithoutScopesInput
  Clients: oAuthClientUpdateManyWithoutEnabledScopesInput
  createdAt: DateTimeFieldUpdateOperationsInput
  description: NullableStringFieldUpdateOperationsInput
  id: StringFieldUpdateOperationsInput
  name: StringFieldUpdateOperationsInput
  RefreshTokenScope: oAuthRefreshTokenUpdateManyWithoutScopesInput
  Roles: RoleUpdateManyWithoutScopesInput
  updatedAt: DateTimeFieldUpdateOperationsInput
  UserPools: UserPoolUpdateManyWithoutScopesInput
}

input oAuthScopeUpdateWithoutClientsDataInput {
  AccessTokens: oAuthAccessTokenUpdateManyWithoutScopesInput
  AuthorizationCodes: oAuthAuthorizationCodeUpdateManyWithoutScopesInput
  createdAt: DateTimeFieldUpdateOperationsInput
  description: NullableStringFieldUpdateOperationsInput
  id: StringFieldUpdateOperationsInput
  name: StringFieldUpdateOperationsInput
  RefreshTokenScope: oAuthRefreshTokenUpdateManyWithoutScopesInput
  Roles: RoleUpdateManyWithoutScopesInput
  updatedAt: DateTimeFieldUpdateOperationsInput
  UserPools: UserPoolUpdateManyWithoutScopesInput
}

input oAuthScopeUpdateWithoutRefreshTokenScopeDataInput {
  AccessTokens: oAuthAccessTokenUpdateManyWithoutScopesInput
  AuthorizationCodes: oAuthAuthorizationCodeUpdateManyWithoutScopesInput
  Clients: oAuthClientUpdateManyWithoutEnabledScopesInput
  createdAt: DateTimeFieldUpdateOperationsInput
  description: NullableStringFieldUpdateOperationsInput
  id: StringFieldUpdateOperationsInput
  name: StringFieldUpdateOperationsInput
  Roles: RoleUpdateManyWithoutScopesInput
  updatedAt: DateTimeFieldUpdateOperationsInput
  UserPools: UserPoolUpdateManyWithoutScopesInput
}

input oAuthScopeUpdateWithoutRolesDataInput {
  AccessTokens: oAuthAccessTokenUpdateManyWithoutScopesInput
  AuthorizationCodes: oAuthAuthorizationCodeUpdateManyWithoutScopesInput
  Clients: oAuthClientUpdateManyWithoutEnabledScopesInput
  createdAt: DateTimeFieldUpdateOperationsInput
  description: NullableStringFieldUpdateOperationsInput
  id: StringFieldUpdateOperationsInput
  name: StringFieldUpdateOperationsInput
  RefreshTokenScope: oAuthRefreshTokenUpdateManyWithoutScopesInput
  updatedAt: DateTimeFieldUpdateOperationsInput
  UserPools: UserPoolUpdateManyWithoutScopesInput
}

input oAuthScopeUpdateWithoutUserPoolsDataInput {
  AccessTokens: oAuthAccessTokenUpdateManyWithoutScopesInput
  AuthorizationCodes: oAuthAuthorizationCodeUpdateManyWithoutScopesInput
  Clients: oAuthClientUpdateManyWithoutEnabledScopesInput
  createdAt: DateTimeFieldUpdateOperationsInput
  description: NullableStringFieldUpdateOperationsInput
  id: StringFieldUpdateOperationsInput
  name: StringFieldUpdateOperationsInput
  RefreshTokenScope: oAuthRefreshTokenUpdateManyWithoutScopesInput
  Roles: RoleUpdateManyWithoutScopesInput
  updatedAt: DateTimeFieldUpdateOperationsInput
}

input oAuthScopeUpdateWithWhereUniqueWithoutAccessTokensInput {
  data: oAuthScopeUpdateWithoutAccessTokensDataInput!
  where: oAuthScopeWhereUniqueInput!
}

input oAuthScopeUpdateWithWhereUniqueWithoutAuthorizationCodesInput {
  data: oAuthScopeUpdateWithoutAuthorizationCodesDataInput!
  where: oAuthScopeWhereUniqueInput!
}

input oAuthScopeUpdateWithWhereUniqueWithoutClientsInput {
  data: oAuthScopeUpdateWithoutClientsDataInput!
  where: oAuthScopeWhereUniqueInput!
}

input oAuthScopeUpdateWithWhereUniqueWithoutRefreshTokenScopeInput {
  data: oAuthScopeUpdateWithoutRefreshTokenScopeDataInput!
  where: oAuthScopeWhereUniqueInput!
}

input oAuthScopeUpdateWithWhereUniqueWithoutRolesInput {
  data: oAuthScopeUpdateWithoutRolesDataInput!
  where: oAuthScopeWhereUniqueInput!
}

input oAuthScopeUpdateWithWhereUniqueWithoutUserPoolsInput {
  data: oAuthScopeUpdateWithoutUserPoolsDataInput!
  where: oAuthScopeWhereUniqueInput!
}

input oAuthScopeUpsertWithWhereUniqueWithoutAccessTokensInput {
  create: oAuthScopeCreateWithoutAccessTokensInput!
  update: oAuthScopeUpdateWithoutAccessTokensDataInput!
  where: oAuthScopeWhereUniqueInput!
}

input oAuthScopeUpsertWithWhereUniqueWithoutAuthorizationCodesInput {
  create: oAuthScopeCreateWithoutAuthorizationCodesInput!
  update: oAuthScopeUpdateWithoutAuthorizationCodesDataInput!
  where: oAuthScopeWhereUniqueInput!
}

input oAuthScopeUpsertWithWhereUniqueWithoutClientsInput {
  create: oAuthScopeCreateWithoutClientsInput!
  update: oAuthScopeUpdateWithoutClientsDataInput!
  where: oAuthScopeWhereUniqueInput!
}

input oAuthScopeUpsertWithWhereUniqueWithoutRefreshTokenScopeInput {
  create: oAuthScopeCreateWithoutRefreshTokenScopeInput!
  update: oAuthScopeUpdateWithoutRefreshTokenScopeDataInput!
  where: oAuthScopeWhereUniqueInput!
}

input oAuthScopeUpsertWithWhereUniqueWithoutRolesInput {
  create: oAuthScopeCreateWithoutRolesInput!
  update: oAuthScopeUpdateWithoutRolesDataInput!
  where: oAuthScopeWhereUniqueInput!
}

input oAuthScopeUpsertWithWhereUniqueWithoutUserPoolsInput {
  create: oAuthScopeCreateWithoutUserPoolsInput!
  update: oAuthScopeUpdateWithoutUserPoolsDataInput!
  where: oAuthScopeWhereUniqueInput!
}

input oAuthScopeWhereUniqueInput {
  id: String
  name: String
}

type Organization {
  address: String
  id: String!
  name: String!
  phoneNumber: String
  url: String
  UserPools(after: UserPoolWhereUniqueInput, before: UserPoolWhereUniqueInput, first: Int, last: Int): [UserPool!]!
}

input OrganizationCreateInput {
  address: String
  createdAt: DateTime
  CreatedBy: SystemUserCreateOneWithoutOrganizationsInput
  id: String
  name: String!
  phoneNumber: String
  updatedAt: DateTime
  url: String
  UserPools: UserPoolCreateManyWithoutOrganizationInput
}

input OrganizationCreateOneWithoutUserPoolsInput {
  connect: OrganizationWhereUniqueInput
  connectOrCreate: OrganizationCreateOrConnectWithoutUserPoolInput
  create: OrganizationCreateWithoutUserPoolsInput
}

input OrganizationCreateOrConnectWithoutUserPoolInput {
  create: OrganizationCreateWithoutUserPoolsInput!
  where: OrganizationWhereUniqueInput!
}

input OrganizationCreateWithoutUserPoolsInput {
  address: String
  createdAt: DateTime
  CreatedBy: SystemUserCreateOneWithoutOrganizationsInput
  id: String
  name: String!
  phoneNumber: String
  updatedAt: DateTime
  url: String
}

input OrganizationUpdateOneRequiredWithoutUserPoolsInput {
  connect: OrganizationWhereUniqueInput
  connectOrCreate: OrganizationCreateOrConnectWithoutUserPoolInput
  create: OrganizationCreateWithoutUserPoolsInput
  update: OrganizationUpdateWithoutUserPoolsDataInput
  upsert: OrganizationUpsertWithoutUserPoolsInput
}

input OrganizationUpdateWithoutUserPoolsDataInput {
  address: NullableStringFieldUpdateOperationsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  CreatedBy: SystemUserUpdateOneWithoutOrganizationsInput
  id: StringFieldUpdateOperationsInput
  name: StringFieldUpdateOperationsInput
  phoneNumber: NullableStringFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
  url: NullableStringFieldUpdateOperationsInput
}

input OrganizationUpsertWithoutUserPoolsInput {
  create: OrganizationCreateWithoutUserPoolsInput!
  update: OrganizationUpdateWithoutUserPoolsDataInput!
}

input OrganizationWhereUniqueInput {
  id: String
}

input PasswordResetCreateManyWithoutUserInput {
  connect: [PasswordResetWhereUniqueInput!]
  connectOrCreate: [PasswordResetCreateOrConnectWithoutUserInput!]
  create: [PasswordResetCreateWithoutUserInput!]
}

input PasswordResetCreateOrConnectWithoutUserInput {
  create: PasswordResetCreateWithoutUserInput!
  where: PasswordResetWhereUniqueInput!
}

input PasswordResetCreateWithoutUserInput {
  createdAt: DateTime
  expirationDate: DateTime!
  id: String
  token: String!
  updatedAt: DateTime
}

input PasswordResetScalarWhereInput {
  AND: [PasswordResetScalarWhereInput!]
  createdAt: DateTimeFilter
  expirationDate: DateTimeFilter
  id: StringFilter
  NOT: [PasswordResetScalarWhereInput!]
  OR: [PasswordResetScalarWhereInput!]
  token: StringFilter
  updatedAt: DateTimeFilter
  userId: StringFilter
}

input PasswordResetUpdateManyDataInput {
  createdAt: DateTimeFieldUpdateOperationsInput
  expirationDate: DateTimeFieldUpdateOperationsInput
  id: StringFieldUpdateOperationsInput
  token: StringFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
}

input PasswordResetUpdateManyWithoutUserInput {
  connect: [PasswordResetWhereUniqueInput!]
  connectOrCreate: [PasswordResetCreateOrConnectWithoutUserInput!]
  create: [PasswordResetCreateWithoutUserInput!]
  delete: [PasswordResetWhereUniqueInput!]
  deleteMany: [PasswordResetScalarWhereInput!]
  disconnect: [PasswordResetWhereUniqueInput!]
  set: [PasswordResetWhereUniqueInput!]
  update: [PasswordResetUpdateWithWhereUniqueWithoutUserInput!]
  updateMany: [PasswordResetUpdateManyWithWhereNestedInput!]
  upsert: [PasswordResetUpsertWithWhereUniqueWithoutUserInput!]
}

input PasswordResetUpdateManyWithWhereNestedInput {
  data: PasswordResetUpdateManyDataInput!
  where: PasswordResetScalarWhereInput!
}

input PasswordResetUpdateWithoutUserDataInput {
  createdAt: DateTimeFieldUpdateOperationsInput
  expirationDate: DateTimeFieldUpdateOperationsInput
  id: StringFieldUpdateOperationsInput
  token: StringFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
}

input PasswordResetUpdateWithWhereUniqueWithoutUserInput {
  data: PasswordResetUpdateWithoutUserDataInput!
  where: PasswordResetWhereUniqueInput!
}

input PasswordResetUpsertWithWhereUniqueWithoutUserInput {
  create: PasswordResetCreateWithoutUserInput!
  update: PasswordResetUpdateWithoutUserDataInput!
  where: PasswordResetWhereUniqueInput!
}

input PasswordResetWhereUniqueInput {
  id: String
}

type Photo {
  Profile: Profile!
}

input PhotoCreateManyWithoutProfileInput {
  connect: [PhotoWhereUniqueInput!]
  connectOrCreate: [PhotoCreateOrConnectWithoutProfileInput!]
  create: [PhotoCreateWithoutProfileInput!]
}

input PhotoCreateOrConnectWithoutProfileInput {
  create: PhotoCreateWithoutProfileInput!
  where: PhotoWhereUniqueInput!
}

input PhotoCreateWithoutProfileInput {
  createdAt: DateTime
  id: String
  isCurrentProfileImage: Boolean!
  updatedAt: DateTime
  value: String!
}

input PhotoScalarWhereInput {
  AND: [PhotoScalarWhereInput!]
  createdAt: DateTimeFilter
  id: StringFilter
  isCurrentProfileImage: BoolFilter
  NOT: [PhotoScalarWhereInput!]
  OR: [PhotoScalarWhereInput!]
  profileId: StringFilter
  updatedAt: DateTimeFilter
  value: StringFilter
}

input PhotoUpdateManyDataInput {
  createdAt: DateTimeFieldUpdateOperationsInput
  id: StringFieldUpdateOperationsInput
  isCurrentProfileImage: BoolFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
  value: StringFieldUpdateOperationsInput
}

input PhotoUpdateManyWithoutProfileInput {
  connect: [PhotoWhereUniqueInput!]
  connectOrCreate: [PhotoCreateOrConnectWithoutProfileInput!]
  create: [PhotoCreateWithoutProfileInput!]
  delete: [PhotoWhereUniqueInput!]
  deleteMany: [PhotoScalarWhereInput!]
  disconnect: [PhotoWhereUniqueInput!]
  set: [PhotoWhereUniqueInput!]
  update: [PhotoUpdateWithWhereUniqueWithoutProfileInput!]
  updateMany: [PhotoUpdateManyWithWhereNestedInput!]
  upsert: [PhotoUpsertWithWhereUniqueWithoutProfileInput!]
}

input PhotoUpdateManyWithWhereNestedInput {
  data: PhotoUpdateManyDataInput!
  where: PhotoScalarWhereInput!
}

input PhotoUpdateWithoutProfileDataInput {
  createdAt: DateTimeFieldUpdateOperationsInput
  id: StringFieldUpdateOperationsInput
  isCurrentProfileImage: BoolFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
  value: StringFieldUpdateOperationsInput
}

input PhotoUpdateWithWhereUniqueWithoutProfileInput {
  data: PhotoUpdateWithoutProfileDataInput!
  where: PhotoWhereUniqueInput!
}

input PhotoUpsertWithWhereUniqueWithoutProfileInput {
  create: PhotoCreateWithoutProfileInput!
  update: PhotoUpdateWithoutProfileDataInput!
  where: PhotoWhereUniqueInput!
}

input PhotoWhereUniqueInput {
  id: String
}

type Profile {
  birthdate: DateTime
  createdAt: DateTime!
  displayName: String
  firstName: String
  gender: Gender
  lastName: String
  mobileNumber: String
  Photos(after: PhotoWhereUniqueInput, before: PhotoWhereUniqueInput, first: Int, last: Int): [Photo!]!
  updatedAt: DateTime!
  User: User!
}

input ProfileCreateOneWithoutUserInput {
  connect: ProfileWhereUniqueInput
  connectOrCreate: ProfileCreateOrConnectWithoutUserInput
  create: ProfileCreateWithoutUserInput
}

input ProfileCreateOrConnectWithoutUserInput {
  create: ProfileCreateWithoutUserInput!
  where: ProfileWhereUniqueInput!
}

input ProfileCreateWithoutUserInput {
  birthdate: DateTime
  createdAt: DateTime
  displayName: String
  Emails: EmailCreateManyWithoutProfileInput
  firstName: String
  gender: Gender
  id: String
  lastName: String
  mobileNumber: String
  Photos: PhotoCreateManyWithoutProfileInput
  updatedAt: DateTime
  UserCustomAttributes: UserCustomAttributeCreateManyWithoutProfileInput
}

input ProfileUpdateOneWithoutUserInput {
  connect: ProfileWhereUniqueInput
  connectOrCreate: ProfileCreateOrConnectWithoutUserInput
  create: ProfileCreateWithoutUserInput
  delete: Boolean
  disconnect: Boolean
  update: ProfileUpdateWithoutUserDataInput
  upsert: ProfileUpsertWithoutUserInput
}

input ProfileUpdateWithoutUserDataInput {
  birthdate: NullableDateTimeFieldUpdateOperationsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  displayName: NullableStringFieldUpdateOperationsInput
  Emails: EmailUpdateManyWithoutProfileInput
  firstName: NullableStringFieldUpdateOperationsInput
  gender: NullableEnumGenderFieldUpdateOperationsInput
  id: StringFieldUpdateOperationsInput
  lastName: NullableStringFieldUpdateOperationsInput
  mobileNumber: NullableStringFieldUpdateOperationsInput
  Photos: PhotoUpdateManyWithoutProfileInput
  updatedAt: DateTimeFieldUpdateOperationsInput
  UserCustomAttributes: UserCustomAttributeUpdateManyWithoutProfileInput
}

input ProfileUpsertWithoutUserInput {
  create: ProfileCreateWithoutUserInput!
  update: ProfileUpdateWithoutUserDataInput!
}

input ProfileWhereUniqueInput {
  id: String
}

type Query {
  group(where: GroupWhereUniqueInput!): Group
  me: SystemUser
  oAuthClient(where: oAuthClientWhereUniqueInput!): oAuthClient
  organization(where: OrganizationWhereUniqueInput!): Organization
  organizations(after: OrganizationWhereUniqueInput, before: OrganizationWhereUniqueInput, first: Int, last: Int): [Organization!]!
  roles(after: RoleWhereUniqueInput, before: RoleWhereUniqueInput, first: Int, last: Int): [Role!]!
  userPool(where: UserPoolWhereUniqueInput!): UserPool
  users(after: UserWhereUniqueInput, before: UserWhereUniqueInput, first: Int, last: Int): [User!]!
}

input RefreshTokenOAuthClientIdCompoundUniqueInput {
  oAuthClientId: String!
  refreshToken: String!
}

type Role {
  createdAt: DateTime!
  Groups(after: GroupWhereUniqueInput, before: GroupWhereUniqueInput, first: Int, last: Int): [Group!]!
  name: String!
  Scopes(after: oAuthScopeWhereUniqueInput, before: oAuthScopeWhereUniqueInput, first: Int, last: Int): [oAuthScope!]!
  updatedAt: DateTime!
  Users(after: UserWhereUniqueInput, before: UserWhereUniqueInput, first: Int, last: Int): [User!]!
}

input RoleCreateManyWithoutCustomScopesInput {
  connect: [RoleWhereUniqueInput!]
  connectOrCreate: [RoleCreateOrConnectWithoutoAuthCustomScopeInput!]
  create: [RoleCreateWithoutCustomScopesInput!]
}

input RoleCreateManyWithoutGroupsInput {
  connect: [RoleWhereUniqueInput!]
  connectOrCreate: [RoleCreateOrConnectWithoutGroupInput!]
  create: [RoleCreateWithoutGroupsInput!]
}

input RoleCreateManyWithoutScopesInput {
  connect: [RoleWhereUniqueInput!]
  connectOrCreate: [RoleCreateOrConnectWithoutoAuthScopeInput!]
  create: [RoleCreateWithoutScopesInput!]
}

input RoleCreateManyWithoutUserPoolInput {
  connect: [RoleWhereUniqueInput!]
  connectOrCreate: [RoleCreateOrConnectWithoutUserPoolInput!]
  create: [RoleCreateWithoutUserPoolInput!]
}

input RoleCreateManyWithoutUsersInput {
  connect: [RoleWhereUniqueInput!]
  connectOrCreate: [RoleCreateOrConnectWithoutUserInput!]
  create: [RoleCreateWithoutUsersInput!]
}

input RoleCreateOrConnectWithoutGroupInput {
  create: RoleCreateWithoutGroupsInput!
  where: RoleWhereUniqueInput!
}

input RoleCreateOrConnectWithoutoAuthCustomScopeInput {
  create: RoleCreateWithoutCustomScopesInput!
  where: RoleWhereUniqueInput!
}

input RoleCreateOrConnectWithoutoAuthScopeInput {
  create: RoleCreateWithoutScopesInput!
  where: RoleWhereUniqueInput!
}

input RoleCreateOrConnectWithoutUserInput {
  create: RoleCreateWithoutUsersInput!
  where: RoleWhereUniqueInput!
}

input RoleCreateOrConnectWithoutUserPoolInput {
  create: RoleCreateWithoutUserPoolInput!
  where: RoleWhereUniqueInput!
}

input RoleCreateWithoutCustomScopesInput {
  createdAt: DateTime
  description: String
  Groups: GroupCreateManyWithoutRolesInput
  id: String
  name: String!
  Scopes: oAuthScopeCreateManyWithoutRolesInput
  updatedAt: DateTime
  UserPool: UserPoolCreateOneWithoutRolesInput!
  Users: UserCreateManyWithoutRolesInput
}

input RoleCreateWithoutGroupsInput {
  createdAt: DateTime
  CustomScopes: oAuthCustomScopeCreateManyWithoutRolesInput
  description: String
  id: String
  name: String!
  Scopes: oAuthScopeCreateManyWithoutRolesInput
  updatedAt: DateTime
  UserPool: UserPoolCreateOneWithoutRolesInput!
  Users: UserCreateManyWithoutRolesInput
}

input RoleCreateWithoutScopesInput {
  createdAt: DateTime
  CustomScopes: oAuthCustomScopeCreateManyWithoutRolesInput
  description: String
  Groups: GroupCreateManyWithoutRolesInput
  id: String
  name: String!
  updatedAt: DateTime
  UserPool: UserPoolCreateOneWithoutRolesInput!
  Users: UserCreateManyWithoutRolesInput
}

input RoleCreateWithoutUserPoolInput {
  createdAt: DateTime
  CustomScopes: oAuthCustomScopeCreateManyWithoutRolesInput
  description: String
  Groups: GroupCreateManyWithoutRolesInput
  id: String
  name: String!
  Scopes: oAuthScopeCreateManyWithoutRolesInput
  updatedAt: DateTime
  Users: UserCreateManyWithoutRolesInput
}

input RoleCreateWithoutUsersInput {
  createdAt: DateTime
  CustomScopes: oAuthCustomScopeCreateManyWithoutRolesInput
  description: String
  Groups: GroupCreateManyWithoutRolesInput
  id: String
  name: String!
  Scopes: oAuthScopeCreateManyWithoutRolesInput
  updatedAt: DateTime
  UserPool: UserPoolCreateOneWithoutRolesInput!
}

input RoleScalarWhereInput {
  AND: [RoleScalarWhereInput!]
  createdAt: DateTimeFilter
  description: StringNullableFilter
  id: StringFilter
  name: StringFilter
  NOT: [RoleScalarWhereInput!]
  OR: [RoleScalarWhereInput!]
  updatedAt: DateTimeFilter
  userPoolId: StringFilter
}

input RoleUpdateManyDataInput {
  createdAt: DateTimeFieldUpdateOperationsInput
  description: NullableStringFieldUpdateOperationsInput
  id: StringFieldUpdateOperationsInput
  name: StringFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
}

input RoleUpdateManyWithoutCustomScopesInput {
  connect: [RoleWhereUniqueInput!]
  connectOrCreate: [RoleCreateOrConnectWithoutoAuthCustomScopeInput!]
  create: [RoleCreateWithoutCustomScopesInput!]
  delete: [RoleWhereUniqueInput!]
  deleteMany: [RoleScalarWhereInput!]
  disconnect: [RoleWhereUniqueInput!]
  set: [RoleWhereUniqueInput!]
  update: [RoleUpdateWithWhereUniqueWithoutCustomScopesInput!]
  updateMany: [RoleUpdateManyWithWhereNestedInput!]
  upsert: [RoleUpsertWithWhereUniqueWithoutCustomScopesInput!]
}

input RoleUpdateManyWithoutGroupsInput {
  connect: [RoleWhereUniqueInput!]
  connectOrCreate: [RoleCreateOrConnectWithoutGroupInput!]
  create: [RoleCreateWithoutGroupsInput!]
  delete: [RoleWhereUniqueInput!]
  deleteMany: [RoleScalarWhereInput!]
  disconnect: [RoleWhereUniqueInput!]
  set: [RoleWhereUniqueInput!]
  update: [RoleUpdateWithWhereUniqueWithoutGroupsInput!]
  updateMany: [RoleUpdateManyWithWhereNestedInput!]
  upsert: [RoleUpsertWithWhereUniqueWithoutGroupsInput!]
}

input RoleUpdateManyWithoutScopesInput {
  connect: [RoleWhereUniqueInput!]
  connectOrCreate: [RoleCreateOrConnectWithoutoAuthScopeInput!]
  create: [RoleCreateWithoutScopesInput!]
  delete: [RoleWhereUniqueInput!]
  deleteMany: [RoleScalarWhereInput!]
  disconnect: [RoleWhereUniqueInput!]
  set: [RoleWhereUniqueInput!]
  update: [RoleUpdateWithWhereUniqueWithoutScopesInput!]
  updateMany: [RoleUpdateManyWithWhereNestedInput!]
  upsert: [RoleUpsertWithWhereUniqueWithoutScopesInput!]
}

input RoleUpdateManyWithoutUserPoolInput {
  connect: [RoleWhereUniqueInput!]
  connectOrCreate: [RoleCreateOrConnectWithoutUserPoolInput!]
  create: [RoleCreateWithoutUserPoolInput!]
  delete: [RoleWhereUniqueInput!]
  deleteMany: [RoleScalarWhereInput!]
  disconnect: [RoleWhereUniqueInput!]
  set: [RoleWhereUniqueInput!]
  update: [RoleUpdateWithWhereUniqueWithoutUserPoolInput!]
  updateMany: [RoleUpdateManyWithWhereNestedInput!]
  upsert: [RoleUpsertWithWhereUniqueWithoutUserPoolInput!]
}

input RoleUpdateManyWithoutUsersInput {
  connect: [RoleWhereUniqueInput!]
  connectOrCreate: [RoleCreateOrConnectWithoutUserInput!]
  create: [RoleCreateWithoutUsersInput!]
  delete: [RoleWhereUniqueInput!]
  deleteMany: [RoleScalarWhereInput!]
  disconnect: [RoleWhereUniqueInput!]
  set: [RoleWhereUniqueInput!]
  update: [RoleUpdateWithWhereUniqueWithoutUsersInput!]
  updateMany: [RoleUpdateManyWithWhereNestedInput!]
  upsert: [RoleUpsertWithWhereUniqueWithoutUsersInput!]
}

input RoleUpdateManyWithWhereNestedInput {
  data: RoleUpdateManyDataInput!
  where: RoleScalarWhereInput!
}

input RoleUpdateWithoutCustomScopesDataInput {
  createdAt: DateTimeFieldUpdateOperationsInput
  description: NullableStringFieldUpdateOperationsInput
  Groups: GroupUpdateManyWithoutRolesInput
  id: StringFieldUpdateOperationsInput
  name: StringFieldUpdateOperationsInput
  Scopes: oAuthScopeUpdateManyWithoutRolesInput
  updatedAt: DateTimeFieldUpdateOperationsInput
  UserPool: UserPoolUpdateOneRequiredWithoutRolesInput
  Users: UserUpdateManyWithoutRolesInput
}

input RoleUpdateWithoutGroupsDataInput {
  createdAt: DateTimeFieldUpdateOperationsInput
  CustomScopes: oAuthCustomScopeUpdateManyWithoutRolesInput
  description: NullableStringFieldUpdateOperationsInput
  id: StringFieldUpdateOperationsInput
  name: StringFieldUpdateOperationsInput
  Scopes: oAuthScopeUpdateManyWithoutRolesInput
  updatedAt: DateTimeFieldUpdateOperationsInput
  UserPool: UserPoolUpdateOneRequiredWithoutRolesInput
  Users: UserUpdateManyWithoutRolesInput
}

input RoleUpdateWithoutScopesDataInput {
  createdAt: DateTimeFieldUpdateOperationsInput
  CustomScopes: oAuthCustomScopeUpdateManyWithoutRolesInput
  description: NullableStringFieldUpdateOperationsInput
  Groups: GroupUpdateManyWithoutRolesInput
  id: StringFieldUpdateOperationsInput
  name: StringFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
  UserPool: UserPoolUpdateOneRequiredWithoutRolesInput
  Users: UserUpdateManyWithoutRolesInput
}

input RoleUpdateWithoutUserPoolDataInput {
  createdAt: DateTimeFieldUpdateOperationsInput
  CustomScopes: oAuthCustomScopeUpdateManyWithoutRolesInput
  description: NullableStringFieldUpdateOperationsInput
  Groups: GroupUpdateManyWithoutRolesInput
  id: StringFieldUpdateOperationsInput
  name: StringFieldUpdateOperationsInput
  Scopes: oAuthScopeUpdateManyWithoutRolesInput
  updatedAt: DateTimeFieldUpdateOperationsInput
  Users: UserUpdateManyWithoutRolesInput
}

input RoleUpdateWithoutUsersDataInput {
  createdAt: DateTimeFieldUpdateOperationsInput
  CustomScopes: oAuthCustomScopeUpdateManyWithoutRolesInput
  description: NullableStringFieldUpdateOperationsInput
  Groups: GroupUpdateManyWithoutRolesInput
  id: StringFieldUpdateOperationsInput
  name: StringFieldUpdateOperationsInput
  Scopes: oAuthScopeUpdateManyWithoutRolesInput
  updatedAt: DateTimeFieldUpdateOperationsInput
  UserPool: UserPoolUpdateOneRequiredWithoutRolesInput
}

input RoleUpdateWithWhereUniqueWithoutCustomScopesInput {
  data: RoleUpdateWithoutCustomScopesDataInput!
  where: RoleWhereUniqueInput!
}

input RoleUpdateWithWhereUniqueWithoutGroupsInput {
  data: RoleUpdateWithoutGroupsDataInput!
  where: RoleWhereUniqueInput!
}

input RoleUpdateWithWhereUniqueWithoutScopesInput {
  data: RoleUpdateWithoutScopesDataInput!
  where: RoleWhereUniqueInput!
}

input RoleUpdateWithWhereUniqueWithoutUserPoolInput {
  data: RoleUpdateWithoutUserPoolDataInput!
  where: RoleWhereUniqueInput!
}

input RoleUpdateWithWhereUniqueWithoutUsersInput {
  data: RoleUpdateWithoutUsersDataInput!
  where: RoleWhereUniqueInput!
}

input RoleUpsertWithWhereUniqueWithoutCustomScopesInput {
  create: RoleCreateWithoutCustomScopesInput!
  update: RoleUpdateWithoutCustomScopesDataInput!
  where: RoleWhereUniqueInput!
}

input RoleUpsertWithWhereUniqueWithoutGroupsInput {
  create: RoleCreateWithoutGroupsInput!
  update: RoleUpdateWithoutGroupsDataInput!
  where: RoleWhereUniqueInput!
}

input RoleUpsertWithWhereUniqueWithoutScopesInput {
  create: RoleCreateWithoutScopesInput!
  update: RoleUpdateWithoutScopesDataInput!
  where: RoleWhereUniqueInput!
}

input RoleUpsertWithWhereUniqueWithoutUserPoolInput {
  create: RoleCreateWithoutUserPoolInput!
  update: RoleUpdateWithoutUserPoolDataInput!
  where: RoleWhereUniqueInput!
}

input RoleUpsertWithWhereUniqueWithoutUsersInput {
  create: RoleCreateWithoutUsersInput!
  update: RoleUpdateWithoutUsersDataInput!
  where: RoleWhereUniqueInput!
}

input RoleWhereUniqueInput {
  id: String
  name_userPoolId: NameUserPoolIdCompoundUniqueInput
}

input StringFieldUpdateOperationsInput {
  set: String
}

input StringFilter {
  contains: String
  endsWith: String
  equals: String
  gt: String
  gte: String
  in: [String!]
  lt: String
  lte: String
  not: NestedStringFilter
  notIn: [String!]
  startsWith: String
}

input StringNullableFilter {
  contains: String
  endsWith: String
  equals: String
  gt: String
  gte: String
  in: [String!]
  lt: String
  lte: String
  not: NestedStringNullableFilter
  notIn: [String!]
  startsWith: String
}

enum SystemRole {
  ADMIN
  DEVELOPER
  SUPER_ADMIN
  USER
}

type SystemUser {
  createdAt: DateTime!
  email: String!
  id: String!
  role: SystemRole!
  updatedAt: DateTime!
  username: String!
}

input SystemUserCreateOneWithoutOrganizationsInput {
  connect: SystemUserWhereUniqueInput
  connectOrCreate: SystemUserCreateOrConnectWithoutOrganizationInput
  create: SystemUserCreateWithoutOrganizationsInput
}

input SystemUserCreateOrConnectWithoutOrganizationInput {
  create: SystemUserCreateWithoutOrganizationsInput!
  where: SystemUserWhereUniqueInput!
}

input SystemUserCreateWithoutOrganizationsInput {
  createdAt: DateTime
  email: String!
  id: String
  password: String!
  role: SystemRole
  updatedAt: DateTime
  username: String!
}

input SystemUserUpdateOneWithoutOrganizationsInput {
  connect: SystemUserWhereUniqueInput
  connectOrCreate: SystemUserCreateOrConnectWithoutOrganizationInput
  create: SystemUserCreateWithoutOrganizationsInput
  delete: Boolean
  disconnect: Boolean
  update: SystemUserUpdateWithoutOrganizationsDataInput
  upsert: SystemUserUpsertWithoutOrganizationsInput
}

input SystemUserUpdateWithoutOrganizationsDataInput {
  createdAt: DateTimeFieldUpdateOperationsInput
  email: StringFieldUpdateOperationsInput
  id: StringFieldUpdateOperationsInput
  password: StringFieldUpdateOperationsInput
  role: EnumSystemRoleFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
  username: StringFieldUpdateOperationsInput
}

input SystemUserUpsertWithoutOrganizationsInput {
  create: SystemUserCreateWithoutOrganizationsInput!
  update: SystemUserUpdateWithoutOrganizationsDataInput!
}

input SystemUserWhereUniqueInput {
  email: String
  id: String
  username: String
}

type User {
  createdAt: DateTime!
  Devices(after: UserDeviceWhereUniqueInput, before: UserDeviceWhereUniqueInput, first: Int, last: Int): [UserDevice!]!
  email: String!
  Groups(after: GroupWhereUniqueInput, before: GroupWhereUniqueInput, first: Int, last: Int): [Group!]!
  isExternalProvider: Boolean!
  Profile: Profile
  Roles(after: RoleWhereUniqueInput, before: RoleWhereUniqueInput, first: Int, last: Int): [Role!]!
  sub: String!
  updatedAt: DateTime!
  username: String!
}

input UserCreateInput {
  AccessTokens: oAuthAccessTokenCreateManyWithoutUserInput
  accountStatusType: AccountStatusType
  AuthorizationCodes: oAuthAuthorizationCodeCreateManyWithoutUserInput
  createdAt: DateTime
  Devices: UserDeviceCreateManyWithoutUserInput
  email: String!
  FollowedBy: UserCreateManyWithoutFollowingInput
  Following: UserCreateManyWithoutFollowedByInput
  Groups: GroupCreateManyWithoutUsersInput
  id: String
  isDisabled: Boolean
  isExternalProvider: Boolean
  Notification: NotificationCreateManyWithoutSenderInput
  Notifications: NotificationCreateManyWithoutRecipentInput
  password: String!
  PasswordResets: PasswordResetCreateManyWithoutUserInput
  Profile: ProfileCreateOneWithoutUserInput
  RefreshTokens: oAuthRefreshTokenCreateManyWithoutUserInput
  Roles: RoleCreateManyWithoutUsersInput
  sub: String
  updatedAt: DateTime
  username: String!
  UserPool: UserPoolCreateOneWithoutUsersInput!
}

input UserCreateManyWithoutFollowedByInput {
  connect: [UserWhereUniqueInput!]
  connectOrCreate: [UserCreateOrConnectWithoutUserInput!]
  create: [UserCreateWithoutFollowedByInput!]
}

input UserCreateManyWithoutFollowingInput {
  connect: [UserWhereUniqueInput!]
  connectOrCreate: [UserCreateOrConnectWithoutUserInput!]
  create: [UserCreateWithoutFollowingInput!]
}

input UserCreateManyWithoutGroupsInput {
  connect: [UserWhereUniqueInput!]
  connectOrCreate: [UserCreateOrConnectWithoutGroupInput!]
  create: [UserCreateWithoutGroupsInput!]
}

input UserCreateManyWithoutRolesInput {
  connect: [UserWhereUniqueInput!]
  connectOrCreate: [UserCreateOrConnectWithoutRoleInput!]
  create: [UserCreateWithoutRolesInput!]
}

input UserCreateManyWithoutUserPoolInput {
  connect: [UserWhereUniqueInput!]
  connectOrCreate: [UserCreateOrConnectWithoutUserPoolInput!]
  create: [UserCreateWithoutUserPoolInput!]
}

input UserCreateOneWithoutAccessTokensInput {
  connect: UserWhereUniqueInput
  connectOrCreate: UserCreateOrConnectWithoutoAuthAccessTokenInput
  create: UserCreateWithoutAccessTokensInput
}

input UserCreateOneWithoutAuthorizationCodesInput {
  connect: UserWhereUniqueInput
  connectOrCreate: UserCreateOrConnectWithoutoAuthAuthorizationCodeInput
  create: UserCreateWithoutAuthorizationCodesInput
}

input UserCreateOneWithoutNotificationInput {
  connect: UserWhereUniqueInput
  connectOrCreate: UserCreateOrConnectWithoutNotificationInput
  create: UserCreateWithoutNotificationInput
}

input UserCreateOneWithoutNotificationsInput {
  connect: UserWhereUniqueInput
  connectOrCreate: UserCreateOrConnectWithoutNotificationInput
  create: UserCreateWithoutNotificationsInput
}

input UserCreateOneWithoutRefreshTokensInput {
  connect: UserWhereUniqueInput
  connectOrCreate: UserCreateOrConnectWithoutoAuthRefreshTokenInput
  create: UserCreateWithoutRefreshTokensInput
}

input UserCreateOrConnectWithoutGroupInput {
  create: UserCreateWithoutGroupsInput!
  where: UserWhereUniqueInput!
}

input UserCreateOrConnectWithoutNotificationInput {
  create: UserCreateWithoutNotificationsInput!
  where: UserWhereUniqueInput!
}

input UserCreateOrConnectWithoutoAuthAccessTokenInput {
  create: UserCreateWithoutAccessTokensInput!
  where: UserWhereUniqueInput!
}

input UserCreateOrConnectWithoutoAuthAuthorizationCodeInput {
  create: UserCreateWithoutAuthorizationCodesInput!
  where: UserWhereUniqueInput!
}

input UserCreateOrConnectWithoutoAuthRefreshTokenInput {
  create: UserCreateWithoutRefreshTokensInput!
  where: UserWhereUniqueInput!
}

input UserCreateOrConnectWithoutRoleInput {
  create: UserCreateWithoutRolesInput!
  where: UserWhereUniqueInput!
}

input UserCreateOrConnectWithoutUserInput {
  create: UserCreateWithoutFollowingInput!
  where: UserWhereUniqueInput!
}

input UserCreateOrConnectWithoutUserPoolInput {
  create: UserCreateWithoutUserPoolInput!
  where: UserWhereUniqueInput!
}

input UserCreateWithoutAccessTokensInput {
  accountStatusType: AccountStatusType
  AuthorizationCodes: oAuthAuthorizationCodeCreateManyWithoutUserInput
  createdAt: DateTime
  Devices: UserDeviceCreateManyWithoutUserInput
  email: String!
  FollowedBy: UserCreateManyWithoutFollowingInput
  Following: UserCreateManyWithoutFollowedByInput
  Groups: GroupCreateManyWithoutUsersInput
  id: String
  isDisabled: Boolean
  isExternalProvider: Boolean
  Notification: NotificationCreateManyWithoutSenderInput
  Notifications: NotificationCreateManyWithoutRecipentInput
  password: String!
  PasswordResets: PasswordResetCreateManyWithoutUserInput
  Profile: ProfileCreateOneWithoutUserInput
  RefreshTokens: oAuthRefreshTokenCreateManyWithoutUserInput
  Roles: RoleCreateManyWithoutUsersInput
  sub: String
  updatedAt: DateTime
  username: String!
  UserPool: UserPoolCreateOneWithoutUsersInput!
}

input UserCreateWithoutAuthorizationCodesInput {
  AccessTokens: oAuthAccessTokenCreateManyWithoutUserInput
  accountStatusType: AccountStatusType
  createdAt: DateTime
  Devices: UserDeviceCreateManyWithoutUserInput
  email: String!
  FollowedBy: UserCreateManyWithoutFollowingInput
  Following: UserCreateManyWithoutFollowedByInput
  Groups: GroupCreateManyWithoutUsersInput
  id: String
  isDisabled: Boolean
  isExternalProvider: Boolean
  Notification: NotificationCreateManyWithoutSenderInput
  Notifications: NotificationCreateManyWithoutRecipentInput
  password: String!
  PasswordResets: PasswordResetCreateManyWithoutUserInput
  Profile: ProfileCreateOneWithoutUserInput
  RefreshTokens: oAuthRefreshTokenCreateManyWithoutUserInput
  Roles: RoleCreateManyWithoutUsersInput
  sub: String
  updatedAt: DateTime
  username: String!
  UserPool: UserPoolCreateOneWithoutUsersInput!
}

input UserCreateWithoutFollowedByInput {
  AccessTokens: oAuthAccessTokenCreateManyWithoutUserInput
  accountStatusType: AccountStatusType
  AuthorizationCodes: oAuthAuthorizationCodeCreateManyWithoutUserInput
  createdAt: DateTime
  Devices: UserDeviceCreateManyWithoutUserInput
  email: String!
  Following: UserCreateManyWithoutFollowedByInput
  Groups: GroupCreateManyWithoutUsersInput
  id: String
  isDisabled: Boolean
  isExternalProvider: Boolean
  Notification: NotificationCreateManyWithoutSenderInput
  Notifications: NotificationCreateManyWithoutRecipentInput
  password: String!
  PasswordResets: PasswordResetCreateManyWithoutUserInput
  Profile: ProfileCreateOneWithoutUserInput
  RefreshTokens: oAuthRefreshTokenCreateManyWithoutUserInput
  Roles: RoleCreateManyWithoutUsersInput
  sub: String
  updatedAt: DateTime
  username: String!
  UserPool: UserPoolCreateOneWithoutUsersInput!
}

input UserCreateWithoutFollowingInput {
  AccessTokens: oAuthAccessTokenCreateManyWithoutUserInput
  accountStatusType: AccountStatusType
  AuthorizationCodes: oAuthAuthorizationCodeCreateManyWithoutUserInput
  createdAt: DateTime
  Devices: UserDeviceCreateManyWithoutUserInput
  email: String!
  FollowedBy: UserCreateManyWithoutFollowingInput
  Groups: GroupCreateManyWithoutUsersInput
  id: String
  isDisabled: Boolean
  isExternalProvider: Boolean
  Notification: NotificationCreateManyWithoutSenderInput
  Notifications: NotificationCreateManyWithoutRecipentInput
  password: String!
  PasswordResets: PasswordResetCreateManyWithoutUserInput
  Profile: ProfileCreateOneWithoutUserInput
  RefreshTokens: oAuthRefreshTokenCreateManyWithoutUserInput
  Roles: RoleCreateManyWithoutUsersInput
  sub: String
  updatedAt: DateTime
  username: String!
  UserPool: UserPoolCreateOneWithoutUsersInput!
}

input UserCreateWithoutGroupsInput {
  AccessTokens: oAuthAccessTokenCreateManyWithoutUserInput
  accountStatusType: AccountStatusType
  AuthorizationCodes: oAuthAuthorizationCodeCreateManyWithoutUserInput
  createdAt: DateTime
  Devices: UserDeviceCreateManyWithoutUserInput
  email: String!
  FollowedBy: UserCreateManyWithoutFollowingInput
  Following: UserCreateManyWithoutFollowedByInput
  id: String
  isDisabled: Boolean
  isExternalProvider: Boolean
  Notification: NotificationCreateManyWithoutSenderInput
  Notifications: NotificationCreateManyWithoutRecipentInput
  password: String!
  PasswordResets: PasswordResetCreateManyWithoutUserInput
  Profile: ProfileCreateOneWithoutUserInput
  RefreshTokens: oAuthRefreshTokenCreateManyWithoutUserInput
  Roles: RoleCreateManyWithoutUsersInput
  sub: String
  updatedAt: DateTime
  username: String!
  UserPool: UserPoolCreateOneWithoutUsersInput!
}

input UserCreateWithoutNotificationInput {
  AccessTokens: oAuthAccessTokenCreateManyWithoutUserInput
  accountStatusType: AccountStatusType
  AuthorizationCodes: oAuthAuthorizationCodeCreateManyWithoutUserInput
  createdAt: DateTime
  Devices: UserDeviceCreateManyWithoutUserInput
  email: String!
  FollowedBy: UserCreateManyWithoutFollowingInput
  Following: UserCreateManyWithoutFollowedByInput
  Groups: GroupCreateManyWithoutUsersInput
  id: String
  isDisabled: Boolean
  isExternalProvider: Boolean
  Notifications: NotificationCreateManyWithoutRecipentInput
  password: String!
  PasswordResets: PasswordResetCreateManyWithoutUserInput
  Profile: ProfileCreateOneWithoutUserInput
  RefreshTokens: oAuthRefreshTokenCreateManyWithoutUserInput
  Roles: RoleCreateManyWithoutUsersInput
  sub: String
  updatedAt: DateTime
  username: String!
  UserPool: UserPoolCreateOneWithoutUsersInput!
}

input UserCreateWithoutNotificationsInput {
  AccessTokens: oAuthAccessTokenCreateManyWithoutUserInput
  accountStatusType: AccountStatusType
  AuthorizationCodes: oAuthAuthorizationCodeCreateManyWithoutUserInput
  createdAt: DateTime
  Devices: UserDeviceCreateManyWithoutUserInput
  email: String!
  FollowedBy: UserCreateManyWithoutFollowingInput
  Following: UserCreateManyWithoutFollowedByInput
  Groups: GroupCreateManyWithoutUsersInput
  id: String
  isDisabled: Boolean
  isExternalProvider: Boolean
  Notification: NotificationCreateManyWithoutSenderInput
  password: String!
  PasswordResets: PasswordResetCreateManyWithoutUserInput
  Profile: ProfileCreateOneWithoutUserInput
  RefreshTokens: oAuthRefreshTokenCreateManyWithoutUserInput
  Roles: RoleCreateManyWithoutUsersInput
  sub: String
  updatedAt: DateTime
  username: String!
  UserPool: UserPoolCreateOneWithoutUsersInput!
}

input UserCreateWithoutRefreshTokensInput {
  AccessTokens: oAuthAccessTokenCreateManyWithoutUserInput
  accountStatusType: AccountStatusType
  AuthorizationCodes: oAuthAuthorizationCodeCreateManyWithoutUserInput
  createdAt: DateTime
  Devices: UserDeviceCreateManyWithoutUserInput
  email: String!
  FollowedBy: UserCreateManyWithoutFollowingInput
  Following: UserCreateManyWithoutFollowedByInput
  Groups: GroupCreateManyWithoutUsersInput
  id: String
  isDisabled: Boolean
  isExternalProvider: Boolean
  Notification: NotificationCreateManyWithoutSenderInput
  Notifications: NotificationCreateManyWithoutRecipentInput
  password: String!
  PasswordResets: PasswordResetCreateManyWithoutUserInput
  Profile: ProfileCreateOneWithoutUserInput
  Roles: RoleCreateManyWithoutUsersInput
  sub: String
  updatedAt: DateTime
  username: String!
  UserPool: UserPoolCreateOneWithoutUsersInput!
}

input UserCreateWithoutRolesInput {
  AccessTokens: oAuthAccessTokenCreateManyWithoutUserInput
  accountStatusType: AccountStatusType
  AuthorizationCodes: oAuthAuthorizationCodeCreateManyWithoutUserInput
  createdAt: DateTime
  Devices: UserDeviceCreateManyWithoutUserInput
  email: String!
  FollowedBy: UserCreateManyWithoutFollowingInput
  Following: UserCreateManyWithoutFollowedByInput
  Groups: GroupCreateManyWithoutUsersInput
  id: String
  isDisabled: Boolean
  isExternalProvider: Boolean
  Notification: NotificationCreateManyWithoutSenderInput
  Notifications: NotificationCreateManyWithoutRecipentInput
  password: String!
  PasswordResets: PasswordResetCreateManyWithoutUserInput
  Profile: ProfileCreateOneWithoutUserInput
  RefreshTokens: oAuthRefreshTokenCreateManyWithoutUserInput
  sub: String
  updatedAt: DateTime
  username: String!
  UserPool: UserPoolCreateOneWithoutUsersInput!
}

input UserCreateWithoutUserPoolInput {
  AccessTokens: oAuthAccessTokenCreateManyWithoutUserInput
  accountStatusType: AccountStatusType
  AuthorizationCodes: oAuthAuthorizationCodeCreateManyWithoutUserInput
  createdAt: DateTime
  Devices: UserDeviceCreateManyWithoutUserInput
  email: String!
  FollowedBy: UserCreateManyWithoutFollowingInput
  Following: UserCreateManyWithoutFollowedByInput
  Groups: GroupCreateManyWithoutUsersInput
  id: String
  isDisabled: Boolean
  isExternalProvider: Boolean
  Notification: NotificationCreateManyWithoutSenderInput
  Notifications: NotificationCreateManyWithoutRecipentInput
  password: String!
  PasswordResets: PasswordResetCreateManyWithoutUserInput
  Profile: ProfileCreateOneWithoutUserInput
  RefreshTokens: oAuthRefreshTokenCreateManyWithoutUserInput
  Roles: RoleCreateManyWithoutUsersInput
  sub: String
  updatedAt: DateTime
  username: String!
}

input UserCustomAttributeCreateManyWithoutProfileInput {
  connect: [UserCustomAttributeWhereUniqueInput!]
  connectOrCreate: [UserCustomAttributeCreateOrConnectWithoutProfileInput!]
  create: [UserCustomAttributeCreateWithoutProfileInput!]
}

input UserCustomAttributeCreateOrConnectWithoutProfileInput {
  create: UserCustomAttributeCreateWithoutProfileInput!
  where: UserCustomAttributeWhereUniqueInput!
}

input UserCustomAttributeCreateWithoutProfileInput {
  name: String!
  value: String!
}

input UserCustomAttributeScalarWhereInput {
  AND: [UserCustomAttributeScalarWhereInput!]
  name: StringFilter
  NOT: [UserCustomAttributeScalarWhereInput!]
  OR: [UserCustomAttributeScalarWhereInput!]
  profileId: StringFilter
  value: StringFilter
}

input UserCustomAttributeUpdateManyDataInput {
  name: StringFieldUpdateOperationsInput
  value: StringFieldUpdateOperationsInput
}

input UserCustomAttributeUpdateManyWithoutProfileInput {
  connect: [UserCustomAttributeWhereUniqueInput!]
  connectOrCreate: [UserCustomAttributeCreateOrConnectWithoutProfileInput!]
  create: [UserCustomAttributeCreateWithoutProfileInput!]
  delete: [UserCustomAttributeWhereUniqueInput!]
  deleteMany: [UserCustomAttributeScalarWhereInput!]
  disconnect: [UserCustomAttributeWhereUniqueInput!]
  set: [UserCustomAttributeWhereUniqueInput!]
  update: [UserCustomAttributeUpdateWithWhereUniqueWithoutProfileInput!]
  updateMany: [UserCustomAttributeUpdateManyWithWhereNestedInput!]
  upsert: [UserCustomAttributeUpsertWithWhereUniqueWithoutProfileInput!]
}

input UserCustomAttributeUpdateManyWithWhereNestedInput {
  data: UserCustomAttributeUpdateManyDataInput!
  where: UserCustomAttributeScalarWhereInput!
}

input UserCustomAttributeUpdateWithoutProfileDataInput {
  name: StringFieldUpdateOperationsInput
  value: StringFieldUpdateOperationsInput
}

input UserCustomAttributeUpdateWithWhereUniqueWithoutProfileInput {
  data: UserCustomAttributeUpdateWithoutProfileDataInput!
  where: UserCustomAttributeWhereUniqueInput!
}

input UserCustomAttributeUpsertWithWhereUniqueWithoutProfileInput {
  create: UserCustomAttributeCreateWithoutProfileInput!
  update: UserCustomAttributeUpdateWithoutProfileDataInput!
  where: UserCustomAttributeWhereUniqueInput!
}

input UserCustomAttributeWhereUniqueInput {
  name_profileId: NameProfileIdCompoundUniqueInput
}

type UserDevice {
  User: User!
}

input UserDeviceCreateManyWithoutUserInput {
  connect: [UserDeviceWhereUniqueInput!]
  connectOrCreate: [UserDeviceCreateOrConnectWithoutUserInput!]
  create: [UserDeviceCreateWithoutUserInput!]
}

input UserDeviceCreateOrConnectWithoutUserInput {
  create: UserDeviceCreateWithoutUserInput!
  where: UserDeviceWhereUniqueInput!
}

input UserDeviceCreateWithoutUserInput {
  createdAt: DateTime
  deviceKey: String!
  id: String
  isRemembered: Boolean
  lastIP: String!
  lastSeen: DateTime!
  name: String
  SDK: String
  updatedAt: DateTime
}

input UserDeviceScalarWhereInput {
  AND: [UserDeviceScalarWhereInput!]
  createdAt: DateTimeFilter
  deviceKey: StringFilter
  id: StringFilter
  isRemembered: BoolFilter
  lastIP: StringFilter
  lastSeen: DateTimeFilter
  name: StringNullableFilter
  NOT: [UserDeviceScalarWhereInput!]
  OR: [UserDeviceScalarWhereInput!]
  SDK: StringNullableFilter
  updatedAt: DateTimeFilter
  userId: StringFilter
}

input UserDeviceUpdateManyDataInput {
  createdAt: DateTimeFieldUpdateOperationsInput
  deviceKey: StringFieldUpdateOperationsInput
  id: StringFieldUpdateOperationsInput
  isRemembered: BoolFieldUpdateOperationsInput
  lastIP: StringFieldUpdateOperationsInput
  lastSeen: DateTimeFieldUpdateOperationsInput
  name: NullableStringFieldUpdateOperationsInput
  SDK: NullableStringFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
}

input UserDeviceUpdateManyWithoutUserInput {
  connect: [UserDeviceWhereUniqueInput!]
  connectOrCreate: [UserDeviceCreateOrConnectWithoutUserInput!]
  create: [UserDeviceCreateWithoutUserInput!]
  delete: [UserDeviceWhereUniqueInput!]
  deleteMany: [UserDeviceScalarWhereInput!]
  disconnect: [UserDeviceWhereUniqueInput!]
  set: [UserDeviceWhereUniqueInput!]
  update: [UserDeviceUpdateWithWhereUniqueWithoutUserInput!]
  updateMany: [UserDeviceUpdateManyWithWhereNestedInput!]
  upsert: [UserDeviceUpsertWithWhereUniqueWithoutUserInput!]
}

input UserDeviceUpdateManyWithWhereNestedInput {
  data: UserDeviceUpdateManyDataInput!
  where: UserDeviceScalarWhereInput!
}

input UserDeviceUpdateWithoutUserDataInput {
  createdAt: DateTimeFieldUpdateOperationsInput
  deviceKey: StringFieldUpdateOperationsInput
  id: StringFieldUpdateOperationsInput
  isRemembered: BoolFieldUpdateOperationsInput
  lastIP: StringFieldUpdateOperationsInput
  lastSeen: DateTimeFieldUpdateOperationsInput
  name: NullableStringFieldUpdateOperationsInput
  SDK: NullableStringFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
}

input UserDeviceUpdateWithWhereUniqueWithoutUserInput {
  data: UserDeviceUpdateWithoutUserDataInput!
  where: UserDeviceWhereUniqueInput!
}

input UserDeviceUpsertWithWhereUniqueWithoutUserInput {
  create: UserDeviceCreateWithoutUserInput!
  update: UserDeviceUpdateWithoutUserDataInput!
  where: UserDeviceWhereUniqueInput!
}

input UserDeviceWhereUniqueInput {
  id: String
}

input UserIdOAuthClientIdCompoundUniqueInput {
  oAuthClientId: String!
  userId: String!
}

input UsernameUserPoolIdCompoundUniqueInput {
  username: String!
  userPoolId: String!
}

type UserPool {
  Clients(after: oAuthClientWhereUniqueInput, before: oAuthClientWhereUniqueInput, first: Int, last: Int): [oAuthClient!]!
  CustomScopes(after: oAuthCustomScopeWhereUniqueInput, before: oAuthCustomScopeWhereUniqueInput, first: Int, last: Int): [oAuthCustomScope!]!
  Groups(after: GroupWhereUniqueInput, before: GroupWhereUniqueInput, first: Int, last: Int): [Group!]!
  id: String!
  name: String!
  Organization: Organization!
  ResourceServers(after: oAuthResourceServerWhereUniqueInput, before: oAuthResourceServerWhereUniqueInput, first: Int, last: Int): [oAuthResourceServer!]!
  Roles(after: RoleWhereUniqueInput, before: RoleWhereUniqueInput, first: Int, last: Int): [Role!]!
  Scopes(after: oAuthScopeWhereUniqueInput, before: oAuthScopeWhereUniqueInput, first: Int, last: Int): [oAuthScope!]!
  Users(after: UserWhereUniqueInput, before: UserWhereUniqueInput, first: Int, last: Int): [User!]!
}

input UserPoolCreateInput {
  Clients: oAuthClientCreateManyWithoutUserPoolInput
  CustomScopes: oAuthCustomScopeCreateManyWithoutUserPoolInput
  Groups: GroupCreateManyWithoutUserPoolInput
  id: String
  identifier: String!
  name: String!
  Organization: OrganizationCreateOneWithoutUserPoolsInput!
  ResourceServers: oAuthResourceServerCreateManyWithoutUserPoolInput
  Roles: RoleCreateManyWithoutUserPoolInput
  Scopes: oAuthScopeCreateManyWithoutUserPoolsInput
  Users: UserCreateManyWithoutUserPoolInput
}

input UserPoolCreateManyWithoutOrganizationInput {
  connect: [UserPoolWhereUniqueInput!]
  connectOrCreate: [UserPoolCreateOrConnectWithoutOrganizationInput!]
  create: [UserPoolCreateWithoutOrganizationInput!]
}

input UserPoolCreateManyWithoutScopesInput {
  connect: [UserPoolWhereUniqueInput!]
  connectOrCreate: [UserPoolCreateOrConnectWithoutoAuthScopeInput!]
  create: [UserPoolCreateWithoutScopesInput!]
}

input UserPoolCreateOneWithoutClientsInput {
  connect: UserPoolWhereUniqueInput
  connectOrCreate: UserPoolCreateOrConnectWithoutoAuthClientInput
  create: UserPoolCreateWithoutClientsInput
}

input UserPoolCreateOneWithoutCustomScopesInput {
  connect: UserPoolWhereUniqueInput
  connectOrCreate: UserPoolCreateOrConnectWithoutoAuthCustomScopeInput
  create: UserPoolCreateWithoutCustomScopesInput
}

input UserPoolCreateOneWithoutGroupsInput {
  connect: UserPoolWhereUniqueInput
  connectOrCreate: UserPoolCreateOrConnectWithoutGroupInput
  create: UserPoolCreateWithoutGroupsInput
}

input UserPoolCreateOneWithoutResourceServersInput {
  connect: UserPoolWhereUniqueInput
  connectOrCreate: UserPoolCreateOrConnectWithoutoAuthResourceServerInput
  create: UserPoolCreateWithoutResourceServersInput
}

input UserPoolCreateOneWithoutRolesInput {
  connect: UserPoolWhereUniqueInput
  connectOrCreate: UserPoolCreateOrConnectWithoutRoleInput
  create: UserPoolCreateWithoutRolesInput
}

input UserPoolCreateOneWithoutUsersInput {
  connect: UserPoolWhereUniqueInput
  connectOrCreate: UserPoolCreateOrConnectWithoutUserInput
  create: UserPoolCreateWithoutUsersInput
}

input UserPoolCreateOrConnectWithoutGroupInput {
  create: UserPoolCreateWithoutGroupsInput!
  where: UserPoolWhereUniqueInput!
}

input UserPoolCreateOrConnectWithoutoAuthClientInput {
  create: UserPoolCreateWithoutClientsInput!
  where: UserPoolWhereUniqueInput!
}

input UserPoolCreateOrConnectWithoutoAuthCustomScopeInput {
  create: UserPoolCreateWithoutCustomScopesInput!
  where: UserPoolWhereUniqueInput!
}

input UserPoolCreateOrConnectWithoutoAuthResourceServerInput {
  create: UserPoolCreateWithoutResourceServersInput!
  where: UserPoolWhereUniqueInput!
}

input UserPoolCreateOrConnectWithoutoAuthScopeInput {
  create: UserPoolCreateWithoutScopesInput!
  where: UserPoolWhereUniqueInput!
}

input UserPoolCreateOrConnectWithoutOrganizationInput {
  create: UserPoolCreateWithoutOrganizationInput!
  where: UserPoolWhereUniqueInput!
}

input UserPoolCreateOrConnectWithoutRoleInput {
  create: UserPoolCreateWithoutRolesInput!
  where: UserPoolWhereUniqueInput!
}

input UserPoolCreateOrConnectWithoutUserInput {
  create: UserPoolCreateWithoutUsersInput!
  where: UserPoolWhereUniqueInput!
}

input UserPoolCreateWithoutClientsInput {
  CustomScopes: oAuthCustomScopeCreateManyWithoutUserPoolInput
  Groups: GroupCreateManyWithoutUserPoolInput
  id: String
  identifier: String!
  name: String!
  Organization: OrganizationCreateOneWithoutUserPoolsInput!
  ResourceServers: oAuthResourceServerCreateManyWithoutUserPoolInput
  Roles: RoleCreateManyWithoutUserPoolInput
  Scopes: oAuthScopeCreateManyWithoutUserPoolsInput
  Users: UserCreateManyWithoutUserPoolInput
}

input UserPoolCreateWithoutCustomScopesInput {
  Clients: oAuthClientCreateManyWithoutUserPoolInput
  Groups: GroupCreateManyWithoutUserPoolInput
  id: String
  identifier: String!
  name: String!
  Organization: OrganizationCreateOneWithoutUserPoolsInput!
  ResourceServers: oAuthResourceServerCreateManyWithoutUserPoolInput
  Roles: RoleCreateManyWithoutUserPoolInput
  Scopes: oAuthScopeCreateManyWithoutUserPoolsInput
  Users: UserCreateManyWithoutUserPoolInput
}

input UserPoolCreateWithoutGroupsInput {
  Clients: oAuthClientCreateManyWithoutUserPoolInput
  CustomScopes: oAuthCustomScopeCreateManyWithoutUserPoolInput
  id: String
  identifier: String!
  name: String!
  Organization: OrganizationCreateOneWithoutUserPoolsInput!
  ResourceServers: oAuthResourceServerCreateManyWithoutUserPoolInput
  Roles: RoleCreateManyWithoutUserPoolInput
  Scopes: oAuthScopeCreateManyWithoutUserPoolsInput
  Users: UserCreateManyWithoutUserPoolInput
}

input UserPoolCreateWithoutOrganizationInput {
  Clients: oAuthClientCreateManyWithoutUserPoolInput
  CustomScopes: oAuthCustomScopeCreateManyWithoutUserPoolInput
  Groups: GroupCreateManyWithoutUserPoolInput
  id: String
  identifier: String!
  name: String!
  ResourceServers: oAuthResourceServerCreateManyWithoutUserPoolInput
  Roles: RoleCreateManyWithoutUserPoolInput
  Scopes: oAuthScopeCreateManyWithoutUserPoolsInput
  Users: UserCreateManyWithoutUserPoolInput
}

input UserPoolCreateWithoutResourceServersInput {
  Clients: oAuthClientCreateManyWithoutUserPoolInput
  CustomScopes: oAuthCustomScopeCreateManyWithoutUserPoolInput
  Groups: GroupCreateManyWithoutUserPoolInput
  id: String
  identifier: String!
  name: String!
  Organization: OrganizationCreateOneWithoutUserPoolsInput!
  Roles: RoleCreateManyWithoutUserPoolInput
  Scopes: oAuthScopeCreateManyWithoutUserPoolsInput
  Users: UserCreateManyWithoutUserPoolInput
}

input UserPoolCreateWithoutRolesInput {
  Clients: oAuthClientCreateManyWithoutUserPoolInput
  CustomScopes: oAuthCustomScopeCreateManyWithoutUserPoolInput
  Groups: GroupCreateManyWithoutUserPoolInput
  id: String
  identifier: String!
  name: String!
  Organization: OrganizationCreateOneWithoutUserPoolsInput!
  ResourceServers: oAuthResourceServerCreateManyWithoutUserPoolInput
  Scopes: oAuthScopeCreateManyWithoutUserPoolsInput
  Users: UserCreateManyWithoutUserPoolInput
}

input UserPoolCreateWithoutScopesInput {
  Clients: oAuthClientCreateManyWithoutUserPoolInput
  CustomScopes: oAuthCustomScopeCreateManyWithoutUserPoolInput
  Groups: GroupCreateManyWithoutUserPoolInput
  id: String
  identifier: String!
  name: String!
  Organization: OrganizationCreateOneWithoutUserPoolsInput!
  ResourceServers: oAuthResourceServerCreateManyWithoutUserPoolInput
  Roles: RoleCreateManyWithoutUserPoolInput
  Users: UserCreateManyWithoutUserPoolInput
}

input UserPoolCreateWithoutUsersInput {
  Clients: oAuthClientCreateManyWithoutUserPoolInput
  CustomScopes: oAuthCustomScopeCreateManyWithoutUserPoolInput
  Groups: GroupCreateManyWithoutUserPoolInput
  id: String
  identifier: String!
  name: String!
  Organization: OrganizationCreateOneWithoutUserPoolsInput!
  ResourceServers: oAuthResourceServerCreateManyWithoutUserPoolInput
  Roles: RoleCreateManyWithoutUserPoolInput
  Scopes: oAuthScopeCreateManyWithoutUserPoolsInput
}

input UserPoolScalarWhereInput {
  AND: [UserPoolScalarWhereInput!]
  id: StringFilter
  identifier: StringFilter
  name: StringFilter
  NOT: [UserPoolScalarWhereInput!]
  OR: [UserPoolScalarWhereInput!]
  organizationId: StringFilter
}

input UserPoolUpdateManyDataInput {
  id: StringFieldUpdateOperationsInput
  identifier: StringFieldUpdateOperationsInput
  name: StringFieldUpdateOperationsInput
}

input UserPoolUpdateManyWithoutScopesInput {
  connect: [UserPoolWhereUniqueInput!]
  connectOrCreate: [UserPoolCreateOrConnectWithoutoAuthScopeInput!]
  create: [UserPoolCreateWithoutScopesInput!]
  delete: [UserPoolWhereUniqueInput!]
  deleteMany: [UserPoolScalarWhereInput!]
  disconnect: [UserPoolWhereUniqueInput!]
  set: [UserPoolWhereUniqueInput!]
  update: [UserPoolUpdateWithWhereUniqueWithoutScopesInput!]
  updateMany: [UserPoolUpdateManyWithWhereNestedInput!]
  upsert: [UserPoolUpsertWithWhereUniqueWithoutScopesInput!]
}

input UserPoolUpdateManyWithWhereNestedInput {
  data: UserPoolUpdateManyDataInput!
  where: UserPoolScalarWhereInput!
}

input UserPoolUpdateOneRequiredWithoutClientsInput {
  connect: UserPoolWhereUniqueInput
  connectOrCreate: UserPoolCreateOrConnectWithoutoAuthClientInput
  create: UserPoolCreateWithoutClientsInput
  update: UserPoolUpdateWithoutClientsDataInput
  upsert: UserPoolUpsertWithoutClientsInput
}

input UserPoolUpdateOneRequiredWithoutCustomScopesInput {
  connect: UserPoolWhereUniqueInput
  connectOrCreate: UserPoolCreateOrConnectWithoutoAuthCustomScopeInput
  create: UserPoolCreateWithoutCustomScopesInput
  update: UserPoolUpdateWithoutCustomScopesDataInput
  upsert: UserPoolUpsertWithoutCustomScopesInput
}

input UserPoolUpdateOneRequiredWithoutGroupsInput {
  connect: UserPoolWhereUniqueInput
  connectOrCreate: UserPoolCreateOrConnectWithoutGroupInput
  create: UserPoolCreateWithoutGroupsInput
  update: UserPoolUpdateWithoutGroupsDataInput
  upsert: UserPoolUpsertWithoutGroupsInput
}

input UserPoolUpdateOneRequiredWithoutResourceServersInput {
  connect: UserPoolWhereUniqueInput
  connectOrCreate: UserPoolCreateOrConnectWithoutoAuthResourceServerInput
  create: UserPoolCreateWithoutResourceServersInput
  update: UserPoolUpdateWithoutResourceServersDataInput
  upsert: UserPoolUpsertWithoutResourceServersInput
}

input UserPoolUpdateOneRequiredWithoutRolesInput {
  connect: UserPoolWhereUniqueInput
  connectOrCreate: UserPoolCreateOrConnectWithoutRoleInput
  create: UserPoolCreateWithoutRolesInput
  update: UserPoolUpdateWithoutRolesDataInput
  upsert: UserPoolUpsertWithoutRolesInput
}

input UserPoolUpdateOneRequiredWithoutUsersInput {
  connect: UserPoolWhereUniqueInput
  connectOrCreate: UserPoolCreateOrConnectWithoutUserInput
  create: UserPoolCreateWithoutUsersInput
  update: UserPoolUpdateWithoutUsersDataInput
  upsert: UserPoolUpsertWithoutUsersInput
}

input UserPoolUpdateWithoutClientsDataInput {
  CustomScopes: oAuthCustomScopeUpdateManyWithoutUserPoolInput
  Groups: GroupUpdateManyWithoutUserPoolInput
  id: StringFieldUpdateOperationsInput
  identifier: StringFieldUpdateOperationsInput
  name: StringFieldUpdateOperationsInput
  Organization: OrganizationUpdateOneRequiredWithoutUserPoolsInput
  ResourceServers: oAuthResourceServerUpdateManyWithoutUserPoolInput
  Roles: RoleUpdateManyWithoutUserPoolInput
  Scopes: oAuthScopeUpdateManyWithoutUserPoolsInput
  Users: UserUpdateManyWithoutUserPoolInput
}

input UserPoolUpdateWithoutCustomScopesDataInput {
  Clients: oAuthClientUpdateManyWithoutUserPoolInput
  Groups: GroupUpdateManyWithoutUserPoolInput
  id: StringFieldUpdateOperationsInput
  identifier: StringFieldUpdateOperationsInput
  name: StringFieldUpdateOperationsInput
  Organization: OrganizationUpdateOneRequiredWithoutUserPoolsInput
  ResourceServers: oAuthResourceServerUpdateManyWithoutUserPoolInput
  Roles: RoleUpdateManyWithoutUserPoolInput
  Scopes: oAuthScopeUpdateManyWithoutUserPoolsInput
  Users: UserUpdateManyWithoutUserPoolInput
}

input UserPoolUpdateWithoutGroupsDataInput {
  Clients: oAuthClientUpdateManyWithoutUserPoolInput
  CustomScopes: oAuthCustomScopeUpdateManyWithoutUserPoolInput
  id: StringFieldUpdateOperationsInput
  identifier: StringFieldUpdateOperationsInput
  name: StringFieldUpdateOperationsInput
  Organization: OrganizationUpdateOneRequiredWithoutUserPoolsInput
  ResourceServers: oAuthResourceServerUpdateManyWithoutUserPoolInput
  Roles: RoleUpdateManyWithoutUserPoolInput
  Scopes: oAuthScopeUpdateManyWithoutUserPoolsInput
  Users: UserUpdateManyWithoutUserPoolInput
}

input UserPoolUpdateWithoutResourceServersDataInput {
  Clients: oAuthClientUpdateManyWithoutUserPoolInput
  CustomScopes: oAuthCustomScopeUpdateManyWithoutUserPoolInput
  Groups: GroupUpdateManyWithoutUserPoolInput
  id: StringFieldUpdateOperationsInput
  identifier: StringFieldUpdateOperationsInput
  name: StringFieldUpdateOperationsInput
  Organization: OrganizationUpdateOneRequiredWithoutUserPoolsInput
  Roles: RoleUpdateManyWithoutUserPoolInput
  Scopes: oAuthScopeUpdateManyWithoutUserPoolsInput
  Users: UserUpdateManyWithoutUserPoolInput
}

input UserPoolUpdateWithoutRolesDataInput {
  Clients: oAuthClientUpdateManyWithoutUserPoolInput
  CustomScopes: oAuthCustomScopeUpdateManyWithoutUserPoolInput
  Groups: GroupUpdateManyWithoutUserPoolInput
  id: StringFieldUpdateOperationsInput
  identifier: StringFieldUpdateOperationsInput
  name: StringFieldUpdateOperationsInput
  Organization: OrganizationUpdateOneRequiredWithoutUserPoolsInput
  ResourceServers: oAuthResourceServerUpdateManyWithoutUserPoolInput
  Scopes: oAuthScopeUpdateManyWithoutUserPoolsInput
  Users: UserUpdateManyWithoutUserPoolInput
}

input UserPoolUpdateWithoutScopesDataInput {
  Clients: oAuthClientUpdateManyWithoutUserPoolInput
  CustomScopes: oAuthCustomScopeUpdateManyWithoutUserPoolInput
  Groups: GroupUpdateManyWithoutUserPoolInput
  id: StringFieldUpdateOperationsInput
  identifier: StringFieldUpdateOperationsInput
  name: StringFieldUpdateOperationsInput
  Organization: OrganizationUpdateOneRequiredWithoutUserPoolsInput
  ResourceServers: oAuthResourceServerUpdateManyWithoutUserPoolInput
  Roles: RoleUpdateManyWithoutUserPoolInput
  Users: UserUpdateManyWithoutUserPoolInput
}

input UserPoolUpdateWithoutUsersDataInput {
  Clients: oAuthClientUpdateManyWithoutUserPoolInput
  CustomScopes: oAuthCustomScopeUpdateManyWithoutUserPoolInput
  Groups: GroupUpdateManyWithoutUserPoolInput
  id: StringFieldUpdateOperationsInput
  identifier: StringFieldUpdateOperationsInput
  name: StringFieldUpdateOperationsInput
  Organization: OrganizationUpdateOneRequiredWithoutUserPoolsInput
  ResourceServers: oAuthResourceServerUpdateManyWithoutUserPoolInput
  Roles: RoleUpdateManyWithoutUserPoolInput
  Scopes: oAuthScopeUpdateManyWithoutUserPoolsInput
}

input UserPoolUpdateWithWhereUniqueWithoutScopesInput {
  data: UserPoolUpdateWithoutScopesDataInput!
  where: UserPoolWhereUniqueInput!
}

input UserPoolUpsertWithoutClientsInput {
  create: UserPoolCreateWithoutClientsInput!
  update: UserPoolUpdateWithoutClientsDataInput!
}

input UserPoolUpsertWithoutCustomScopesInput {
  create: UserPoolCreateWithoutCustomScopesInput!
  update: UserPoolUpdateWithoutCustomScopesDataInput!
}

input UserPoolUpsertWithoutGroupsInput {
  create: UserPoolCreateWithoutGroupsInput!
  update: UserPoolUpdateWithoutGroupsDataInput!
}

input UserPoolUpsertWithoutResourceServersInput {
  create: UserPoolCreateWithoutResourceServersInput!
  update: UserPoolUpdateWithoutResourceServersDataInput!
}

input UserPoolUpsertWithoutRolesInput {
  create: UserPoolCreateWithoutRolesInput!
  update: UserPoolUpdateWithoutRolesDataInput!
}

input UserPoolUpsertWithoutUsersInput {
  create: UserPoolCreateWithoutUsersInput!
  update: UserPoolUpdateWithoutUsersDataInput!
}

input UserPoolUpsertWithWhereUniqueWithoutScopesInput {
  create: UserPoolCreateWithoutScopesInput!
  update: UserPoolUpdateWithoutScopesDataInput!
  where: UserPoolWhereUniqueInput!
}

input UserPoolWhereUniqueInput {
  id: String
  identifier: String
  name_organizationId: NameOrganizationIdCompoundUniqueInput
}

input UserScalarWhereInput {
  accountStatusType: EnumAccountStatusTypeFilter
  AND: [UserScalarWhereInput!]
  createdAt: DateTimeFilter
  email: StringFilter
  id: StringFilter
  isDisabled: BoolFilter
  isExternalProvider: BoolFilter
  NOT: [UserScalarWhereInput!]
  OR: [UserScalarWhereInput!]
  password: StringFilter
  sub: StringFilter
  updatedAt: DateTimeFilter
  username: StringFilter
  userPoolId: StringFilter
}

input UserUpdateInput {
  AccessTokens: oAuthAccessTokenUpdateManyWithoutUserInput
  accountStatusType: EnumAccountStatusTypeFieldUpdateOperationsInput
  AuthorizationCodes: oAuthAuthorizationCodeUpdateManyWithoutUserInput
  createdAt: DateTimeFieldUpdateOperationsInput
  Devices: UserDeviceUpdateManyWithoutUserInput
  email: StringFieldUpdateOperationsInput
  FollowedBy: UserUpdateManyWithoutFollowingInput
  Following: UserUpdateManyWithoutFollowedByInput
  Groups: GroupUpdateManyWithoutUsersInput
  id: StringFieldUpdateOperationsInput
  isDisabled: BoolFieldUpdateOperationsInput
  isExternalProvider: BoolFieldUpdateOperationsInput
  Notification: NotificationUpdateManyWithoutSenderInput
  Notifications: NotificationUpdateManyWithoutRecipentInput
  password: StringFieldUpdateOperationsInput
  PasswordResets: PasswordResetUpdateManyWithoutUserInput
  Profile: ProfileUpdateOneWithoutUserInput
  RefreshTokens: oAuthRefreshTokenUpdateManyWithoutUserInput
  Roles: RoleUpdateManyWithoutUsersInput
  sub: StringFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
  username: StringFieldUpdateOperationsInput
  UserPool: UserPoolUpdateOneRequiredWithoutUsersInput
}

input UserUpdateManyDataInput {
  accountStatusType: EnumAccountStatusTypeFieldUpdateOperationsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  email: StringFieldUpdateOperationsInput
  id: StringFieldUpdateOperationsInput
  isDisabled: BoolFieldUpdateOperationsInput
  isExternalProvider: BoolFieldUpdateOperationsInput
  password: StringFieldUpdateOperationsInput
  sub: StringFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
  username: StringFieldUpdateOperationsInput
}

input UserUpdateManyWithoutFollowedByInput {
  connect: [UserWhereUniqueInput!]
  connectOrCreate: [UserCreateOrConnectWithoutUserInput!]
  create: [UserCreateWithoutFollowedByInput!]
  delete: [UserWhereUniqueInput!]
  deleteMany: [UserScalarWhereInput!]
  disconnect: [UserWhereUniqueInput!]
  set: [UserWhereUniqueInput!]
  update: [UserUpdateWithWhereUniqueWithoutFollowedByInput!]
  updateMany: [UserUpdateManyWithWhereNestedInput!]
  upsert: [UserUpsertWithWhereUniqueWithoutFollowedByInput!]
}

input UserUpdateManyWithoutFollowingInput {
  connect: [UserWhereUniqueInput!]
  connectOrCreate: [UserCreateOrConnectWithoutUserInput!]
  create: [UserCreateWithoutFollowingInput!]
  delete: [UserWhereUniqueInput!]
  deleteMany: [UserScalarWhereInput!]
  disconnect: [UserWhereUniqueInput!]
  set: [UserWhereUniqueInput!]
  update: [UserUpdateWithWhereUniqueWithoutFollowingInput!]
  updateMany: [UserUpdateManyWithWhereNestedInput!]
  upsert: [UserUpsertWithWhereUniqueWithoutFollowingInput!]
}

input UserUpdateManyWithoutGroupsInput {
  connect: [UserWhereUniqueInput!]
  connectOrCreate: [UserCreateOrConnectWithoutGroupInput!]
  create: [UserCreateWithoutGroupsInput!]
  delete: [UserWhereUniqueInput!]
  deleteMany: [UserScalarWhereInput!]
  disconnect: [UserWhereUniqueInput!]
  set: [UserWhereUniqueInput!]
  update: [UserUpdateWithWhereUniqueWithoutGroupsInput!]
  updateMany: [UserUpdateManyWithWhereNestedInput!]
  upsert: [UserUpsertWithWhereUniqueWithoutGroupsInput!]
}

input UserUpdateManyWithoutRolesInput {
  connect: [UserWhereUniqueInput!]
  connectOrCreate: [UserCreateOrConnectWithoutRoleInput!]
  create: [UserCreateWithoutRolesInput!]
  delete: [UserWhereUniqueInput!]
  deleteMany: [UserScalarWhereInput!]
  disconnect: [UserWhereUniqueInput!]
  set: [UserWhereUniqueInput!]
  update: [UserUpdateWithWhereUniqueWithoutRolesInput!]
  updateMany: [UserUpdateManyWithWhereNestedInput!]
  upsert: [UserUpsertWithWhereUniqueWithoutRolesInput!]
}

input UserUpdateManyWithoutUserPoolInput {
  connect: [UserWhereUniqueInput!]
  connectOrCreate: [UserCreateOrConnectWithoutUserPoolInput!]
  create: [UserCreateWithoutUserPoolInput!]
  delete: [UserWhereUniqueInput!]
  deleteMany: [UserScalarWhereInput!]
  disconnect: [UserWhereUniqueInput!]
  set: [UserWhereUniqueInput!]
  update: [UserUpdateWithWhereUniqueWithoutUserPoolInput!]
  updateMany: [UserUpdateManyWithWhereNestedInput!]
  upsert: [UserUpsertWithWhereUniqueWithoutUserPoolInput!]
}

input UserUpdateManyWithWhereNestedInput {
  data: UserUpdateManyDataInput!
  where: UserScalarWhereInput!
}

input UserUpdateOneRequiredWithoutAuthorizationCodesInput {
  connect: UserWhereUniqueInput
  connectOrCreate: UserCreateOrConnectWithoutoAuthAuthorizationCodeInput
  create: UserCreateWithoutAuthorizationCodesInput
  update: UserUpdateWithoutAuthorizationCodesDataInput
  upsert: UserUpsertWithoutAuthorizationCodesInput
}

input UserUpdateOneRequiredWithoutNotificationInput {
  connect: UserWhereUniqueInput
  connectOrCreate: UserCreateOrConnectWithoutNotificationInput
  create: UserCreateWithoutNotificationInput
  update: UserUpdateWithoutNotificationDataInput
  upsert: UserUpsertWithoutNotificationInput
}

input UserUpdateOneRequiredWithoutNotificationsInput {
  connect: UserWhereUniqueInput
  connectOrCreate: UserCreateOrConnectWithoutNotificationInput
  create: UserCreateWithoutNotificationsInput
  update: UserUpdateWithoutNotificationsDataInput
  upsert: UserUpsertWithoutNotificationsInput
}

input UserUpdateOneWithoutAccessTokensInput {
  connect: UserWhereUniqueInput
  connectOrCreate: UserCreateOrConnectWithoutoAuthAccessTokenInput
  create: UserCreateWithoutAccessTokensInput
  delete: Boolean
  disconnect: Boolean
  update: UserUpdateWithoutAccessTokensDataInput
  upsert: UserUpsertWithoutAccessTokensInput
}

input UserUpdateOneWithoutRefreshTokensInput {
  connect: UserWhereUniqueInput
  connectOrCreate: UserCreateOrConnectWithoutoAuthRefreshTokenInput
  create: UserCreateWithoutRefreshTokensInput
  delete: Boolean
  disconnect: Boolean
  update: UserUpdateWithoutRefreshTokensDataInput
  upsert: UserUpsertWithoutRefreshTokensInput
}

input UserUpdateWithoutAccessTokensDataInput {
  accountStatusType: EnumAccountStatusTypeFieldUpdateOperationsInput
  AuthorizationCodes: oAuthAuthorizationCodeUpdateManyWithoutUserInput
  createdAt: DateTimeFieldUpdateOperationsInput
  Devices: UserDeviceUpdateManyWithoutUserInput
  email: StringFieldUpdateOperationsInput
  FollowedBy: UserUpdateManyWithoutFollowingInput
  Following: UserUpdateManyWithoutFollowedByInput
  Groups: GroupUpdateManyWithoutUsersInput
  id: StringFieldUpdateOperationsInput
  isDisabled: BoolFieldUpdateOperationsInput
  isExternalProvider: BoolFieldUpdateOperationsInput
  Notification: NotificationUpdateManyWithoutSenderInput
  Notifications: NotificationUpdateManyWithoutRecipentInput
  password: StringFieldUpdateOperationsInput
  PasswordResets: PasswordResetUpdateManyWithoutUserInput
  Profile: ProfileUpdateOneWithoutUserInput
  RefreshTokens: oAuthRefreshTokenUpdateManyWithoutUserInput
  Roles: RoleUpdateManyWithoutUsersInput
  sub: StringFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
  username: StringFieldUpdateOperationsInput
  UserPool: UserPoolUpdateOneRequiredWithoutUsersInput
}

input UserUpdateWithoutAuthorizationCodesDataInput {
  AccessTokens: oAuthAccessTokenUpdateManyWithoutUserInput
  accountStatusType: EnumAccountStatusTypeFieldUpdateOperationsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  Devices: UserDeviceUpdateManyWithoutUserInput
  email: StringFieldUpdateOperationsInput
  FollowedBy: UserUpdateManyWithoutFollowingInput
  Following: UserUpdateManyWithoutFollowedByInput
  Groups: GroupUpdateManyWithoutUsersInput
  id: StringFieldUpdateOperationsInput
  isDisabled: BoolFieldUpdateOperationsInput
  isExternalProvider: BoolFieldUpdateOperationsInput
  Notification: NotificationUpdateManyWithoutSenderInput
  Notifications: NotificationUpdateManyWithoutRecipentInput
  password: StringFieldUpdateOperationsInput
  PasswordResets: PasswordResetUpdateManyWithoutUserInput
  Profile: ProfileUpdateOneWithoutUserInput
  RefreshTokens: oAuthRefreshTokenUpdateManyWithoutUserInput
  Roles: RoleUpdateManyWithoutUsersInput
  sub: StringFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
  username: StringFieldUpdateOperationsInput
  UserPool: UserPoolUpdateOneRequiredWithoutUsersInput
}

input UserUpdateWithoutFollowedByDataInput {
  AccessTokens: oAuthAccessTokenUpdateManyWithoutUserInput
  accountStatusType: EnumAccountStatusTypeFieldUpdateOperationsInput
  AuthorizationCodes: oAuthAuthorizationCodeUpdateManyWithoutUserInput
  createdAt: DateTimeFieldUpdateOperationsInput
  Devices: UserDeviceUpdateManyWithoutUserInput
  email: StringFieldUpdateOperationsInput
  Following: UserUpdateManyWithoutFollowedByInput
  Groups: GroupUpdateManyWithoutUsersInput
  id: StringFieldUpdateOperationsInput
  isDisabled: BoolFieldUpdateOperationsInput
  isExternalProvider: BoolFieldUpdateOperationsInput
  Notification: NotificationUpdateManyWithoutSenderInput
  Notifications: NotificationUpdateManyWithoutRecipentInput
  password: StringFieldUpdateOperationsInput
  PasswordResets: PasswordResetUpdateManyWithoutUserInput
  Profile: ProfileUpdateOneWithoutUserInput
  RefreshTokens: oAuthRefreshTokenUpdateManyWithoutUserInput
  Roles: RoleUpdateManyWithoutUsersInput
  sub: StringFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
  username: StringFieldUpdateOperationsInput
  UserPool: UserPoolUpdateOneRequiredWithoutUsersInput
}

input UserUpdateWithoutFollowingDataInput {
  AccessTokens: oAuthAccessTokenUpdateManyWithoutUserInput
  accountStatusType: EnumAccountStatusTypeFieldUpdateOperationsInput
  AuthorizationCodes: oAuthAuthorizationCodeUpdateManyWithoutUserInput
  createdAt: DateTimeFieldUpdateOperationsInput
  Devices: UserDeviceUpdateManyWithoutUserInput
  email: StringFieldUpdateOperationsInput
  FollowedBy: UserUpdateManyWithoutFollowingInput
  Groups: GroupUpdateManyWithoutUsersInput
  id: StringFieldUpdateOperationsInput
  isDisabled: BoolFieldUpdateOperationsInput
  isExternalProvider: BoolFieldUpdateOperationsInput
  Notification: NotificationUpdateManyWithoutSenderInput
  Notifications: NotificationUpdateManyWithoutRecipentInput
  password: StringFieldUpdateOperationsInput
  PasswordResets: PasswordResetUpdateManyWithoutUserInput
  Profile: ProfileUpdateOneWithoutUserInput
  RefreshTokens: oAuthRefreshTokenUpdateManyWithoutUserInput
  Roles: RoleUpdateManyWithoutUsersInput
  sub: StringFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
  username: StringFieldUpdateOperationsInput
  UserPool: UserPoolUpdateOneRequiredWithoutUsersInput
}

input UserUpdateWithoutGroupsDataInput {
  AccessTokens: oAuthAccessTokenUpdateManyWithoutUserInput
  accountStatusType: EnumAccountStatusTypeFieldUpdateOperationsInput
  AuthorizationCodes: oAuthAuthorizationCodeUpdateManyWithoutUserInput
  createdAt: DateTimeFieldUpdateOperationsInput
  Devices: UserDeviceUpdateManyWithoutUserInput
  email: StringFieldUpdateOperationsInput
  FollowedBy: UserUpdateManyWithoutFollowingInput
  Following: UserUpdateManyWithoutFollowedByInput
  id: StringFieldUpdateOperationsInput
  isDisabled: BoolFieldUpdateOperationsInput
  isExternalProvider: BoolFieldUpdateOperationsInput
  Notification: NotificationUpdateManyWithoutSenderInput
  Notifications: NotificationUpdateManyWithoutRecipentInput
  password: StringFieldUpdateOperationsInput
  PasswordResets: PasswordResetUpdateManyWithoutUserInput
  Profile: ProfileUpdateOneWithoutUserInput
  RefreshTokens: oAuthRefreshTokenUpdateManyWithoutUserInput
  Roles: RoleUpdateManyWithoutUsersInput
  sub: StringFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
  username: StringFieldUpdateOperationsInput
  UserPool: UserPoolUpdateOneRequiredWithoutUsersInput
}

input UserUpdateWithoutNotificationDataInput {
  AccessTokens: oAuthAccessTokenUpdateManyWithoutUserInput
  accountStatusType: EnumAccountStatusTypeFieldUpdateOperationsInput
  AuthorizationCodes: oAuthAuthorizationCodeUpdateManyWithoutUserInput
  createdAt: DateTimeFieldUpdateOperationsInput
  Devices: UserDeviceUpdateManyWithoutUserInput
  email: StringFieldUpdateOperationsInput
  FollowedBy: UserUpdateManyWithoutFollowingInput
  Following: UserUpdateManyWithoutFollowedByInput
  Groups: GroupUpdateManyWithoutUsersInput
  id: StringFieldUpdateOperationsInput
  isDisabled: BoolFieldUpdateOperationsInput
  isExternalProvider: BoolFieldUpdateOperationsInput
  Notifications: NotificationUpdateManyWithoutRecipentInput
  password: StringFieldUpdateOperationsInput
  PasswordResets: PasswordResetUpdateManyWithoutUserInput
  Profile: ProfileUpdateOneWithoutUserInput
  RefreshTokens: oAuthRefreshTokenUpdateManyWithoutUserInput
  Roles: RoleUpdateManyWithoutUsersInput
  sub: StringFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
  username: StringFieldUpdateOperationsInput
  UserPool: UserPoolUpdateOneRequiredWithoutUsersInput
}

input UserUpdateWithoutNotificationsDataInput {
  AccessTokens: oAuthAccessTokenUpdateManyWithoutUserInput
  accountStatusType: EnumAccountStatusTypeFieldUpdateOperationsInput
  AuthorizationCodes: oAuthAuthorizationCodeUpdateManyWithoutUserInput
  createdAt: DateTimeFieldUpdateOperationsInput
  Devices: UserDeviceUpdateManyWithoutUserInput
  email: StringFieldUpdateOperationsInput
  FollowedBy: UserUpdateManyWithoutFollowingInput
  Following: UserUpdateManyWithoutFollowedByInput
  Groups: GroupUpdateManyWithoutUsersInput
  id: StringFieldUpdateOperationsInput
  isDisabled: BoolFieldUpdateOperationsInput
  isExternalProvider: BoolFieldUpdateOperationsInput
  Notification: NotificationUpdateManyWithoutSenderInput
  password: StringFieldUpdateOperationsInput
  PasswordResets: PasswordResetUpdateManyWithoutUserInput
  Profile: ProfileUpdateOneWithoutUserInput
  RefreshTokens: oAuthRefreshTokenUpdateManyWithoutUserInput
  Roles: RoleUpdateManyWithoutUsersInput
  sub: StringFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
  username: StringFieldUpdateOperationsInput
  UserPool: UserPoolUpdateOneRequiredWithoutUsersInput
}

input UserUpdateWithoutRefreshTokensDataInput {
  AccessTokens: oAuthAccessTokenUpdateManyWithoutUserInput
  accountStatusType: EnumAccountStatusTypeFieldUpdateOperationsInput
  AuthorizationCodes: oAuthAuthorizationCodeUpdateManyWithoutUserInput
  createdAt: DateTimeFieldUpdateOperationsInput
  Devices: UserDeviceUpdateManyWithoutUserInput
  email: StringFieldUpdateOperationsInput
  FollowedBy: UserUpdateManyWithoutFollowingInput
  Following: UserUpdateManyWithoutFollowedByInput
  Groups: GroupUpdateManyWithoutUsersInput
  id: StringFieldUpdateOperationsInput
  isDisabled: BoolFieldUpdateOperationsInput
  isExternalProvider: BoolFieldUpdateOperationsInput
  Notification: NotificationUpdateManyWithoutSenderInput
  Notifications: NotificationUpdateManyWithoutRecipentInput
  password: StringFieldUpdateOperationsInput
  PasswordResets: PasswordResetUpdateManyWithoutUserInput
  Profile: ProfileUpdateOneWithoutUserInput
  Roles: RoleUpdateManyWithoutUsersInput
  sub: StringFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
  username: StringFieldUpdateOperationsInput
  UserPool: UserPoolUpdateOneRequiredWithoutUsersInput
}

input UserUpdateWithoutRolesDataInput {
  AccessTokens: oAuthAccessTokenUpdateManyWithoutUserInput
  accountStatusType: EnumAccountStatusTypeFieldUpdateOperationsInput
  AuthorizationCodes: oAuthAuthorizationCodeUpdateManyWithoutUserInput
  createdAt: DateTimeFieldUpdateOperationsInput
  Devices: UserDeviceUpdateManyWithoutUserInput
  email: StringFieldUpdateOperationsInput
  FollowedBy: UserUpdateManyWithoutFollowingInput
  Following: UserUpdateManyWithoutFollowedByInput
  Groups: GroupUpdateManyWithoutUsersInput
  id: StringFieldUpdateOperationsInput
  isDisabled: BoolFieldUpdateOperationsInput
  isExternalProvider: BoolFieldUpdateOperationsInput
  Notification: NotificationUpdateManyWithoutSenderInput
  Notifications: NotificationUpdateManyWithoutRecipentInput
  password: StringFieldUpdateOperationsInput
  PasswordResets: PasswordResetUpdateManyWithoutUserInput
  Profile: ProfileUpdateOneWithoutUserInput
  RefreshTokens: oAuthRefreshTokenUpdateManyWithoutUserInput
  sub: StringFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
  username: StringFieldUpdateOperationsInput
  UserPool: UserPoolUpdateOneRequiredWithoutUsersInput
}

input UserUpdateWithoutUserPoolDataInput {
  AccessTokens: oAuthAccessTokenUpdateManyWithoutUserInput
  accountStatusType: EnumAccountStatusTypeFieldUpdateOperationsInput
  AuthorizationCodes: oAuthAuthorizationCodeUpdateManyWithoutUserInput
  createdAt: DateTimeFieldUpdateOperationsInput
  Devices: UserDeviceUpdateManyWithoutUserInput
  email: StringFieldUpdateOperationsInput
  FollowedBy: UserUpdateManyWithoutFollowingInput
  Following: UserUpdateManyWithoutFollowedByInput
  Groups: GroupUpdateManyWithoutUsersInput
  id: StringFieldUpdateOperationsInput
  isDisabled: BoolFieldUpdateOperationsInput
  isExternalProvider: BoolFieldUpdateOperationsInput
  Notification: NotificationUpdateManyWithoutSenderInput
  Notifications: NotificationUpdateManyWithoutRecipentInput
  password: StringFieldUpdateOperationsInput
  PasswordResets: PasswordResetUpdateManyWithoutUserInput
  Profile: ProfileUpdateOneWithoutUserInput
  RefreshTokens: oAuthRefreshTokenUpdateManyWithoutUserInput
  Roles: RoleUpdateManyWithoutUsersInput
  sub: StringFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
  username: StringFieldUpdateOperationsInput
}

input UserUpdateWithWhereUniqueWithoutFollowedByInput {
  data: UserUpdateWithoutFollowedByDataInput!
  where: UserWhereUniqueInput!
}

input UserUpdateWithWhereUniqueWithoutFollowingInput {
  data: UserUpdateWithoutFollowingDataInput!
  where: UserWhereUniqueInput!
}

input UserUpdateWithWhereUniqueWithoutGroupsInput {
  data: UserUpdateWithoutGroupsDataInput!
  where: UserWhereUniqueInput!
}

input UserUpdateWithWhereUniqueWithoutRolesInput {
  data: UserUpdateWithoutRolesDataInput!
  where: UserWhereUniqueInput!
}

input UserUpdateWithWhereUniqueWithoutUserPoolInput {
  data: UserUpdateWithoutUserPoolDataInput!
  where: UserWhereUniqueInput!
}

input UserUpsertWithoutAccessTokensInput {
  create: UserCreateWithoutAccessTokensInput!
  update: UserUpdateWithoutAccessTokensDataInput!
}

input UserUpsertWithoutAuthorizationCodesInput {
  create: UserCreateWithoutAuthorizationCodesInput!
  update: UserUpdateWithoutAuthorizationCodesDataInput!
}

input UserUpsertWithoutNotificationInput {
  create: UserCreateWithoutNotificationInput!
  update: UserUpdateWithoutNotificationDataInput!
}

input UserUpsertWithoutNotificationsInput {
  create: UserCreateWithoutNotificationsInput!
  update: UserUpdateWithoutNotificationsDataInput!
}

input UserUpsertWithoutRefreshTokensInput {
  create: UserCreateWithoutRefreshTokensInput!
  update: UserUpdateWithoutRefreshTokensDataInput!
}

input UserUpsertWithWhereUniqueWithoutFollowedByInput {
  create: UserCreateWithoutFollowedByInput!
  update: UserUpdateWithoutFollowedByDataInput!
  where: UserWhereUniqueInput!
}

input UserUpsertWithWhereUniqueWithoutFollowingInput {
  create: UserCreateWithoutFollowingInput!
  update: UserUpdateWithoutFollowingDataInput!
  where: UserWhereUniqueInput!
}

input UserUpsertWithWhereUniqueWithoutGroupsInput {
  create: UserCreateWithoutGroupsInput!
  update: UserUpdateWithoutGroupsDataInput!
  where: UserWhereUniqueInput!
}

input UserUpsertWithWhereUniqueWithoutRolesInput {
  create: UserCreateWithoutRolesInput!
  update: UserUpdateWithoutRolesDataInput!
  where: UserWhereUniqueInput!
}

input UserUpsertWithWhereUniqueWithoutUserPoolInput {
  create: UserCreateWithoutUserPoolInput!
  update: UserUpdateWithoutUserPoolDataInput!
  where: UserWhereUniqueInput!
}

input UserWhereUniqueInput {
  email_isExternalProvider: EmailIsExternalProviderCompoundUniqueInput
  id: String
  sub: String
  username_userPoolId: UsernameUserPoolIdCompoundUniqueInput
}
